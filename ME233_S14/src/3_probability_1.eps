%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: 3_probability_1.pdf
%%Creator: Adobe Acrobat 9.5.5
%%For: slt
%%CreationDate: 2013/12/9, 18:16:35
%%BoundingBox: 20 639 256 767
%%HiResBoundingBox: 0 0 595.2200 842
%%CropBox: 0 0 595.2200 842
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1029 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c043 52.372728, 2009/01/18-15:08:04        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   xmp:CreateDate="2013-12-09T18:14:03-08:00"
   xmp:CreatorTool="PScript5.dll Version 5.2.2"
   xmp:ModifyDate="2013-12-09T18:14:03-08:00"
   pdf:Producer="Acrobat Distiller 9.5.5 (Windows)"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:c937dd3f-a10e-48ef-b1e9-1c3472c13f02"
   xmpMM:InstanceID="uuid:32622174-4763-4efe-ac0f-45b3466aa622">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Visio-ME233.vsd</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>slt</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -842 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 842 li
595.22 842 li
595.22 0 li
cp
clp
[1 0 0 1 0 0 ]ct
.24 lw
1 lc
1 lj
10 ml
[] 0 dsh
false sadj
85.08 84.18 mo
85.08 189.96 li
false sop
.75021 .679683 .670222 .90164 cmyk
@
82.32 84.84 mo
85.08 76.5601 li
87.84 84.84 li
82.32 84.84 li
ef
247.56 189.96 mo
85.08 189.96 li
@
246.84 187.2 mo
255.12 189.96 li
246.84 192.72 li
246.84 187.2 li
ef
1.2 lw
120.48 133.26 mo
120.48 189.96 li
@
120.48 133.26 mo
219.72 133.26 li
219.72 136.08 li
@
219.72 189.96 mo
219.72 136.08 li
@
[1.2 2.3999 ] 0 dsh
85.08 133.26 mo
120.48 133.26 li
@
/0 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: RDHAAA+Ribbit'sCMMI12 Initial
ct_T42Dict begin
-0.027 -0.25 1.023 0.75
 256 array 0 1 255 {1 index exch /.notdef put} for  /RDHAAA+Ribbit'sCMMI12
Type42DictBegin
[<00010000000c000c000c000c4f532f326f9264ec000000cc000000606376
7420058d00a00000012c0000001c6670676d06599c370000014800000173
676c7966a4ddb643000008fc0000041e68656164e66b6afb000002bc0000
00366868656107ce0628000002f400000024686d74782485164a00000318
000002146c6f636119661b750000052c0000010c6d6178700293020f0000
0638000000206e616d652692983f000006580000024270726570fffbc3c3
0000089c0000006067646972000000000000000000000000000201c001f4
0005000402bc028a0000008c02bc028a000001dd003200fa000002000603
080000020004000000a30000004000000000000000003141534300010020
221902bcff38004302ee00fa000000010000000001f402bc000000200003
00140016001d004100000015ff3e000a01af000a01c4000b02ab0015b800
002c4bb800095058b101018e59b801ff85b800441db9000900035f5e2db8
00012c2020456944b001602db800022cb800012a212db800032c2046b003
254652582359208a208a49648a204620686164b004254620686164525823
658a592f20b00053586920b000545821b040591b6920b000545821b04065
59593a2db800042c2046b00425465258238a592046206a6164b004254620
6a61645258238a592ffd2db800052c4b20b0032650585158b080441bb040
44591b21212045b0c05058b0c0441b2159592db800062c2020456944b001
602020457d691844b001602db800072cb800062a2db800082c4b20b00326
5358b0401bb000598a8a20b0032653582321b0808a8a1b8a235920b00326
53582321b800c08a8a1b8a235920b0032653582321b801008a8a1b8a2359
20b0032653582321b801408a8a1b8a235920b80003265358b0032545b801
8050582321b8018023211bb003254523212321591b2159442db800092c4b
535845441b2121592d0000010000000119998703db025f0f3cf5000903e8
00000000c1b4874400000000c1b48744ffe1ff06040202ee000000090002
0000000000000001000002eeff56000003d3ffe1fe92040203e800fa0000
000000000000000000000085014d000000000000014d0000014d000002d9
003402fe0039023b001b028d00160256001b026f00280229001701fc0013
01b2002801e3001b01c80028015a003802340037023b003501e4003501ac
001601a9001a0210001b0244002f0265001f027d001b0262000c01ca001a
0241001b0329001a01f900490162001f0281003103d3003603d3003603d3
003603d30036011000360110003601ea001901ea001901ea002a01ea005d
01ea002b01ea002901ea001b01ea003101ea002a01ea003601ea002901ea
002a011000570110005702fa005201ea003602fa005201ea000002050026
02de002202e8003002bd0032032d002f02d5002e027a002e03040032032b
002e01b00029021d004f0341002e029a002e03b300310310002e02ec0030
0277002f0308003002e9002f025a0033023e001802990044023b0036039c
0035032d001902380021029e0039017d0036017d0050017d003603d30037
03d30037019b000d0202002801a0002d01a5002801fd002801c6002d01e3
003301d5001202340037014e001b0195fff301fd00370124002e0358001b
0248001b01d7002901ebffe101b2002701b9001b01cd003301620016022d
001b01d9001b02bc001b022c001c01dd001b01c7002b0139001b017afff3
026f004b01ea00b501100107014d0000025f002e02a800220330002f02ec
0030032b002e02f6004d018b002e01ac002d024d001c022b001a01f9001c
022d00260000000500050005000500050005000500050005000500050005
000500050005000500050005000500050005000500050005000500050005
000500050005000500050005000500050005000500050005000500050005
000500050005000500050005000500050005000500050005000500050005
000500050005000500050005000500050005000500050005000500050005
000500050005000500050005000500050005000500050005000500050005
000500050005000500050005000500050005000500050005000500050005
0005000500f300f300f300f300f300f300f300f3020f020f020f020f020f
020f020f020f020f020f020f020f020f020f020f020f020f020f020f020f
020f000100000085009b000300000000000100000000000a000002000173
000000000000000a007e0001000000000000004500000001000000000003
0015004500010000000000040015005a00010000000000060015006f0003
000104090000008a00840003000104090001002a010e0003000104090002
000e01380003000104090003002a01460003000104090004002a01700003
000104090006002a019a436f707972696768742028432920313939372041
6d65726963616e204d617468656d61746963616c20536f63696574792e20
416c6c205269676874732052657365727665644d4b4845444b2b52696262
69742773434d4d4931324d4b4845444b2b5269626269742773434d4d4931
324d4b4845444b2b5269626269742773434d4d4931320043006f00700079
007200690067006800740020002800430029002000310039003900370020
0041006d00650072006900630061006e0020004d0061007400680065006d
00610074006900630061006c00200053006f00630069006500740079002e
00200041006c006c00200052006900670068007400730020005200650073
00650072007600650064004d004b004800450044004b002b005200690062
006200690074002700730043004d004d0049003100320052006500670075
006c00610072004d004b004800450044004b002b00520069006200620069
0074002700730043004d004d004900310032004d004b004800450044004b
002b005200690062006200690074002700730043004d004d004900310032
004d004b004800450044004b002b00520069006200620069007400270073
0043004d004d0049003100320000b800002b00ba0001000200022b01ba00
03000100022b01bf000300550046003600270018000000082b00bf000100
fa00cd00a00065003d000000082bbf000200be009c00790065003d000000
082b00ba0004000500072bb8000020457d69184400>
[1055 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 10 104 <0002ffe1ff3e01de01b9001d007400a9bb00440003001200042b00b80000
4558b800372f1bb9003700083e59b800004558b8003f2f1bb9003f00083e
59b800004558b800602f1bb9006000063e59b800004558b800652f1bb900
6500063e59b800004558b800692f1bb9006900063e59b800004558b80049
2f1bb9004900043e59b900080001f4b8003f10b900150001f4b80024d0ba
003a00600037111239ba004e00600037111239b8006010b9005a0002f4b8
006fd03031370e0115141e0233323e02373e0335342623220e02070e0107
273e0135342623220e02070e0123222635343e02373e01333216173e0333
321e0215140e0223222e02270e0515141e0233321615140623222622262b
01220623222635343633323e0237a7010206101f1a11221f1a0909130f0a
1f210e1a1610040c22053c03040e110f17110d06050406050605090b070e
23161e33060417232b181c2f21132a43542a141d160f0402080c0c0a0702
0a14110d0b0d0508191b19082b0a140a08040d090f120b050374040a0202
1c211b111c2514133a3e38122739090c0d040b27150b0e1412171714212b
161107060301161f210e1d17262605191a14172a3a22376a52330d14170b
06212c312a1e030305050203080e0401010208020e0503090f0b>RDHAAA+Ribbit'sCMMI12 AddT42Char 
1 486 112 <0001001cfff6020201b9007400ffb800752fb800762fb8006cdcb9007200
03f4ba0000006c0072111239b80003d0b800032fb8007510b8002dd0b800
2d2fba0025002d006c111239b900330003f4b80028d0b800282fba003800
2d0033111239b8003310b8003bd0b8003b2fba0062002d006c111239b800
7210b80067d0b800672f00b800004558b8005d2f1bb9005d00083e59b800
004558b800672f1bb9006700083e59b800004558b800202f1bb900200004
3e59b800004558b800282f1bb9002800043e59ba0030003800032bba0000
006f00032bb8006710b900030001f4b8002010b900110001f4ba00250038
0030111239b8003bd0b8000310b8004dd0ba0062006f0000111239303101
2e01232206070e01070e0315141633323e02373e01333215140e0223222e
02270e0123222e0235343633321615140e02071e0133323e02373e03373e
0135342e0223220e02070e0123222635343e0233321e02173e0333321e02
15140623222635343601da10210223310b081209060804021c1a1125231f
0a0204070a14273b260e1f1d170610332410201a1020120e140409120d10
1f04141f18100605080708060909040c15110b2225230d02040605061427
3b26071b1f1d09031119241710201a101c170b161401980a033b2d1c4923
19201710081f24101f31210607090832352a08131e161f30070f1710181d
110f050e0f0c030a0313202917161e1c21182428110917140e0a1d332a03
0706030832352a040f201c071b1a13070f171014210e120e1e000000>RDHAAA+Ribbit'sCMMI12 AddT42Char 
1 0 0 <00000000000000000000>RDHAAA+Ribbit'sCMMI12 AddT42Char 
RDHAAA+Ribbit'sCMMI12 /CharStrings get begin
/p 104 def
/x 112 def
end
RDHAAA+Ribbit'sCMMI12 /Encoding get
dup 112 /p put
dup 120 /x put
pop
end
%ADOEndSubsetFont
/EICMAE+Ribbit'sCMMI12 /RDHAAA+Ribbit'sCMMI12 findfont ct_VMDictPut
/EICMAE+Ribbit'sCMMI12*1 
[112{/.notdef}rp /p 7{/.notdef}rp /x 135{/.notdef}rp]
EICMAE+Ribbit'sCMMI12 nf
EICMAE+Ribbit'sCMMI12*1 [12.5878 0 0 -12.5266 0 0 ]msf
54.6 93.9597 mo
(p)sh
%ADOBeginSubsetFont: CBIAAA+Ribbit'sCMMI10 Initial
ct_T42Dict begin
-0.031 -0.25 1.047 0.75
 256 array 0 1 255 {1 index exch /.notdef put} for  /CBIAAA+Ribbit'sCMMI10
Type42DictBegin
[<00010000000c000c000c000c4f532f326e9264f6000000cc000000606376
7420058a00b60000012c0000001c6670676d06599c370000014800000173
676c7966b228017c000008fc0000029268656164e6806b01000002bc0000
00366868656107e30637000002f400000024686d74782ad0163e00000318
000002146c6f63612232237b0000052c0000010c6d617870029302120000
0638000000206e616d65268e9a41000006580000024270726570d8f062b3
0000089c0000006067646972000000000000000000000000000201ca01f4
0005000402bc028a0000008c02bc028a000001dd003200fa000002000603
070000020004000000a30000004000000000000000003141534300010020
221902bcff38004302ee00fa000000010000000001f402bc000000200003
0014001f0019004800000016ff3e000b01af000b01c5000d02ab0016b800
002c4bb800095058b101018e59b801ff85b800441db9000900035f5e2db8
00012c2020456944b001602db800022cb800012a212db800032c2046b003
254652582359208a208a49648a204620686164b004254620686164525823
658a592f20b00053586920b000545821b040591b6920b000545821b04065
59593a2db800042c2046b00425465258238a592046206a6164b004254620
6a61645258238a592ffd2db800052c4b20b0032650585158b080441bb040
44591b21212045b0c05058b0c0441b2159592db800062c2020456944b001
602020457d691844b001602db800072cb800062a2db800082c4b20b00326
5358b0401bb000598a8a20b0032653582321b0808a8a1b8a235920b00326
53582321b800c08a8a1b8a235920b0032653582321b801008a8a1b8a2359
20b0032653582321b801408a8a1b8a235920b80003265358b0032545b801
8050582321b8018023211bb003254523212321591b2159442db800092c4b
535845441b2121592d0000010000000119999f210e7c5f0f3cf5000903e8
00000000c1b4874700000000c1b48747ffe0ff06041802ee000000090002
0000000000000001000002eeff56000003e8ffe0fe8c041803e800fa0000
000000000000000000000085014d000000000000014d0000014d000002e6
0035030c003a0247001c029b00170264001b028000290236001902060012
01bc002a01f1001d01d5002a01620038024000370247003501ee003501b6
001701b5001b021c001d025400310272001f028b001d026e000d01d2001a
024f001d033c001b0205004a016b001f028e003203e8003703e8003703e8
003703e80037011600370116003701f4001a01f4001a01f4002801f4005d
01f4002c01f4002a01f4001c01f4003201f4002a01f4003701f4002a01f4
002a0116005601160056030a005301f40037030a005301f4000402130028
02ee002302f7002a02cb0032033c002802e200260283002603120032033f
002701b80022022b00470351002602a9002703ca002a0323002702fb0031
028200280317003102f70029026500340248001802ab00430247003803b0
0037033c001b0245002302ab003a018500370185004f0185003703e80037
03e8003701a1000b0211002801ad002f01b100290208002801d2002e01ea
003501dd000f024000370159001d019cfff302090037012a002c036e001d
0258001d01e5002901f7ffe001be002801c3001d01d5003401690017023c
001d01e5001d02cc001d023c001d01ea001d01d1002b0142001d0180fff3
027c004c01f400b601160108014d00000267002702b600230341003102fb
0031033f0027030400500196002f01b6002e025b001e023a001b0205001e
023b00260000000500050005000500050005000500050005000500050005
000500050005000500050005000500050005000500050005000500050005
000500050005000500050005000500050005000500050005000500050005
000500050005000500050005000500050005000500050005000500050005
000500050005000500050005000500050005000500050005000500050005
000500050005000500050005000500050149014901490149014901490149
014901490149014901490149014901490149014901490149014901490149
014901490149014901490149014901490149014901490149014901490149
014901490149014901490149014901490149014901490149014901490149
0149000100000085009e000300000000000100000000000a000002000173
000000000000000a007e0001000000000000004500000001000000000003
0015004500010000000000040015005a00010000000000060015006f0003
000104090000008a00840003000104090001002a010e0003000104090002
000e01380003000104090003002a01460003000104090004002a01700003
000104090006002a019a436f707972696768742028432920313939372041
6d65726963616e204d617468656d61746963616c20536f63696574792e20
416c6c205269676874732052657365727665644d4b4845444d2b52696262
69742773434d4d4931304d4b4845444d2b5269626269742773434d4d4931
304d4b4845444d2b5269626269742773434d4d4931300043006f00700079
007200690067006800740020002800430029002000310039003900370020
0041006d00650072006900630061006e0020004d0061007400680065006d
00610074006900630061006c00200053006f00630069006500740079002e
00200041006c006c00200052006900670068007400730020005200650073
00650072007600650064004d004b004800450044004d002b005200690062
006200690074002700730043004d004d0049003100300052006500670075
006c00610072004d004b004800450044004d002b00520069006200620069
0074002700730043004d004d004900310030004d004b004800450044004d
002b005200690062006200690074002700730043004d004d004900310030
004d004b004800450044004d002b00520069006200620069007400270073
0043004d004d0049003100300000b800002b00ba0001000200022b01ba00
03000100022b01bf0003004d003f003100230015000000082b00bf000100
b20092007f005b0037000000082bbf000200dc00b4007f005b0037000000
082b00ba0004000500072bb8000020457d69184400>
[659 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 10 80 <0001001b0000035302ab008d010f00b800004558b8000d2f1bb9000d000c
3e59b800004558b800102f1bb90010000c3e59b800004558b800132f1bb9
0013000c3e59b800004558b800792f1bb90079000c3e59b800004558b800
7e2f1bb9007e000c3e59b800004558b800812f1bb90081000c3e59b80000
4558b800312f1bb9003100043e59b800004558b800362f1bb9003600043e
59b800004558b8003b2f1bb9003b00043e59b800004558b8005a2f1bb900
5a00043e59b800004558b8005d2f1bb9005d00043e59b800004558b80060
2f1bb9006000043e59b8000d10b900080001f4b80019d0b8003110b9002b
0001f4b80041d0ba00480031000d111239b80066d0b8001910b80073d0b8
0087d0ba008d0031000d1112393031013e0135342e022326353436333216
333236333216151406070e01070e03071e03171e0333321615140623222e
0223220e02232226353436373e013534262f010e010f010e0115141e0233
3216151406232226232206232226353436373e01373e013f01032e032322
2635343633321e02333236333216151406070e0115301f010287060d0a0d
0e030c0e051b381c1730170a030c0a2d3c160c303a3e19091f25250f060a
101d19060c0e05091e211e090b2224230a030c0c081d1d02036510331766
09120a0d0e03020a0d051b391c1730170a030c0a264825050305d3760308
0f1b160a0d0d05091f201f09203f1f020d0c08201b0554024907120b0a0d
060202090f0503030a010e0501021f120b323f431a174c5758230f110903
03090e0501010101010103090d0501031406020408ef1237196c0a170c0b
0c060203080f0503030a010e0501021e28040304e30117080c080403080f
050101010303090d05010315050dc7000000>CBIAAA+Ribbit'sCMMI10 AddT42Char 
1 0 0 <00000000000000000000>CBIAAA+Ribbit'sCMMI10 AddT42Char 
CBIAAA+Ribbit'sCMMI10 /CharStrings get begin
/X 80 def
end
CBIAAA+Ribbit'sCMMI10 /Encoding get
dup 88 /X put
pop
end
%ADOEndSubsetFont
/EICMAF+Ribbit'sCMMI10 /CBIAAA+Ribbit'sCMMI10 findfont ct_VMDictPut
/EICMAF+Ribbit'sCMMI10*1 
[88{/.notdef}rp /X 167{/.notdef}rp]
EICMAF+Ribbit'sCMMI10 nf
EICMAF+Ribbit'sCMMI10*1 [6.3253 0 0 -6.2948 0 0 ]msf
60.78 97.1997 mo
(X)sh
%ADOBeginSubsetFont: VXVBAA+Ribbit'sCMR17 Initial
ct_T42Dict begin
-0.031 -0.25 0.941 0.746
 256 array 0 1 255 {1 index exch /.notdef put} for  /VXVBAA+Ribbit'sCMR17
Type42DictBegin
[<00010000000c000c000c000c4f532f326e9264fe000000cc000000606376
742000a4067a0000012c0000001e6670676d06599c370000014c00000173
676c79661eb2227a00000908000000f668656164e6165159000002c00000
00366868656106810372000002f800000024686d74780c4c172b0000031c
000002146c6f636118561897000005300000010c6d6178700294025a0000
063c000000206e616d65779fe8aa0000065c0000023770726570900dcfc9
0000089400000072676469720000000000000000000000000002019401f4
0005000402bc028a0000008c02bc028a000001dd003200fa000002000603
070000020004000000a30000004000000000000000003141534300400020
221902bcff38004302ed00fa000000010000000001f402bc000000200003
0014001a00100035004200000010ff3d000901ae000c0295000802ab0010
0000b800002c4bb800095058b101018e59b801ff85b800441db900090003
5f5e2db800012c2020456944b001602db800022cb800012a212db800032c
2046b003254652582359208a208a49648a204620686164b0042546206861
64525823658a592f20b00053586920b000545821b040591b6920b0005458
21b0406559593a2db800042c2046b00425465258238a592046206a6164b0
042546206a61645258238a592ffd2db800052c4b20b0032650585158b080
441bb04044591b21212045b0c05058b0c0441b2159592db800062c202045
6944b001602020457d691844b001602db800072cb800062a2db800082c4b
20b003265358b0401bb000598a8a20b0032653582321b0808a8a1b8a2359
20b0032653582321b800c08a8a1b8a235920b0032653582321b801008a8a
1b8a235920b0032653582321b801408a8a1b8a235920b80003265358b003
2545b8018050582321b8018023211bb003254523212321591b2159442db8
00092c4b535845441b2121592d000001000000010000141200db5f0f3cf5
000903e800000000c1b4874000000000c1b48740ffdfff0603b102ed0000
000900020000000000000001000002eeff56000003bbffdfffdb03b10001
00000000000000000000000000000085012e000000000000012e0000012e
000002670021029c002e02d0002e029c002e02d0002f020d001301f30013
01f3001302ed00130114ffdf01cb006001cb00bd01cb006b01cb005a02b5
01030196007c01cb00210345001703ae003b02d0002e00fa001200fa0054
01cb00190304002e01cb002e0304002e02d0002100fa00540162005a0162
002f01cb003802d0002e00fa0054012e000400fa005401cb002e01cb0026
01cb005701cb002901cb002101cb001401cb002901cb002601cb002e01cb
002101cb002600fa005400fa005400fa005402d0002e01b0002e01b0002e
02d0002e02b50017028e0034029c002e02c3003402740033025a003302d6
002e02b500330148002f01d7003502cf0033024000330352003502b50033
02d0002e0274003402d0002e02a8003401ff002e029c001c02b5003302b5
000a03bb000902b5000d02b500020233002e00fa006a01cb009b00fa000e
01cb006a00fa005400fa004701cb002801ff001f0196002101ff00210196
001b0114001601cb001401ff002100fa00220114ffdf01e5001f00fa0022
0304002101ff002101cb001b01ff001f01e500210162001f016700190162
000b01ff002101e5000a029c000a01e5000101e5000a0196001401cbfffa
0395fff401cb007601cb004801cb006202400033012e0000028100170304
002502d0002e02b50033029c002402ed001300fa002201cb003b01cb001f
029c002a02d0001b00000005000500050005000500050005000500050005
000500050005000500050005000500050005000500050005000500050005
00050005000500050005000500050041007b007b007b007b007b007b007b
007b007b007b007b007b007b007b007b007b007b007b007b007b007b007b
007b007b007b007b007b007b007b007b007b007b007b007b007b007b007b
007b007b007b007b007b007b007b007b007b007b007b007b007b007b007b
007b007b007b007b007b007b007b007b007b007b007b007b007b007b007b
007b007b007b007b007b007b007b007b007b007b007b007b007b007b007b
007b007b007b007b007b007b007b007b007b007b007b007b007b007b007b
007b007b007b0001000000850089000400000000000100000000000a0000
020001d0000000000000000a007e00010000000000000045000000010000
000000030014004500010000000000040014005900010000000000060014
006d0003000104090000008a008100030001040900010028010b00030001
04090002000e013300030001040900030028014100030001040900040028
0169000300010409000600280191436f7079726967687420284329203139
393720416d65726963616e204d617468656d61746963616c20536f636965
74792e20416c6c205269676874732052657365727665644d4b4845444f2b
5269626269742773434d5231374d4b4845444f2b5269626269742773434d
5231374d4b4845444f2b5269626269742773434d5231370043006f007000
790072006900670068007400200028004300290020003100390039003700
200041006d00650072006900630061006e0020004d006100740068006500
6d00610074006900630061006c00200053006f0063006900650074007900
2e00200041006c006c002000520069006700680074007300200052006500
7300650072007600650064004d004b004800450044004f002b0052006900
62006200690074002700730043004d005200310037005200650067007500
6c00610072004d004b004800450044004f002b0052006900620062006900
74002700730043004d005200310037004d004b004800450044004f002b00
5200690062006200690074002700730043004d005200310037004d004b00
4800450044004f002b005200690062006200690074002700730043004d00
520031003700b800002b00ba0001000200022b01ba0003000200022b01bf
000300680055003d002b001a000000082bbf000400540045003d002b001a
000000082b00bf000100d400ae00870061003a000000082bbf0002015801
1a00db009d005e000000082b00ba0005000500072bb8000020457d691844
000000>
[247 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 10 32 <0001005aff06013202ed0024000cbb001e0003000c00042b303105142322
2e02272e03353436373e033332151406150e0315141e0217160132070520
2a2d12171a0e041a26122f2b21040702123a37272837391103f4061a2f41
27305d54471b489f542944301b05020301134673a87575a8744412030000
>VXVBAA+Ribbit'sCMR17 AddT42Char 
1 130 33 <0001002fff06010702ed0023000cbb00000003001100042b303125140607
0e0323223534373e0335342e022726353433321e02171e0301071a26122f
2b21040702123a372728363a12020704202a2e12161b0e04f9489f542944
301b060104134574a87575a77445130401061a2f4127305d5447>VXVBAA+Ribbit'sCMR17 AddT42Char 
1 0 0 <00000000000000000000>VXVBAA+Ribbit'sCMR17 AddT42Char 
VXVBAA+Ribbit'sCMR17 /CharStrings get begin
/parenleft 32 def
/parenright 33 def
end
VXVBAA+Ribbit'sCMR17 /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
pop
end
%ADOEndSubsetFont
/EICMAG+Ribbit'sCMR17 /VXVBAA+Ribbit'sCMR17 findfont ct_VMDictPut
/EICMAG+Ribbit'sCMR17*1 
[40{/.notdef}rp /parenleft /parenright 214{/.notdef}rp]
EICMAG+Ribbit'sCMR17 nf
EICMAG+Ribbit'sCMR17*1 [12.5878 0 0 -12.5266 0 0 ]msf
67.08 93.9597 mo
(\()sh
EICMAE+Ribbit'sCMMI12*1 [12.5878 0 0 -12.5266 0 0 ]msf
71.5801 93.9597 mo
(x)sh
EICMAG+Ribbit'sCMR17*1 [12.5878 0 0 -12.5266 0 0 ]msf
78.6004 93.9597 mo
(\))sh
%ADOBeginSubsetFont: SPVAAA+Ribbit'sCMTI12 Initial
ct_T42Dict begin
-0.035 -0.25 1.102 0.75
 256 array 0 1 255 {1 index exch /.notdef put} for  /SPVAAA+Ribbit'sCMTI12
Type42DictBegin
[<00010000000c000c000c000c4f532f326e9364d9000000cc000000606376
74200658009c0000012c0000001c6670676d06599c370000014800000173
676c7966f233824b000008fc000009b668656164e6b35165000002bc0000
00366868656108160719000002f400000024686d74781f3c36f500000318
000002146c6f63615afa5ce10000052c0000010c6d617870029402650000
0638000000206e616d652594953a0000065800000242707265704ffec1c9
0000089c0000006067646972000000000000000000000000000201ad01f4
0005000402bc028a0000008c02bc028a000001dd003200fa000002000603
070000020004000000a30000004000000000000000003141534300010020
221902bcff38004302ee00fb000000010000000001f402bc000000200003
0014001d0014003f00000015ff3e000a01af000a0298000202ab0015b800
002c4bb800095058b101018e59b801ff85b800441db9000900035f5e2db8
00012c2020456944b001602db800022cb800012a212db800032c2046b003
254652582359208a208a49648a204620686164b004254620686164525823
658a592f20b00053586920b000545821b040591b6920b000545821b04065
59593a2db800042c2046b00425465258238a592046206a6164b004254620
6a61645258238a592ffd2db800052c4b20b0032650585158b080441bb040
44591b21212045b0c05058b0c0441b2159592db800062c2020456944b001
602020457d691844b001602db800072cb800062a2db800082c4b20b00326
5358b0401bb000598a8a20b0032653582321b0808a8a1b8a235920b00326
53582321b800c08a8a1b8a235920b0032653582321b801008a8a1b8a2359
20b0032653582321b801408a8a1b8a235920b80003265358b0032545b801
8050582321b8018023211bb003254523212321591b2159442db800092c4b
535845441b2121592d00000100000001000006c65d945f0f3cf5000903e8
00000000c1b4874600000000c1b48746ffdcff05044f02ee000000090002
0000000000000001000002eeff56000003e8ffdcff6e044f03e800fa0000
000000000000000000000085015e000000000000015e0000015e0000028a
004902bc004e02ee00d402bc009b02ee00d40258ffe50226ffe5023fffe5
035fffe50145ffdc01f4012101f4015001f4011801f40118032f01d801c2
006401f40043035f003903c3009f02ee006e00fa005d012c007001f400ad
0320007202f300560320008d02ee007c012c00db019000940190000f01f4
00c002ee008a012c0046015e0055012c007001f4001101f4007401f40074
01f4005301f4005e01f4002b01f4006901f4007601f4009101f4006001f4
0066012c0070012c0046012c003a02ee007201f4005201f400bf02ee0095
02d7003802b0004502bc009402e2004302970042027e004202f5009402d7
00420179003e0201006402f0004202650042036d004602d7004202ee0092
0297004302ee009202c900430226004802bc00ae02d700c802d700d003d1
00cf02d7003002d700c90258004e012c004701f40117012cfff001f40108
012c00fe012c00d001f4006c01c2007201c2006e01f4006c01c20072012c
ffe501c2003401f4004a012c0053012cffdc01c2004a00fa005d03200053
0226005301f4006e01f4000e01c2006c019d00530190004a0145005a020d
005301c20053028a005301c2003301db00530190003d01f4005c03e80075
01f4010b01f400f501f4010e02650042015e000002a500380320004502ee
009202d7004202bc0060036bffe5012c005301f400e6020dffea02bc005c
02bc006c0000000500050005000500050005000500050005000500050005
000500050005000500050005000500050005000500050005000500050005
00050005000500050005000500050005000500050005000500050005007b
007b007b007b007b007b007b007b007b007b007b007b007b007b007b007b
007b007b007b007b007b007b007b007b007b007b007b007b007b007b007b
007b007b007b007b007b007b007b007b007b007b007b007b007b007b007b
007b007b012f012f012f012f012f012f012f012f01d101d101d101d102f9
03d503d503d503d503d503d503d503d503d503d504db04db04db04db04db
04db04db04db04db04db04db04db04db04db04db04db04db04db04db04db
04db00010000008500bf000400000000000100000000000a0000020001a5
000000000000000a007e0001000000000000004500000001000000000003
0015004500010000000000040015005a00010000000000060015006f0003
000104090000008a00840003000104090001002a010e0003000104090002
000e01380003000104090003002a01460003000104090004002a01700003
000104090006002a019a436f707972696768742028432920313939372041
6d65726963616e204d617468656d61746963616c20536f63696574792e20
416c6c205269676874732052657365727665644d4b484546412b52696262
69742773434d544931324d4b484546412b5269626269742773434d544931
324d4b484546412b5269626269742773434d544931320043006f00700079
007200690067006800740020002800430029002000310039003900370020
0041006d00650072006900630061006e0020004d0061007400680065006d
00610074006900630061006c00200053006f00630069006500740079002e
00200041006c006c00200052006900670068007400730020005200650073
00650072007600650064004d004b0048004500460041002b005200690062
006200690074002700730043004d00540049003100320052006500670075
006c00610072004d004b0048004500460041002b00520069006200620069
0074002700730043004d0054004900310032004d004b0048004500460041
002b005200690062006200690074002700730043004d0054004900310032
004d004b0048004500460041002b00520069006200620069007400270073
0043004d00540049003100320000b800002b00ba0001000200022b01ba00
03000100022b01bf000300580048003800280018000000082b00bf000100
be009c007900570041000000082bbf0002011300e100af007d0041000000
082b00ba0004000500072bb8000020457d69184400>
[2487 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 10 41 <00010074000001c502990037005200b800004558b8000f2f1bb9000f0004
3e59b800004558b800122f1bb9001200043e59b800004558b800152f1bb9
001500043e59bb002a0001002500042bb8000f10b900080001f4b8001bd0
b8001cd03031250e0115141e023b01321615140623222623220623222635
34363b01323e0237130e012322353436373e03373e013332161514070134
0301020e1c1b080d0b0d07204120203f1f050b0d0e081c22140803771f3b
150e0b091b312a2410070404050502480b0a010507060303080e04020202
080e05040a100d01dd16140b0d040203141f2716090407030608>SPVAAA+Ribbit'sCMTI12 AddT42Char 
1 0 0 <00000000000000000000>SPVAAA+Ribbit'sCMTI12 AddT42Char 
SPVAAA+Ribbit'sCMTI12 /CharStrings get begin
/one 41 def
end
SPVAAA+Ribbit'sCMTI12 /Encoding get
dup 49 /one put
pop
end
%ADOEndSubsetFont
/EICMAH+Ribbit'sCMTI12 /SPVAAA+Ribbit'sCMTI12 findfont ct_VMDictPut
/EICMAH+Ribbit'sCMTI12*1 
[49{/.notdef}rp /one 206{/.notdef}rp]
EICMAH+Ribbit'sCMTI12 nf
EICMAH+Ribbit'sCMTI12*1 [13.5743 0 0 -13.5511 0 0 ]msf
46.74 129.78 mo
(1)sh
.78 lw
[] 0 dsh
21.18 132.6 mo
80.82 132.6 li
@
%ADOBeginSubsetFont: SPVAAA+Ribbit'sCMTI12 AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SPVAAA+Ribbit'sCMTI12 gcheck setglobal} if
1 1962 112 <00010033fff601f901b9006f00dfb800702fb800712fb80067dcb9006d00
03f4ba00000067006d111239b8007010b80030d0b800302fba0028003000
67111239b900360003f4b8002bd0b8002b2fba003900300036111239ba00
5d0030006711123900b800004558b8005a2f1bb9005a00083e59b8000045
58b800622f1bb9006200083e59b800004558b800232f1bb9002300043e59
b800004558b8002b2f1bb9002b00043e59ba0033003900032bba0000006a
00032bb8006210b900030002f4b8002310b900130002f4ba002800390033
111239b8003cd0b8000310b8004cd0ba005d006a00001112393031012e01
23220e02070e01070e0115141e0233323e02373e0133321615140e022322
2e02270e0123222e02353436333216151406071e0133323e02373e03373e
01353426232206070e0123222635343e02333216173e0333321e02151406
23222635343601d00e1a04171f161007050d05090b030a131012241e1908
040409030a132637251720170d03112f1f0f1e180f1a140d120e160e1b04
111a140e04010b0e0d02060c1d11234111040508040a13253826262e0806
11181e130b1d1a121f0e0b141201970b031a2c371d153511253110071515
0f13222c1a0d0602070831362a0f1518092025070e160f141d0f0e091d06
0b03121b1e0d032e383408173611241c43390c0602070732362a2b190a18
140e050d16121b160d100f180000>SPVAAA+Ribbit'sCMTI12 AddT42Char 
SPVAAA+Ribbit'sCMTI12 /CharStrings get begin
/x 112 def
end
SPVAAA+Ribbit'sCMTI12 /Encoding get
dup 120 /x put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/EICMAH+Ribbit'sCMTI12*1 
[49{/.notdef}rp /one 70{/.notdef}rp /x 135{/.notdef}rp]
EICMAH+Ribbit'sCMTI12 nf
EICMAH+Ribbit'sCMTI12*1 [13.5743 0 0 -13.5511 0 0 ]msf
21.24 144.12 mo
(x)sh
%ADOBeginSubsetFont: CUFAAA+Ribbit'sCMTI10 Initial
ct_T42Dict begin
-0.031 -0.25 1.121 0.75
 256 array 0 1 255 {1 index exch /.notdef put} for  /CUFAAA+Ribbit'sCMTI10
Type42DictBegin
[<00010000000c000c000c000c4f532f326e9264e3000000cc000000606376
7420065b00a70000012c0000001c6670676d06599c370000014800000173
676c7966046f1281000008fc0000091668656164e6c95166000002bc0000
003668686561082c0730000002f400000024686d747825b2375e00000318
000002146c6f6361478049870000052c0000010c6d617870029402730000
0638000000206e616d652590973c00000658000002427072657012f689bc
0000089c0000006067646972000000000000000000000000000201b701f4
0005000402bc028a0000008c02bc028a000001dd003200fa000002000603
070000020004000000a30000004000000000000000003141534300010020
221902bcff38004302ee00fa000000010000000001f402bc000000200003
0014001f0016004400000016ff3e000b01af000b0299000202ab0016b800
002c4bb800095058b101018e59b801ff85b800441db9000900035f5e2db8
00012c2020456944b001602db800022cb800012a212db800032c2046b003
254652582359208a208a49648a204620686164b004254620686164525823
658a592f20b00053586920b000545821b040591b6920b000545821b04065
59593a2db800042c2046b00425465258238a592046206a6164b004254620
6a61645258238a592ffd2db800052c4b20b0032650585158b080441bb040
44591b21212045b0c05058b0c0441b2159592db800062c2020456944b001
602020457d691844b001602db800072cb800062a2db800082c4b20b00326
5358b0401bb000598a8a20b0032653582321b0808a8a1b8a235920b00326
53582321b800c08a8a1b8a235920b0032653582321b801008a8a1b8a2359
20b0032653582321b801408a8a1b8a235920b80003265358b0032545b801
8050582321b8018023211bb003254523212321591b2159442db800092c4b
535845441b2121592d00000100000001000076b5d3b25f0f3cf5000903e8
00000000c1b4874600000000c1b48746ffddff06046402ee000000090002
0000000000000001000002eeff56000003feffddff6f046403e800fa0000
000000000000000000000085016600000000000001660000016600000298
004b02cc005002ff00d602cc009e02ff00d50265ffe70232ffe7024cffe7
0372ffe7014cffdd01ff012301ff015401ff011901ff011a033f01de01cc
006601ff00440373003b03d900a202ff00740100005d01330071020200b0
03320073030100580332009102ff007e013300dc019900980199001201ff
00c302ff008c01330049016600560133007101ff001401ff007501ff0075
01ff005401ff005f01ff002c01ff006b01ff007801ff009001ff006101ff
006801330071013300490133003a02ff007301ff005501ff00c202ff0097
02e7003b02c0004102cc009602f3003f02a6003e028d003e0306009602e7
003e01820039020d005e0301003e0273003e0381004202e7003e02ff0094
02a6003f02ff009402d9003f0232004a02cc00af02e700ca02e700d103e7
00d002e7003302e700ca0265005001330049020201120133fff201ff010a
013300fd013300cf01ff006c01cc007301cc006e01ff006c01cc00720133
ffe701cc003501ff004b013300530133ffdd01cc004b0100005e03320053
0232005301ff006e01ff000e01cc006c01a600530199004c014c005b0219
005301cc00530298005301d0003501e600530199003e01ff005d03fe0077
01ff010d01ff00f801ff010e0273003e0166000002b4003a0332004702ff
009402e7003e02cc0064037effe70133005301ff00e90219ffec02cc005c
02cc006c0000000500050005000500050005000500050005000500050005
000500050005000500050005000500050005000500050005000500050005
000500050005000500050005000500050005000500050005000500050005
000500050005000500050005000500050005000500050005000500050005
000500050005000500050005000500050005000500050005000500050005
000500050005000500050005000500050005000500050005000500050005
0005000500b300b300b300b300b300b300b300b3015b015b015b015b0289
036f036f036f036f036f036f036f036f036f036f048b048b048b048b048b
048b048b048b048b048b048b048b048b048b048b048b048b048b048b048b
048b00010000008500d4000400000000000100000000000a00000200019e
000000000000000a007e0001000000000000004500000001000000000003
0015004500010000000000040015005a00010000000000060015006f0003
000104090000008a00840003000104090001002a010e0003000104090002
000e01380003000104090003002a01460003000104090004002a01700003
000104090006002a019a436f707972696768742028432920313939372041
6d65726963616e204d617468656d61746963616c20536f63696574792e20
416c6c205269676874732052657365727665644d4b484546432b52696262
69742773434d544931304d4b484546432b5269626269742773434d544931
304d4b484546432b5269626269742773434d544931300043006f00700079
007200690067006800740020002800430029002000310039003900370020
0041006d00650072006900630061006e0020004d0061007400680065006d
00610074006900630061006c00200053006f00630069006500740079002e
00200041006c006c00200052006900670068007400730020005200650073
00650072007600650064004d004b0048004500460043002b005200690062
006200690074002700730043004d00540049003100300052006500670075
006c00610072004d004b0048004500460043002b00520069006200620069
0074002700730043004d0054004900310030004d004b0048004500460043
002b005200690062006200690074002700730043004d0054004900310030
004d004b0048004500460043002b00520069006200620069007400270073
0043004d00540049003100300000b800002b00ba0001000200022b01ba00
03000100022b01bf000300510043003400250017000000082b00bf000100
b2009200710051003c000000082bbf000200fa00cd00a00072003c000000
082b00ba0004000500072bb8000020457d69184400>
[2327 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 10 89 <0002006cfff5021701ba001b0055006ebb00110003004200042b00b80000
4558b800472f1bb9004700083e59b800004558b800372f1bb9003700043e
59b800004558b8003d2f1bb9003d00043e59b8004710b900070002f4b800
3d10b900160002f4b80024d0ba003a00370047111239b8000710b8004fd0
b8004f2f3031013635342e0223220e02070e0315141e0233323e0237170e
0115141e0233323e02373e0133321615140e02070e01232226270e012322
2e0235343e0233321617343e023332161514060701930309121a100f201e
1a0907110f0a040c1512152a2318033b050201050a0a0d14100d05050509
050a04080b070b221c1a31081e3f1b1c2d1f112841522a182d0e04090f0c
081301030139090410211b12121e281710373d3a130b1f1c131a25260c15
151905050e0d0915232a151106020801141d220e172121252521192a3820
376b54341b20020d0d0b0a1004060b000000>CUFAAA+Ribbit'sCMTI10 AddT42Char 
1 358 97 <00020053fff5014b0290000b0050006bbb00430003001600042bbb003a00
03002400042bbb00000003000600042bb8000010b8000cd0b8000c2f00b8
00004558b800372f1bb9003700083e59b800004558b800112f1bb9001100
043e59ba0009000300032bb8003710b900270002f4b8001110b900460002
f4303101140623222635343633321613140e0223222e0235343e02373e01
373e01373e0135342623220e02070e0123222635343e0233321615140607
0e01070e0115141633323e02373e013332160146210f0b1720100b17050d
1e3123141c13090204070509120a061008050d0e081620160e0303050a04
0b0e1e31231c2f0408101f110a1010061620160e0303040a050a026f161a
0e13151b0efe0d0230392f0e171c0f070d0f140e193119112b170e281211
0b1e292b0c0b0502080230392f27290e14162b552b1c301414081f292a0b
0b0602000000>CUFAAA+Ribbit'sCMTI10 AddT42Char 
1 694 101 <00010053fff5034a01ba008e00ddb8008f2fb800902fb80035dcb9005d00
03f4b8003ad0b8008f10b80053d0b800532fb9003d0003f4b8005d10b800
40d0b800402fb8005d10b80050d0b800502f00b800004558b800222f1bb9
002200083e59b800004558b800282f1bb9002800083e59b800004558b800
302f1bb9003000083e59b800004558b800032f1bb9000300043e59b80000
4558b800502f1bb9005000043e59b800004558b800732f1bb9007300043e
59b8002210b900110002f4ba002500030022111239ba002d000300221112
39b8005010b900400002f4b8001110b80062d0b80081d03031370e012322
26353437133e0135342e02232206070e0123222635343e02373e01333216
173e0133321e02173e0133321e0215140e02070e0115141633323e02373e
0133321615140e0223222635343e02373e0335342e0223220e02070e0307
0e010f010e01232226353437133e0135342e0223220e02070e03070e0107
be0516090f0d034b030401050a0a171f0e04050a040b05080c070c211b20
2f051a482d11231d1503174a3512251e140d141507060c06101620160e03
03040a050a0e1e30232428010406050514130e010913111a2a231b0b0505
040605040804280516090f0d03410207010913111a2a231b0b0505040605
0408040f0e0c12080509012c0c1b0c040e0d0942351106020801141e230f
171e2a25232c0814221a21370917291f163c3f3a141226130b121f2a2a0a
0b0602080230392f2f21080c0e110d0f3740401706161610141f2613080b
0d1612111f11a00e0c12080509010407261406161610141f2613080b0d16
12111f11>CUFAAA+Ribbit'sCMTI10 AddT42Char 
1 1298 102 <00010053fff5024a01ba006900adb8006a2fb8006b2fb8002fdcb9005700
03f4b80034d0b8006a10b8004dd0b8004d2fb900370003f4b8005710b800
3ad0b8003a2fb8005710b8004ad0b8004a2f00b800004558b800222f1bb9
002200083e59b800004558b8002a2f1bb9002a00083e59b800004558b800
032f1bb9000300043e59b800004558b8004a2f1bb9004a00043e59b80022
10b900110002f4ba002500030022111239b8004a10b9003a0002f4b80011
10b8005cd03031370e01232226353437133e0135342e02232206070e0123
222635343e02373e01333216173e0333321e0215140e02070e0115141633
323e02373e0133321615140e0223222635343e02373e0335342e0223220e
02070e03070e0107be0516090f0d034b030401050a0a171f0e04050a040b
05080c070c211b202f05051724301f12251e130d141507060c0610162016
0e0303040a050a0e1e30232428010406050514130e020913101d2d221605
06080506050408040f0e0c12080509012c0c1b0c040e0d09423511060208
01141e230f171e2a25071b1a130918281f163c3f3a141226130b121f2a2a
0a0b0602080230392f2f21080c0e110d0f374040170816150f182121090b
0e0f1613111f11000000>CUFAAA+Ribbit'sCMTI10 AddT42Char 
1 1758 112 <00010035fff5020601ba007500ffb800762fb800772fb80069dcb9007100
03f4ba000000690071111239b80003d0b800032fb8007610b80030d0b800
302fba002800300069111239b900360003f4b8002dd0b8002d2fba003900
300036111239b8003610b8003cd0b8003c2fba005f00300069111239b800
7110b80064d0b800642f00b800004558b8005a2f1bb9005a00083e59b800
004558b800642f1bb9006400083e59b800004558b800232f1bb900230004
3e59b800004558b8002d2f1bb9002d00043e59ba0033003900032bba0000
006e00032bb8006410b900030002f4b8002310b900130002f4ba00280039
0033111239b8003cd0b8000310b8004cd0ba005f006e0000111239303101
2e0123220e02070e03070e01151416333236373e0133321615140e042322
2e02270e03232226353436333216151406071e0133323e02373e03373e01
353426232206070e0123222635343e0233321e02173e0333321e0215140e
0223222635303e0201da0c1e02121c1510050308090a04060d200f1f4414
040509050a091119222b1a0a1a1b19070613191e1223351f130a1810170d
1d021620160f060405050504070e1a161e451404040a040b14273926091b
1b190804101821150b1e1b130a0f1107140f01081001960b03131e27130c
222625101a391227193c410c050208051b22251f14050f1b150b18140d21
1d191d0c140b1f060b031b2a3418111512140f1c40121e213d400c050208
0932352a040f1b1607171610050e19130f140c06160a0d100f000000>CUFAAA+Ribbit'sCMTI10 AddT42Char 
1 0 0 <00000000000000000000>CUFAAA+Ribbit'sCMTI10 AddT42Char 
CUFAAA+Ribbit'sCMTI10 /CharStrings get begin
/a 89 def
/i 97 def
/m 101 def
/n 102 def
/x 112 def
end
CUFAAA+Ribbit'sCMTI10 /Encoding get
dup 97 /a put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 120 /x put
pop
end
%ADOEndSubsetFont
/EICMAI+Ribbit'sCMTI10 /CUFAAA+Ribbit'sCMTI10 findfont ct_VMDictPut
/EICMAI+Ribbit'sCMTI10*1 
[97{/.notdef}rp /a 7{/.notdef}rp /i 3{/.notdef}rp /m /n 9{/.notdef}rp 
/x 135{/.notdef}rp]
EICMAI+Ribbit'sCMTI10 nf
EICMAI+Ribbit'sCMTI10*1 [9.7657 0 0 -9.749 0 0 ]msf
27.36 146.16 mo
(max)
[7.91991 4.97955 0 ]xsh
%ADOBeginSubsetFont: XFAAAA+Ribbit'sCMSY10 Initial
ct_T42Dict begin
-0.027 -0.957 1.113 0.773
 256 array 0 1 255 {1 index exch /.notdef put} for  /XFAAAA+Ribbit'sCMSY10
Type42DictBegin
[<00010000000c000c000c000c4f532f327158654d000000cc000000606376
7420027f00ae0000012c000000146670676d06599c370000014000000173
676c79669ddadd78000008f00000005268656164e6c74eb7000002b40000
003668686561082a05f5000002ec00000024686d74785cfd1c1d00000310
000002106c6f636102220222000005200000010a6d6178700294023d0000
062c000000206e616d6526d2a85f0000064c0000024270726570cee06e9b
0000089000000060676469720000000000000000000000000002020401f4
0005000402bc028a0000008c02bc028a000001dd003200fa000002000607
070000020004000000a30000004000000000000000003141534300010020
221902bcff380043030703c0000000010000000001f402bc000000200003
001400280037005500000016ff89000502ab0016b800002c4bb800095058
b101018e59b801ff85b800441db9000900035f5e2db800012c2020456944
b001602db800022cb800012a212db800032c2046b003254652582359208a
208a49648a204620686164b004254620686164525823658a592f20b00053
586920b000545821b040591b6920b000545821b0406559593a2db800042c
2046b00425465258238a592046206a6164b0042546206a61645258238a59
2ffd2db800052c4b20b0032650585158b080441bb04044591b21212045b0
c05058b0c0441b2159592db800062c2020456944b001602020457d691844
b001602db800072cb800062a2db800082c4b20b003265358b0401bb00059
8a8a20b0032653582321b0808a8a1b8a235920b0032653582321b800c08a
8a1b8a235920b0032653582321b801008a8a1b8a235920b0032653582321
b801408a8a1b8a235920b80003265358b0032545b8018050582321b80180
23211bb003254523212321591b2159442db800092c4b535845441b212159
2d000001000000010000b5f440965f0f3cf5000903e800000000c1b48745
00000000c1b48745ffe3fc40045c03070000000900020000000000000001
000002eeff56000004b1ffe3fd82045c03e800fa00000000000000000000
00000084000000000000000001f4000001f40000030a0038030a0038030a
0038030a0038030a0038030a0038030a003803e8003801f40038030a0038
030a0053030a0053030a0053030a0053030a0053030a003803e8003803e8
0038030a0053030a005303e8003903e8003801f4004801f4004803e80039
03e8003803e80038030a003803e8003903e800380263001e0263001e03e8
002303e8003503e80035030a00380113001d03e80038029b0053029b0053
0379003b0379003b0000008b00000038022c0000022c0038029b003801f4
002f02d2002e02d20038030a0038030a003802630038031e001b0291001e
020f000c030300140210001c02cf00110253002c034d00140221ffe802a6
002f02fa001e02b2001f04b1001b0334ffe3031c003902b8001403310071
03500014025e00120221001d0272ffef0265002303dc002302c90032029c
001f02d50025029b0038029b0038029b0038029b0038029b003802630038
0263003801bc00ae01bc001501bc00ae01bc001501f4004801f400480185
006e018500380116007701f4008401f400480263001e01f4003801160038
0341004902ee00240341002f01a10038029b003d029b003d030a0053030a
003f01bc004501bc003801bc003802630038030a001c030a0038030a0038
030a0038030a005301160056030a009301f4004101f4000b030a003801f4
0038030a0038030a0053030a0038030a0053030a00530000000500050005
000500050005000500050005000500050005000500050005000500050005
000500050005000500050005000500050005000500050005000500050005
000500050005000500050005000500050005000500050005000500050005
000500050005000500050005000500050005000500050005000500050005
000500050005000500050005000500050005000500050005000500050005
000500050005000500050005000500050005000500050005000500050005
000500050005000500050005000500050005000500050005000500050005
000500050005000500050005000500050005000500050005002900290029
002900290029002900290029002900290029000000010000008400c90005
00000000000100000000000a000002000173000000000000000a007e0001
000000000000004500000001000000000003001500450001000000000004
0015005a00010000000000060015006f0003000104090000008a00840003
000104090001002a010e0003000104090002000e01380003000104090003
002a01460003000104090004002a01700003000104090006002a019a436f
7079726967687420284329203139393720416d65726963616e204d617468
656d61746963616c20536f63696574792e20416c6c205269676874732052
657365727665644d4b484546452b5269626269742773434d535931304d4b
484546452b5269626269742773434d535931304d4b484546452b52696262
69742773434d535931300043006f00700079007200690067006800740020
0028004300290020003100390039003700200041006d0065007200690063
0061006e0020004d0061007400680065006d00610074006900630061006c
00200053006f00630069006500740079002e00200041006c006c00200052
00690067006800740073002000520065007300650072007600650064004d
004b0048004500460045002b005200690062006200690074002700730043
004d00530059003100300052006500670075006c00610072004d004b0048
004500460045002b005200690062006200690074002700730043004d0053
005900310030004d004b0048004500460045002b00520069006200620069
0074002700730043004d0053005900310030004d004b0048004500460045
002b005200690062006200690074002700730043004d0053005900310030
0000b800002b00ba0001000200022b01ba0003000100022b01bf00030041
0035002a001e0012000000082b00bf0001008a00710058003f0021000000
082bbf0002006400520040002e0021000000082b00ba0004000300072bb8
000020457d69184400>
[83 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 10 120 <0001005300e602b6010e000d0015ba000a000300032b00bb000600010000
00042b30313722263534363321321615140623740b16160b02210b16160b
e6050f0f05050f0f05000000>XFAAAA+Ribbit'sCMSY10 AddT42Char 
1 0 0 <00000000000000000000>XFAAAA+Ribbit'sCMSY10 AddT42Char 
XFAAAA+Ribbit'sCMSY10 /CharStrings get begin
/exclamdown 120 def
end
XFAAAA+Ribbit'sCMSY10 /Encoding get
dup 161 /exclamdown put
pop
end
%ADOEndSubsetFont
/EICMAJ+Ribbit'sCMSY10 /XFAAAA+Ribbit'sCMSY10 findfont ct_VMDictPut
/EICMAJ+Ribbit'sCMSY10*1 
[161{/.notdef}rp /exclamdown 94{/.notdef}rp]
EICMAJ+Ribbit'sCMSY10 nf
EICMAJ+Ribbit'sCMSY10*1 [13.5743 0 0 -13.5511 0 0 ]msf
46.44 144.12 mo
(\241)sh
EICMAH+Ribbit'sCMTI12*1 [13.5743 0 0 -13.5511 0 0 ]msf
57.1203 144.12 mo
(x)sh
EICMAI+Ribbit'sCMTI10*1 [9.7657 0 0 -9.749 0 0 ]msf
63.24 146.16 mo
(min)
[7.9248 2.93465 0 ]xsh
EICMAE+Ribbit'sCMMI12*1 [11.7164 0 0 -11.7665 0 0 ]msf
244.8 202.38 mo
(x)sh
EICMAH+Ribbit'sCMTI12*1 [14.0777 0 0 -14.0288 0 0 ]msf
210.72 200.04 mo
(x)sh
gsave
217.08 202.86 mo
225.12 202.86 li
225.12 194.76 li
217.08 194.76 li
cp
clp
%ADOBeginSubsetFont: SPVAAA+Ribbit'sCMTI12 AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SPVAAA+Ribbit'sCMTI12 gcheck setglobal} if
1 930 101 <00010053fff6033701b9008800e1b800892fb8008a2fb80056dcb9007e00
03f4b8005bd0b8005b2fb8008910b80076d0b800762fb9005e0003f4b800
7e10b80061d0b800612fb8007e10b80073d0b800732f00b800004558b800
432f1bb9004300083e59b800004558b800492f1bb9004900083e59b80000
4558b800512f1bb9005100083e59b800004558b800032f1bb9000300043e
59b800004558b800222f1bb9002200043e59b800004558b800732f1bb900
7300043e59b8004910b900120002f4b80031d0ba004600030043111239ba
004e00030043111239b8007310b900610002f4b8003110b80083d0303125
0e0123222635343637133e0135342e0223220e02070e01070e03070e0123
222635343637133e0135342e0223220e02070e01232235343e02373e0133
3216173e0133321e02173e0133321e0215140e02070e0115141633323e02
373e0133321615140e04232226353436373e0335342e0223220e020701b5
0311110e0c0102420305010913112337281804040804020f0f0d01051509
0e0c010349030501050a0a0d14100d060505080e05080c07102511232b02
1b482c12221c13021b4a2f1d26170a0b12150a060d0c0b151f170e030305
09030a060c131c25171f2906070615140e010913112438271702190d1610
0802060801080e1f0f061617102633330e111f11093a3f33040f0c0f0903
050b01240b1e0e040e0e0914212b1611070a01141e220e20152f22262b09
1623192a31111c251416373b3d1b0f2a12110d1d282a0d0b070207011722
2821162a24101413123c424017061716102834310900>SPVAAA+Ribbit'sCMTI12 AddT42Char 
SPVAAA+Ribbit'sCMTI12 /CharStrings get begin
/m 101 def
end
SPVAAA+Ribbit'sCMTI12 /Encoding get
dup 109 /m put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/EICMAH+Ribbit'sCMTI12*1 
[49{/.notdef}rp /one 59{/.notdef}rp /m 10{/.notdef}rp /x 135{/.notdef}rp]
EICMAH+Ribbit'sCMTI12 nf
EICMAH+Ribbit'sCMTI12*1 [9.8332 0 0 -9.799 0 0 ]msf
217.08 202.14 mo
(m)sh
grestore
%ADOBeginSubsetFont: SPVAAA+Ribbit'sCMTI12 AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SPVAAA+Ribbit'sCMTI12 gcheck setglobal} if
1 246 89 <0002006cfff6020b01b9001c00550078bb00120003004100042b00b80000
4558b800462f1bb9004600083e59b800004558b800342f1bb9003400043e
59b800004558b8003c2f1bb9003c00043e59b8004610b900080002f4b800
3c10b900170002f4b80023d0ba003900340046111239ba004a0034004611
1239b8000810b8004fd0b8004f2f303101343635342e0223220e02070e03
15141e0233323e0237170e01151416333236373e0133321615140e02070e
0123222e02270e0123222e0235343e02333216173736373e013332161514
0607018c03040e1b1610201e1a0a06110f0a020b1614162a231702380305
0a11151f0f050509030a04080b060a211d09171813041d3c1f1a2a1e1127
405029142e0e010205050f0c0e0c01020137020b01031e231c121f29170f
373d3a13051d1f191b25250a120b1f0b0e1a373f1107020701141d200d16
24050f1c17222516293821376b55341823010a09080c1008020608000000
>SPVAAA+Ribbit'sCMTI12 AddT42Char 
1 606 97 <00020053fff60143028d003f004b0071b8004c2fb8004d2fb80019dcb900
030003f4b8004c10b8003cd0b8003c2fb900220003f4b8001910b80043d0
b800432f00b800004558b800162f1bb9001600083e59b800004558b80037
2f1bb9003700043e59ba0049004300032bb8001610b900060002f4b80037
10b900250002f43031133e0135342623220e02070e0123222635343e0233
3216151406070e01070e0115141633323e02373e0133321615140e042322
2e0235343637131406232226353436333216d7050805111620160d030305
09040a0d1e2f231d2b04070e1e0f0e120f081520160e03030509030a060c
131c24170c1a150d0206b81d0f0b141e0e0d12014a0e1b1408161e292a0c
0b0602070230392e28260e1213295029253614120b1d282a0d0b07020701
172228211608131e1607141101fe14180d11151710000000>SPVAAA+Ribbit'sCMTI12 AddT42Char 
1 1522 102 <00010053fff6023d01b9006100b1b800622fb800632fb8002fdcb9005700
03f4b80034d0b800342fb8006210b8004fd0b8004f2fb900370003f4b800
5710b8003ad0b8003a2fb8005710b8004cd0b8004c2f00b800004558b800
242f1bb9002400083e59b800004558b8002a2f1bb9002a00083e59b80000
4558b800032f1bb9000300043e59b800004558b8004c2f1bb9004c00043e
59b8002410b900120002f4ba002700030024111239b8004c10b9003a0002
f4b8001210b8005cd03031370e0123222635343637133e0135342e022322
0e02070e01232235343e02373e01333216173e0133321e0215140e02070e
0115141633323e02373e0133321615140e04232226353436373e0335342e
0223220e0207bb0311110e0c010349030501050a0a0d14100d060505080e
05080c07102511232b0219462f1d26170a0b12150a060d0c0b151f170e03
030509030a060c131c25171f2906070615140e010913112438271702190d
160f0903050b01240b1e0e040e0e0914212b1611070a01141e220e20152f
22222f111c251416373b3d1b0f2a12110d1d282a0d0b0702070117222821
162a24101413123c424017061716102934310800>SPVAAA+Ribbit'sCMTI12 AddT42Char 
SPVAAA+Ribbit'sCMTI12 /CharStrings get begin
/a 89 def
/i 97 def
/n 102 def
end
SPVAAA+Ribbit'sCMTI12 /Encoding get
dup 97 /a put
dup 105 /i put
dup 110 /n put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/EICMAH+Ribbit'sCMTI12*1 
[49{/.notdef}rp /one 47{/.notdef}rp /a 7{/.notdef}rp /i 3{/.notdef}rp /m 
/n 9{/.notdef}rp /x 135{/.notdef}rp]
EICMAH+Ribbit'sCMTI12 nf
EICMAH+Ribbit'sCMTI12*1 [9.8332 0 0 -9.799 0 0 ]msf
224.94 202.14 mo
(ax)
[4.97954 0 ]xsh
EICMAH+Ribbit'sCMTI12*1 [14.8003 0 0 -14.6866 0 0 ]msf
110.34 199.68 mo
(x)sh
EICMAH+Ribbit'sCMTI12*1 [10.3378 0 0 -10.2584 0 0 ]msf
117 201.9 mo
(min)
[8.28474 3.11584 0 ]xsh
%ADOBeginSubsetFont: ArialMT Initial
ct_T42Dict begin
-0.664 -0.324 2 1.004
 256 array 0 1 255 {1 index exch /.notdef put} for  /ArialMT
Type42DictBegin
[<00010000000c000c000c000c4f532f3210325d73000000cc000000606376
7420a11cd7eb0000012c000006546670676dcc79599a000007800000066e
676c796634819a9f00008f58000848ac68656164de7154f100000df00000
0036686865611233162200000e2800000024686d74785f35fc5600000e4c
000035646c6f636138690836000043b0000035686d61787012b40d800000
7918000000206e616d65e9a8cdc80000793800000a607072657025d64dbf
0000839800000bbe67646972000000000000000000000000000303880190
00050008059a05330000011b059a0533000003d1006602120805020b0604
020202020204e0002affc00078430000000900000000544d432000400020
fffc05d3fe510133073e01b2400001ffffff0000042605bb000000200004
05ba001905ba001a05a70019042600180000ffe70000ffe80000ffe7fe69
ffe805ba0019fe69ffe802ea000000b8000000b80000000000a800ad0169
00ad00bf00c201f0001800af00b900b400c800170044009c007c00940087
0006005a00c80089005200520005004400940119ffb4002f00a1000300a1
00cd00170057007e00ba00160118ffe9007f008503d300870085000d0022
00410050006f008d014cff75005c00df04830037004c006e00700180ff58
ff8eff92ffa400a500b903c8fffd000b001a0063006300cdffee05d8ffdc
002d005c0095009900df019209b500400057008000b9039d0072009a035d
0401ff67fffa00030021007700cd0004004d00cd01c0022b004c006500e7
0118017c034305d8ffa3ffb0ffc40003001c005d0068009a00ba01350147
0221055cff4dffcd0016002d00780080009900b200b600b600b800bd00da
010c05f0ffa4fff00019002c0049007f00b400ce01c003fefd81fe3f0000
00050018002900390049006f00be00c700d0012301c1026f050c05320540
057affd4001400310055005700a700b400e601f7027e027e027f03c60446
ff42000e0085009100bf00c200c500e1011a012f014f01560229026f029e
03720008002c00310031006400690089009800c700de012b01b6020c02cf
03a304ab04fb061dfee0ff0e00060026009b009d00c1010d011801200173
018201d601e30243025f029b02e2039404a904d20761001c005e006d008d
00ab00f7011201380151015b0168017c01870191019901cd01d001e80241
0254026b02ef0368037103bd044204420453047304830586058b06e8fe58
fec4fed1fef7ff32ff860051007c008100910095009e00b400b900cf00d9
00d900df00e20105010b010e010e012001210155017b017b017e018d01a2
01a801a901b401d001d001e201e901f201f501fb020002000206021b0221
022202220223027202770294029c02cf02cf02d002ec02f903170322032b
0335033c0359036f037103870390039003b503e1041a04cf04ff05320532
0596059f05a805ab05c205f0060c0782080008ccfca3fd2afddefe00fe88
fe96feb2feb4ffe100150019001a001c001f003c005100610061006a0078
009600a500af00d3010c0118011a012a013e014c0151015f016a01710178
01820184019a01a501a801a901ae01bc01cd01d701ef0200020d021c0221
0222022e02350242024f024f025e026502710290029202b402d602fa0307
030b030f0315032a0347035d036503740379039603b003cc03dd03e203f6
03fc03fc03ff040a041f04220426042b0447045f0475049e04e704e7055c
05cb05e5060a066d068606b806f10736073e07500751075d078f07b607d4
086000b600c300b500b700000000000000000000000001e00381034503b5
008e0233041902ce02ce002d005f0064034d023f000002a80188027d01b4
02240578063b023b014e00f00426029402c6029f02f6023b034d014b0153
006a0231000000000000061404aa0000003c04c300ed04bc026502ce03b5
0078060c017e02ef060c00b201000239000001c50330042b03cb00da03df
010704a100db040a011701ed02a70350010b01bd043e05580021039c00ae
0371017d00b5024500000afb088c012b014e01aa00870054013201f803ff
0003024e00b4003703e30083006b02d800ed00770088009701640467008e
0033017c00e700a6029e0329056e062a061501c90269048a021301b40002
04a9000002390124010305140084015d039a06ef02d9007500cf040a00de
03ac04bc02cf02ae034d04f005520168006d007d00860071ff8100790558
04d2016700030156002504e00094007c033204210094007f0072005c002f
00b6001800ba00b80041034d00720018001f004c016a01550099009a009a
009800b200040078006900140057006e00ce00b4065402b80067050e0165
00e7000004cbfe52005affa60099ff67006eff92002dffd40087ff7c00b8
00a800e5008f00a80185fe7b0070001e00d900de014c054602cf0546ff2d
028a02d90253029600b700000000000000000000000000000125011800ea
00ea00ae0000003e05bb008a04d70053003fff8cffd50015002800220099
0062004a00e4006d00ee00e5004803c00033fe4e02b1ff460370007905df
0051ffa7ff1f010a0068ff6c004f00bc00a507050061072b00ed04b001d2
00b6007b00650252ff740365fe690094008f005c00400086007500890089
4043555441403f3e3d3c3b3a3938373534333231302f2e2d2c2b2a292827
262524232221201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a09
0807060504030201002c4523466020b02660b004262348482d2c45234623
6120b02661b004262348482d2c45234660b0206120b04660b00426234848
2d2c4523462361b0206020b02661b02061b004262348482d2c45234660b0
406120b06660b004262348482d2c4523462361b0406020b02661b04061b0
04262348482d2c0110203c003c2d2c20452320b0cd442320b8015a515823
20b08d44235920b0ed51582320b04d44235920b09051582320b00d442359
21212d2c20204518684420b001602045b04676688a4560442d2c01b10b0a
432343650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01b01723
70b10217453ab10200080d2d2c45b01a234445b01923442d2c2045b00325
456164b050515845441b2121592d2cb00143632362b0002342b00f2b2d2c
2045b0004360442d2c01b00643b00743650a2d2c2069b04061b0008b20b1
2cc08a8cb8100062602b0c642364615c58b00361592d2c45b0112bb01723
44b0177ae4182d2c45b0112bb01723442d2cb01243588745b0112bb01723
44b0177ae41b038a45186920b01723448a8a8720b0a05158b0112bb01723
44b0177ae41b21b0177ae45959182d2c2d2cb0022546608a46b040618c48
2d2c4b53205c58b002855958b00185592d2c20b0032545b019234445b01a
23444565234520b00325606a20b009234223688a6a606120b01a8ab00052
7921b21a1a40b9ffe0001a45208a54582321b03f1b235961441cb114008a
5279b31940201945208a54582321b03f1b235961442d2cb110114323430b
2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2c
b10e0f432343650b2d2cb11011432343650b2d2c4b525845441b2121592d
2c0120b003252349b04060b0206320b000525823b002253823b002256538
008a63381b212121212159012d2c4bb06451584569b00943608a103a1b21
2121592d2c01b005251023208af500b0016023edec2d2c01b00525102320
8af500b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c
003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743b006
430b2d2c3eb02a2a2d2c352d2c76b8022323701020b802234520b0005058
b00161593a2f182d2c21210c6423648bb84000622d2c21b08051580c6423
648bb82000621bb200402f2b59b002602d2c21b0c051580c6423648bb815
55621bb200802f2b59b002602d2c0c6423648bb84000626023212d2cb400
0100000015b00826b00826b00826b008260f10161345683ab001162d2cb4
000100000015b00826b00826b00826b008260f1016134568653ab001162d
2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b2121
592d2c4b53234b515a58381b2121592d2c4b5458381b2121592d2cb01343
58031b02592d2cb0134358021b03592d2c4b54b012435c5a58381b212159
2d2cb012435c580cb00425b00425060c6423646164b807085158b00425b0
0425012046b01060482046b0106048590a21211b2121592d2cb012435c58
0cb00425b00425060c6423646164b807085158b00425b00425012046b8ff
f060482046b8fff06048590a21211b2121592d2c4b53234b515a58b03a2b
1b2121592d2c4b53234b515a58b03b2b1b2121592d2c4b53234b515ab012
435c5a58381b2121592d2c0c8a034b54b00426024b545a8a8a0ab012435c
5a58381b2121592d2c4b5258b00425b0042549b00425b00425496120b000
5458212043b0005558b00325b00325b8ffc038b8ffc038591bb040545820
43b0005458b00225b8ffc038591b2043b0005458b00325b00325b8ffc038
b8ffc0381bb00325b8ffc03859595959212121212d2c462346608a8a4623
20468a608a61b8ff8062232010238ab902c202c28a70456020b0005058b0
0161b8ffba8b1bb0468c59b0106068013a2d2cb1020042b123018851b140
0188535a58b910000020885458b202010243604259b12401885158b92000
0040885458b2020202436042b12401885458b2022002436042004b014b52
58b2020802436042591bb940000080885458b202040243604259b9400000
8063b80100885458b202080243604259b94000010063b80200885458b202
100243604259b94000020063b80400885458b20240024360425959595959
2d2cb0024354584b53234b515a58381b2121591b21212121592d00000001
00000005199a4b6dd9bc5f0f3cf5081b080000000000a2e3272a00000000
c9acc9bbfaaffd671000080c00000009000100010000000000010000073e
fe4e00431000faaffa7a1000000100000000000000000000000000000d59
06000100000000000239000002390000023900b002d7005e047300150473
0049071d0077055600580187005a02aa007c02aa007c031d004004ac0072
023900aa02aa0041023900ba0239000004730055047300df0473003c0473
00560473001a047300550473004d047300610473005304730055023900b9
023900aa04ac007004ac007204ac00700473005a081f006f0556fffd0556
009605c7006605c7009e055600a204e300a80639006d05c700a4023900bf
04000037055600960473009606aa009805c7009c063900630556009e0639
005805c700a10556005c04e3003005c700a105560009078d001905560009
0556000604e300290239008b023900000239002703c100360473ffe102aa
00590473004a0473008604000050047300460473004b0239001304730042
0473008701c7008801c7ffa20400008801c7008306aa0087047300870473
0044047300870473004802aa00850400003f02390024047300830400001a
05c700060400000f040000210400002802ac0039021400bc02ac002f04ac
00570556fffd0556fffd05c70068055600a205c7009c0639006305c700a1
0473004a0473004a0473004a0473004a0473004a0473004a040000500473
004b0473004b0473004b0473004b023900bd023900230239ffe502390009
047300870473004404730044047300440473004404730044047300830473
0083047300830473008304730049033300800473006b0473001b04730051
02cd006d044c000104e3009905e5000305e50003080000e102aa00de02aa
003d0464004e080000010639005305b4009a0464004e0464004d0464004d
0473fffd049c00a003f4003805b4007a069600a1046400000231000002f6
002f02ec002d0625007f071d004404e3008104e3009e02aa00e804ac0072
046400540473002e0464003304e5001a047300860473008c080000ef0556
fffd0556fffd0639006308000081078d00520473fffc0800000002aa0053
02aa004701c7008001c7006c0464004e03f4002f04000021055600060156
fe390473ffe402aa005c02aa005c040000170400001704730049023900b9
01c7006c02aa0047080000250556fffd055600a20556fffd055600a20556
00a20239008d0239ffe00239000402390015063900630639006306390063
05c700a105c700a105c700a1023900c602aa001902aa000602aa001d02aa
002e02aa00e502aa00a202aa006b02aa003a02aa004b02aa002804730000
01c700030556005c0400003f04e3002904000028021400bc05c7fffd0473
004905560006040000210556009e0473008704ac007204ac00a102aa006b
02aa001902aa002106ac006b06ac006b06ac0021047300000639006d0473
0042023900b10556005c0400003f05c700660400005005c7006604000050
04730046046bffe102aa00ee0556fffd0473004a0556fffd0473004a05c7
009e04eb004705c7fffd055600a20473004b055600a20473004b04730096
01c7004204730096025500880473009a02ac008305c7009c0473008705c7
009c04730087063900630473004405c700a102aa008505c700a102aa003c
0556005c0400003f04e300300239002404e300300300002305c700a10473
008305c700a10473008304e300290400002804e3002904000028046800a4
063900600662005504a00048047400480391006204f000440329002e0530
0048046bffe1040000b002eb005208c000330800004f040000990800004f
040000990800004f040000980400009807d5016a05c0009e04ab007204d5
009d04ac007104d5022204d5010505abffe9050001c905ab027e05abffe9
05ab027e05abffe905ab027e05abffe905abffe905abffe905abffe905ab
ffe905ab01c005ab027e05ab01c005ab01c005abffe905abffe905abffe9
05ab027e05ab01c005ab01c005abffe905abffe905abffe905ab027e05ab
01c005ab01c005abffe905abffe905abffe905abffe905abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905ab02d605ab006605abffea05d5ffff04d50092
0800000007eb013007eb012007eb013007eb012004d500b204d5008004d5
002a082b0198086b01b807550010060000f40600006f0440003a05400037
04c0003f04150040040000250600005505e100bf038d008904d5ffd90180
008002d50086071500610296000f04d5009202d6008302d6008304d500b2
02d600700556fffd0473004a05c700660400005005c70066040000500556
00a20473004b055600a20473004b055600a20473004b0639006d04730042
0639006d047300420639006d0473004205c700a40473008705c7001f0473
00060239ffce0239ffce0239ffe40239ffe40239fff60239fff50239004b
01c700190400003701c7ffa20556009604000088040000860473009601c7
fffa05c7009c0473008705c900a50473008b063900630473004406390063
0473004405c700a102aa006b0556005c0400003f04e300300239000c05c7
00a10473008305c700a10473008305c700a10473008305c700a104730083
078d001905c70006055600060400002101c700890556fffd0473004a0800
0001071d00440639005304e30081023900b9078d001905c70006078d0019
05c70006078d001905c70006055600060400002101c7008a02aaffe10473
001b04cd005a06ac006b06ac002206ac002206ac004a02aa00e202aa006b
02aa00de02aaffea0557ffff0646ffa706b4ffa80312ffa80632ffa706d8
ffa70605ffa701c7ff780556fffd055600960558fffe055600a204e30029
05c700a4023900bf055600960558000b06aa009805c7009c0533006d0639
006305c700a40556009e04f2009404e30030055600060556000906af007f
05fb0061023900040556000604a00048039100620473008b01c7006b0460
0088049a008c04000019038700480473008b0473005c01c7008904000086
04000018049c00a00400001a0395005c04730044048d008303db00560460
00880433001105b4007a063f005701c7ffc9046000880473004804600088
063f0057055700a206eb0032045500a105c000640556005c023900bf0239
0004040000370875000d081500a406d5003104a900a10515000a05c000a0
0556fffd054000a705560096045500a1056b0000055600a20763000704d5
004e05c000a105c000a104a900a10540001206aa009805c700a406390063
05c000a00556009e05c7006604e300300515000a061500520556000905eb
009f05550057075500a1078000a106550000071500a8054000a505c00055
081500a405c7001a0473004a0495005b0440008802eb008804ab00000473
004b055afffb03ab003204780087047800870380008604ab00180580008c
046b00880473004404550088047300870400005003aa0026040000210695
004b0400000f0495008a042b0045066b008d0695008d0500002805c0008b
042b008404150030060000890455001f0473004b0473000002eb00890415
004b0400003f01c700880239000901c7ffa2074000130680008304730000
0380008604000021046b008803e900a1034a008808000041089500a00585
002d000001010000001e0000003100000031000001010000007e0000007e
0000008c0000008c000001010000001000000101000001210310007d0000
008c023300d20000030b0000ff04023900b9048100690456003203310019
0411002d04d1009601f9009b030f005f04ca009b04b8008c01f9009b0413
002803b0005003b4003c04ca009b04cf005001f9009b02d2003c0498005a
043c00190488006e045f007303b1001903d4000a0466009604130028058e
00640524002803f2009b03f2009b03f2009b01e3005a0356005a0686009b
01f9ffac041300280413002803b4ff5703b4ff570448002d058e0064058e
0064058e0064058e00640481006904810069048100690456003203310019
0411002d04d10096024b0000034a000004b8008c024b00000413002803b0
005003b4003c04cf005002d2003c0498005a0488006e045f007303d4000a
0466009604130028058e00640524002801f9009b0456003203b00050045f
0073049b003c0000ffdc0000ff250000ffdc0000fe51028d00ab028d00a0
02da0043034d007901a8ffba000000460000004600000046000000460000
00480000004600000046000000460435017c0435012e043500b704350081
0435012c043500be043500af043500810435009a043500db04350085028d
00c1043500b3060001000600010002420036060001000435009e04350098
043500cb0600010006000100060001000600010006000100000000460600
010006000100060001000600010006000100060001000600010006000100
051bffba06000100060001000600010005b5003a05b5003a01f4ffba01f4
ffba060001000600010006000100060001000481003604350036043dffba
043dffba03e9004a03e9004a067f0014077600140327ffba041effba067f
0014077600140327ffba041effba051b003204b500240300fff706000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010000000030
0000004600000046000000400000004606000100060001000000ffdc0000
fe510000ff160000ff160000ff160000ff160000ff160000ff160000ff16
0000ff160000ff160000ffdc0000ff160000ffdc0000ff200000ffdc0473
004a08000000060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
06000100060001000600010006000100060001000600010006000100028d
007f028d005d0600010004ee0015034d007901a8000e01d6ffdc01a80056
01d60010037500320375003201a8002d01d60013051b003204b5002401f4
ffba01f4ffba01a8009301d6001305b5003a05b5003a01f4ffba01f4ffba
024200000300fff705b5003a05b5003a01f4ffba01f4ffba05b5003a05b5
003a01f4ffba01f4ffba0481003604350036043dffba043dffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba02b3
005f02b3005f02b3005f02b3005f03e9004a03e9004a03e9004a03e9004a
0692003e0692003e043fffba043fffba0692003e0692003e043fffba043f
ffba08c9003e08c9003e06c5ffba06c5ffba08c9003e08c9003e06c5ffba
06c5ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7
ffba04a7ffba045a002a039a00360435ffba0327ffba045a002a039a0036
0435ffba0327ffba064f0027064f00270224ffba021affba04a7004604a7
00460224ffba021affba04cf002d04cf002d0327ffba0327ffba040d0047
040d004701a8ffba01a8ffba02b4002302b400230327ffba0327ffba0435
00450435004501f4ffba01f4ffba024200360300fff7039affba0327ffba
0375003203750032051b003204b50024051b003204b5002401f4ffba01f4
ffba045a004004ce0049045a002604ce0039045a005304ce004a045a0053
04ce004a0600010006000100000000460000004606000100060001000600
010000000046000000460600010006000100000000480000004606000100
060001000600010000000046000000460000004600000046000000400000
003006000100000000460000004606000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0600010006000100060001000600010006000100028d00ca028d00c7028d
00c606000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
06000100060001000100ffba0800ffba1000ffba06dc0063053f004406d5
00a1055b00830000fddc0000fc2f0000fca60000fe540000fcd70000fd73
0000fe290000fe0d0000fd110000fc670000fd9d0000fbf50000fc720000
fed50000fed50000ff02041b00a006ac006b06ac00190000feb60000fd73
0000fe080000fca60000fe530000fd110000fbc80000faf40000faaf0000
fc720000fbaa0000fb6a0000fcf10000fc7d0000fbdd0000fcc10000fb98
0000fdea0000fe840000fdc20000fcf10000fd5f0000fe760000febc0000
fceb0000fd6c0000fd580000fc900000fd150000fc2c0000fc130000fc12
0000fb960000fb9601c700880556fffd0473004a0556fffd0473004a0556
fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473004a
0556fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473
004a0556fffd0473004a0556fffd0473004a055600a20473004b055600a2
0473004b055600a20473004b055600a20473004b055600a20473004b0556
00a20473004b055600a20473004b055600a20473004b0239006301c7001f
023900ba01c7007c06390063047300440639006304730044063900630473
004406390063047300440639006304730044063900630473004406390063
0473004406dc0063053f004406dc0063053f004406dc0063053f004406dc
0063053f004406dc0063053f004405c700a10473008305c700a104730083
06d500a1055b008306d500a1055b008306d500a1055b008306d500a1055b
008306d500a1055b00830556000604000021055600060400002105560006
040000210556fffd0473004a0239ffe201c7ffb0063900630473004405c7
00a10473008305c700a10473008305c700a10473008305c700a104730083
05c700a1047300830000fefe0000fefe0000fefe0000fefe0455fffd02eb
000c07630007055afffb04a900a10380008604a900a10380008605c700a4
046b00880473fffd040000140473fffd04000014055600090400000f0555
0057042b0045055500a10473008706050063047300550639006004730044
05b5003a01f4ffba0224ffba021affba04a7004601f4009e01f4001001f4
001b01f4001001f4006b01f4fff90227ffce0000000f0000fff502aa00a4
02aa00a40000000e00000056000000560000ffcf01a8000f01d6ffbf01a8
fff501d6ffcd01a8001d01d6fff501a8009301d600130375003203750032
0375003203750032051b003204b5002405b5003a05b5003a01f4ffba01f4
ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba
01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4
ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a
01f4ffba01f4ffba0481003604350036043dffba043dffba048100360435
0036043dffba043dffba0481003604350036043dffba043dffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba0481
003604350036043dffba043dffba02b3003202b3003202b3005f02b3005f
02b3005f02b3005f02b3003202b3003202b3005f02b3005f02b3005f02b3
005f02b3005f02b3005f02b3003802b3003802b3004902b3004903e9004a
03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9
004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a
0692003e0692003e043fffba043fffba0692003e0692003e043fffba043f
ffba0692003e0692003e043fffba043fffba08c9003e08c9003e06c5ffba
06c5ffba08c9003e08c9003e06c5ffba06c5ffba04a7ffba04a7ffba045a
002a039a00360435ffba0327ffba064f0027064f0027064f00270224ffba
021affba064f0027064f00270224ffba021affba064f0027064f00270224
ffba021affba064f0027064f00270224ffba021affba064f0027064f0027
0224ffba021affba04a7004604a7004604a7004604a70046093e0032093e
00320740ffba0740ffba067f0014077600140327ffba041effba04cf002d
04cf002d0327ffba0327ffba04cf002d04cf002d0327ffba0327ffba04cf
002d04cf002d0327ffba0327ffba067f0014077600140327ffba041effba
067f0014077600140327ffba041effba067f0014077600140327ffba041e
ffba067f0014077600140327ffba041effba067f0014077600140327ffba
041effba040d0047040d004701a8ffba01a8ffba040d0047040d004701a8
ffba01a8ffba040d0047040d004701a8ffba01a8ffba040d0047040d0047
01a8ffba01a8ffba043500450435004501f4ffba01f4ffba043500450435
00450435004504350045043500450435004501f4ffba01f4ffba04350045
043500450481003604350036043dffba043dffba024200360300fff7031a
001a031a001a031a001a0375003203750032037500320375003203750032
037500320375003203750032037500320375003203750032037500320375
0032037500320375003203750032051bffba04b5ffba051b003204b50024
01f4ffba01f4ffba0375003203750032051b003204b5002401f4ffba01f4
ffba051b003204b50024067f0045067f0045067f0045067f004501a80028
0000fe290000fea20000ff300000ff1d0000ff120000ff920000fe7e08fc
003208ad00320000ffb50000ffb60000feed0000ff640000fe7e0000ff9f
018d000002f6fffd0000fe820000ff1004cd00320000ff580000ff580000
ff640692003e0692003e043fffba043fffba08c9003e08c9003e06c5ffba
06c5ffba045a002a039a00360435ffba0327ffba034d007902b400230242
003601f4ffba0290ffba01f4002f01f4003b01f4001201f400b101f4006d
067f00140776001401f9009b0000fed902bc000003f2009b045afff504ce
fff5045a005304ce004a045a005304ce004a045a005304ce004a045a0053
04ce004a045a005304ce004a045a005304ce004a04350071043500ad045a
000f04ce000f0473001406110014054000a7047300860540000a0473000a
05c7005105c700660400005005c7fffd067a00140540004a047300460474
00480556006e04d5005304e3ffc40639006d04fe000f070c008701c70083
0239001f055600960400008801c7001504000018072000a405c7ffb80473
008b0639006006f200630557004406090014047300860556009e0556006b
0400004f04f20094030b00440239002404e300140239002404e3003005fb
006105c700a1062e00100400002104e300290400002804e3002904e30031
045c0044045c003f0473003c0473005503ab003203e50024047300870214
00bc034e00bc04ac0072023900b00aaa009e09c7009e08640046087f0096
06aa0096039c008309c7009c078e009c062b0087047300550556fffd0473
004a0000fefe0556fffd0473004a08000001071d00440639006d0473001a
0639006d0473004205560096040000880639006304730044063900630473
004404e30029045c004c01c7ffa20aaa009e09c7009e086400460639006d
04730042084600a404f2009e05c7009c047300870556fffd0473004a0556
fffd0473004a055600a20473004b055600a20473004b0239ff8a0239ff64
023900040239fff60639006304730044063900630473004405c700a102aa
ffcc05c700a102aa006805c700a10473007605c700a1047300830556005c
0400003f04e3003002390024045c0051037e001305c700a40473008705a6
00a404d6005e0486005e04e30029040000280556fffd0473004a055600a2
0473004b06390063047300440000fefd0639006304730044063900630473
004406390063047300440556000604000021047300570473004804730086
04730086040000130400005004730046047300460473005505e9005503ab
004903ab0032050d0032040f00440239ffb9047300420473004204780050
0402001904ef00190473008b047300870473008701c7001901c7005702d9
0044029e0000026e001401c700830493008306aa008406aa008406aa0087
0473ffa60473008b046c00870473004406530044063f00570466004402aa
ffe402aaffe402aaffe402aa008502aa008502aa008502aaffe40455008a
0455008a0400003f01c7ffa20214ffb901c7ff7202cb00000239000f0239
002404730019048c0054046000880400001a05c700060400001804280019
0400002804540028045c004c045c00790400002404000050040000240400
00500639006304400088040f004904780050046b0088032e000004000008
033b008804730048040000240400005007b7004607400046080b004605b3
0024036f002405c00024061c0013054a0083050f008303e2001e04380063
03110064031100640146ffce01eb006401eb000001eb000002ea006403d9
0000029100000187005a02d7005e01c7008001c7006c01c7008a02aa00fb
02aa00fb02ca003202ca003204ac007004ac007004ac006504ac006502aa
012102aa00de02aa005902aa012102aa001d02aa005902aa00de023900b6
023900b602aa00fb02aa00fb02aa00a602aa00a602aa00a602aa001d02aa
ffe202aafffb029400000142006402b8003202a0000002ca003203100096
0310009603100096031000960310009602aa006202aa006202aa002802aa
001d02aa0047045700960457009604570096045700960457004304570043
045700430457004304570043031000430457002f0457002f0457002f0457
002f0457002f0310002f0457002504570025045700250457002504570025
0310002f0457001a0457001a0457001a0457001a0457001a0310001a0457
004204570042045700420457004204570042031000420457009604570096
045700960457009604570042045700420457004204570042045700420310
00420457002f0457002f0457002f0457002f0457002f0310002f0457002f
0457002f0457002f0457002f0457002f0310002f04570026045700260457
002604570026045700260310002604570042045700420457004204570042
045700420310004204570096045700960457009604570096045700420457
004204570042045700420457004203100042045700260457002604570026
045700260457002603100026045700230457002304570023045700230457
0023031000230457002f0457002f0457002f0457002f0457002f0310002f
0457004b0457004b0457004b0457004b0457004b0310004b045700960457
009604570096045700960457004204570042045700420457004204570042
031000420457001a0457001a0457001a0457001a0457001a0310001a0457
002404570024045700240457002404570024031000240457002f0457002f
0457002f0457002f0457002f0310002f0457004e0457004e0457004e0457
004e0457004e0310004e045700960457009604570096045700960000fec1
0000fec60000fdac0000fed80000ff920000fee90000ff4c0000fea00000
fec40000ffce0000ff660000fea00000fed80000fed80000ff970000ff98
0000ff990000fff40000ff420000ff420000ff440000ff5f0000fe870000
ffec0000ffa60000ff510000ff510000ff510000fec90000ff1c00000000
0000fee90000ff4c0000ff930000ff2a0000ff560000ffce0000fe870000
febb0000fec40000fec40000fed80000fed80000feb30000fec90000fdad
0000fec80000feb30000fec90000fdad0000fe160000fee60000ffa60000
fe870000ff440000feba0000ff230000ff9a0000fdac0000fe8800000000
0000feb00000ff980000fe930000ffa60000fe870000fe1c0000ff660000
ff440000feb00000feb00000feb00000ff030000ff520000fd1f0000ff53
0000ff530000ff530000feb50000feb50000ffc30000feae0000fedc0000
fec70000fec80000fedc0000fe1e0000ff420000ff510000feb70000feb0
02aa00de02aa005902aa00fa049a007004600000062e001407aa0000062e
0014047b004c063f005704cf0044063900630473004405c7007004000050
04e300a8033b008804ff0000043c0032060d000a049d0042072000a406aa
0084056500630473008b056400a40400000a0556006b0556006b04e00005
04c5001905e5005f046e004403b600140347002804cf00440495005b0400
005001c7ffa2063900600389004d03890050055600a205c000a10473004b
047800870ab4006d04fe00100639001404e70014079900bf05b500880558
000104000006072e00bf0590008806a10078057b007a086d00bf06f00088
04d5006603ab001f065f0039058200480639006004730044066d0009050c
001a066d0009050c001a08980063072c004406aa002004e6001c0987006d
06d000500000fe370ab4006d04fe001005c7006604000050040700140000
fea60000febc0000ff980000ff980000fc2b0000fc4c05c000a104780087
05400004042b00140556009e04730087055d00a40464008804d5004e03ab
003204a900040380000005ef002904490028070900a4052f0088091800a0
06f600880606003e042b002305c700660400005004e3003003aa00260767
00310587002605550057042b004506e4000a0554000a06e4000a0554000a
023900bf07630007055afffb055700a1046800860540001204ab001805c7
00a4046b008805c700a4046b008805550057042b004506aa00980580008c
02aa002e0556fffd0473004a0556fffd0473004a08000001071d00440556
00a20473004b060500630473005507630007055afffb04d5004e03ab0032
04d5004e045c004c05c000a10478008705c000a104780087063900630473
0044063900600473004405c0004a0415002b0515000a040000210515000a
040000210515000a0400002105550057042b0045071500a805c0008b0540
004a0473004607bf004a0703004607a6006606860053054d006604130053
07c3001207470018084600a4070700880639006d0478005005f900300553
00260000ff430000fec90000ff770000ffb00000ff470000ff560000ff74
0000fed70000feac000000000000ff520000ff56000000000000feac0000
fd9a000000000000ff6a0000ff7c0000ff690000ff560000feac0000ff7f
0000ff560000fdef0000ff430000ff690000ff7c000000000000fdae0000
ff8c000001020000fefe0000fefe0000fedf0000fedf0000ff580000ff20
0000fefe0556fffd0473004a055600960473008605560096047300860556
00960473008605c700660400005005c7009e0473004605c7009e04730046
05c7009e0473004605c7009e0473004605c7009e04730046055600a20473
004b055600a20473004b055600a20473004b055600a20473004b055600a2
0473004b04e300a8023900130639006d0473004205c700a40473008705c7
00a40473008705c700a40473008705c700930473006805c700a404730087
0239ffdf01c7ff9202390020023900060556009604000088055600960400
008805560096040000880473009601c7007e0473009601c7ffb904730096
01c7ffa50473009601c7ffa306aa009806aa008706aa009806aa008706aa
009806aa008705c7009c0473008705c7009c0473008705c7009c04730087
05c7009c0473008706390063047300440639006304730044063900630473
004406390063047300440556009e047300870556009e0473008705c700a1
02aa008505c700a102aa008505c700a102aa005e05c700a102aa00260556
005c0400003f0556005c0400003f0556005c0400003f0556005c0400003f
0556005c0400003f04e300300239002404e300300239002404e300300239
ffff04e300300239000e05c700a10473008305c700a10473008305c700a1
0473008305c700a10473008305c700a104730083055600090400001a0556
00090400001a078d001905c70006078d001905c70006055600090400000f
055600090400000f055600060400002104e300290400002804e300290400
002804e3002904000028047300870239000305c70006040000210473004a
01c7008904a0004804a0004804a0004804a0004804a0004804a0004804a0
004804a000480556fffd0556fffd06820013068200130682001306820013
068200560682005603910062039100620391006203910062039100620391
0062061e0000061e0000076c0000076c0000076c0000076c00000473008b
0473008b0473008b0473008b0473008b0473008b0473008b0473008b068f
0000068f0000081f0000081f0000081f0000081f0000081ffff3081ffff3
01c7008101c7008101c7ff9b01c7ff9b01c7ffeb01c7ffeb01c7ffa201c7
ffa20301000003010000049100000491000004910000049100000491fff3
0491fff3047300440473004404730044047300440473004404730044069d
0000069d0000082d0000082d000007c9000007c900000460008804600088
0460008804600088046000880460008804600088046000880682000007ae
00000812000007ae0006063f0057063f0057063f0057063f0057063f0057
063f0057063f0057063f0057065f0000065f000007ef000007ef0000078b
0000078b0000078bffff078bffff04a0004804a000480391006203910062
0473008b0473008b01c7ffe601c700680473004404730044046000880460
0088063f0057063f005704a0004804a0004804a0004804a0004804a00048
04a0004804a0004804a000480556fffd0556fffd06820013068200130682
00130682001306820056068200560473008b0473008b0473008b0473008b
0473008b0473008b0473008b0473008b068f0000068f0000081f0000081f
0000081f0000081f0000081ffff3081ffff3063f0057063f0057063f0057
063f0057063f0057063f0057063f0057063f0057065f0000065f000007ef
000007ef0000078b0000078b0000078bffff078bffff04a0004804a00048
04a0004804a0004804a0004804a0004804a000480556fffd0556fffd0556
fffd0556fffd0556fffd02aa00e502aa00fd02aa00e502aa000602aa0006
0473008b0473008b0473008b0473008b0473008b068200000682000006f3
000006f3000005c700a402aa001302aa001302aa000601c7ffbb01c7ffab
01c7ffca01c7ffca01c7ff9301c7ff930239001a0239fff5036500000365
000002aa001302aa001302aa000604600088046000880460008804600088
048d0083048d00830460008804600088055600060556000606e600000718
0000061e000002aaffea02aaffea02aa0059063f0057063f0057063f0057
063f0057063f005707650000069d000007270000065f000005fb006102aa
00de02aa00e50473000d05c7006605c7006606aa008705c70024095000a1
078d00190556001f04e30030080000290400003004c100660000ff530000
ff530000ff530000ff5301c7001901c7ffa2042b00050556001105740046
02cbffa3057a008702f0ffc8057f000a057f000a02aa008402aa008402aa
00c902aa00c902aa00a002aa005902aaffaf02aa003a02aa0006023900b9
02aa00a902aa00a902aa00a902aa00a9032e001e032e001e02aa003a0000
ff730000ffa50000fed80000ff230000ff720000ff720000fee70000ffa5
0000ff530000ff530000ff530556009e0473008703f8001905fb0019071d
00440440001904000050046900870469001903eb008703ab003201c70088
0361004104000088033600100580008c04780087047300440400001304de
004404de004404de000d078d005003a800440473004404730044042b0084
0455001f0455001f03aa00260460008804c6004405de004404c600440400
001a05c700060400002803ab0032036b003f04db001f02eb00880400001a
04550088042b008405b4007a04ab001803a00000054f0000035100320351
ffd103980032034800320348003203f80032036e0032015600690284002d
0366003202d000320415003203710032036f003204180032030f00320359
0032039c003203760031036f003204fb000002fa003202fa003203040032
04cc0032030500640305003202f9003202f90032028c0032028c00320304
00320142006402b6006404950064030f00640305003202d5003203050032
030500320306006401c20032030f00640342003204950064029200000320
00000315006402920000030600320385003202bf00000142006401eb0064
030f0064029200000315006402920000030900320385003202bf000005ed
00460a660046061300460689ffba0541ffba01e9003c045a00110000ff0d
0000ff350000fece0000feb70000fec90000ffcf0000ff4f0000ff9e0000
feca02b3005f02b3005f03e9004a03e9004a039affba0327ffba039affba
0327ffba05ad0069053d002d05fd009604dc005004e0003c05f6009b053f
00280650002804ac00720000fe3b0000fe660000fe660473fffc02aa0053
02d5ffce01a8ffba01a8ffba01a8ffba01a8ffba0658001509c500470400
000008000000040000000800000002ab0000020000000155000004730000
02390000019a000000ab00000000000005e5000305c7006606aa00980580
008c0744008307180046071800480556fffd05c70066040000140473000a
04e300300400004f0400002804a5001d000001020000ff420000febf0000
ff3a0000ff53048d000a05c7005105c7006605c70051045500a102eb0088
0000ff430000ff040000ffac02d200960000ff37021affba0250001e0000
ff3a0000ff5b0000ff5f0000ff7e0000ff940000ff4a0000fe9c05b5003a
05b5003a01f4ff9601f4ff9605b5003a05b5003a01f4ffba01f4ffba05b5
003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba
05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4
ffba05b5003a05b5003a01f4ffba01f4ffba0481003604350036043dffba
043dffba0481003604350036043dffba043dffba02b3003202b3003202b3
005f02b3005f03e9004a03e9004a0692003e0692003e043fffba043fffba
045a002a039a00360435ffba0327ffba045a002a039a00360435ffba0327
ffba045a002a039a00360435ffba0327ffba064f0027064f00270224ffba
021affba064f0027064f00270224ffba021affba067f0014077600140327
ffba041effba067f0014077600140327ffba041effba067f001407760014
0327ffba041effba02b4002302b400230327ffba0327ffba02b4002302b4
00230327ffba0327ffba043500450435004501f4ffba01f4ffba04350045
0435004501f4ffba01f4ffba043500450435004501f4ffba01f4ffba040d
0047040d004701a8ffba01a8ffba03e9004a03e9004a03e9004a03e9004a
0692003e0692003e043fffba043fffba0473ff93047300460239ffbf06aa
ffd50473ffb70473ff9102aaffa402aaffa40400ffff0239ffb904000028
04730089030b0064047400480649002401c7001901c700190473001e0460
001e048c000a04730086047300460239001305b400420400008801c7fffc
06aa00870473008b0473008702aafffb0400003f0318ffa20400001a0400
000f040000280473004a04730048047300460473004b03ab004903ab0032
0534005501c700880400001301c7ffa204730083045c004c0304006402d5
003202c9003302fc0032028c003201d5003201d500000304003203110064
01420019014200640142006401420019022a000001420064014200090233
00640493006404930064030fffc9030f0064030e00640305003203000032
02b800320142ffca01c20032030f001d031a00320306006402d400640292
000002de003202de003202de003202f4003202ea00320000febc0000febc
0000ff730000fea9023900b902fa003202f900320305003202a0000002f9
00320639006d0556fffd0473000f05c7006602aa004104a0004804a00048
04a0004804a0004804a0004804a0004804a0004804a0004801c7ff9b01c7
ffab01c7ff9b01c7ffab01c7ff9b01c7ffbb01c7ff9b01c7ffbb04600088
0460008804600088046000880460008804600088046000880460008801c7
ffab01c7ffab01c7ffbb01c7ffbb04600088046000880460008804600088
045a005304ce004a03a000130556001105c700290558000b055600a20473
004b0400003301c7ffa205e600630473004805c7000002aa000f05560006
0400002104000013040000500400001301c700830455fffd02eb00010556
00090400000f055600090400000f04d5005303ab00490540001204ab0018
0000fec60000fed40000fec60000fed40000fe5f0000fe5f0000ff720000
ff730000fee7078b000a03eb004c040000130473000a01c700150473fff4
0556001105c700a1047300190239ff8b05c700a404730087055600960400
008804e30029040000280400003b049e00a403670088053000480000ff53
0000ffbc0000fefe0000fefe0000fea40000fea401c7008805c900a505c7
009c05c900a50000fecd0000ff480000fec90000fece0000fec50000fed0
0000fed10000feee0000fed60000fedc0000fdd90639005804730048078d
001905c70006059f00a40000feb905dc006304c60009084c001906ba0006
023900b9038000720187005a0187005a0400009904000099023900b00239
00b0023900b002aa001904e3003004730050000000000000002a0000002a
0000002a0000002a000000d60000017e00000320000005a60000074e0000
09380000097e000009fe00000aa400000b8400000bec00000c6400000caa
00000ce600000d5600000fcc000010d20000134e00001584000017760000
19d600001c6000001d0c000020e60000240c0000246800002526000025a8
000026180000269e000027900000299000002bf000002dfa00002f500000
30cc000031ae0000327a0000344600003580000036ba000037de00003a2a
00003aca00003e280000401000004190000042d400004504000047ae0000
4b0800004c0a00004d6000004f8200005262000055d80000581600005970
000059da00005a4400005aa800005b3000005b6400005be000005f2e0000
6156000063a2000065c0000067ca0000693a00006b8000006d5800006f26
000070a4000073a0000075060000785000007a4a00007c6000007e580000
80300000814a0000858c000086f6000088c800008b32000090de00009328
000095f4000097ee000098ec0000993800009a3a00009ada00009b260000
9b5a00009b9600009bd800009c3e00009c8400009cb800009cee00009d24
00009d7400009db600009e0800009e4000009e9200009ec800009f080000
9f4a00009f8800009fd20000a0120000a0400000a0780000a0c80000a0fe
0000a13e0000a1780000a1bc0000a2060000a2420000a2720000a2b60000
a2ee0000a37e0000a4040000a6120000a7a60000a9560000a9a20000aa36
0000ac5a0000aeae0000b09e0000b18a0000b20c0000b2760000b3940000
b4f00000b7380000b89a0000b9280000b9d20000ba960000bbde0000bd88
0000be760000bf3c0000bfa00000c00e0000c1380000c25c0000c2ec0000
c4ce0000c7280000ca7a0000cb700000cc160000cc660000cd1c0000ce3c
0000cfda0000d0740000d1380000d1f80000d2600000d29c0000d2f40000
d3420000d55a0000d7a00000d7d80000d80a0000d9340000da600000db0e
0000dbb20000dc540000dd260000dd7a0000ddb00000de080000df5a0000
dfcc0000e0260000e19e0000e30a0000e3ea0000e41c0000e4b80000e5dc
0000e8520000e88c0000e8d00000e90c0000e96e0000e9b00000e9f60000
ea420000ea740000eac80000eb060000eb360000eb740000ebba0000ebfc
0000ec3a0000ecbc0000ed2a0000ee100000ee4c0000eecc0000ef000000
efa20000f02a0000f0960000f0f80000f1640000f2500000f3420000f376
0000f3aa0000f3da0000f41e0000f4960000f6100000f82a0000f85c0000
f8960000f9900000fb1e0000fb540000fcb80000fd340000fe140000ff0a
0001009a00010204000103f2000104ee0001053400010568000105aa0001
05e40001063800010680000106ca000106fa0001072a0001091200010950
00010978000109a8000109dc00010a0200010a2800010a7000010c260001
0da000010dc600010dec00010e3000010e6000010e9000010ee600010fc4
000110d60001111a00011152000111ac000111ea0001121e0001124e0001
128a000112ca000113080001134400011386000113bc000113f800011438
0001145e00011482000114d20001162e00011684000116b8000117060001
175200011794000117cc000118020001184a000118ec00011a8800011c50
00011dd200011fc4000121160001229a0001237c00012516000125800001
25a800012646000128c8000129080001294800012988000129c600012a24
00012a8200012af000012b1000012bfa00012c9a00012cd000012d1e0001
2d6800012db200012dce00012dea00012e0a00012e2a00012e4a00012e6a
00012e9000012eb600012edc00012f0200012f3200012f5a00012f820001
2fae00012fda0001300e00013038000130640001309a000130c4000130f0
00013126000131500001317a000131ae000131de00013212000132560001
3286000132ba000132fc0001333000013362000133a4000133d800013408
0001344a0001348e000134d4000135300001354c00013568000135840001
35a0000135bc0001372a000139d600013c4600013c6200013c7c00013c98
00013cb400013cd000013cec00013d4800013d8200013dec00013eb60001
3f560001402c000140ac00014134000141a40001423a00014298000142de
0001433c0001439e0001445600014514000145400001459c000145e00001
474c000148400001486a00014886000148b2000148ea0001493600014976
000149aa000149da00014a0a00014a3a00014a7e00014aae00014ade0001
4b1e00014b4e00014b7e00014bae00014bee00014c1e00014c4e00014c7e
00014ca400014ea800014ed800014f08000150580001520e0001523e0001
526c0001529c000152ca000152fa000153280001534c00015370000153a0
0001551000015548000155780001570a0001573800015766000157940001
57bc0001591a00015ab200015aea00015b2a00015b6600015b9600015bc4
00015be000015c1000015c4000015d3000015e9800015ec800015f020001
5f4200015f7200015fa200015fe40001600a0001603000016070000160b0
000160e0000161200001620a0001628a0001636e0001639e000163ce0001
63fe0001642e0001646a0001649c000164ce000164fe0001652e00016574
000165a6000165d60001660c0001667e000166b200016880000169820001
6b1200016d4200016f9200017124000171880001721200017222000172b0
000174ae000175da0001774600017836000179ba00017bd400017e000001
7ef200017f0200017f120001802a0001803a0001804a0001805a0001806a
0001807a00018198000181a8000181b80001822c0001823c0001830c0001
831c0001842e0001843e0001844e0001845e000185bc0001879a000187dc
000188120001884800018878000188a8000188fc0001892400018aae0001
8bf600018d4a00018eb2000190360001909a0001922c0001934800019358
00019368000194ee000194fe00019664000197be000198f200019a500001
9bbe00019d8400019dc400019dfc00019e3200019e5800019e8800019eae
0001a0240001a0540001a18a0001a19a0001a1aa0001a1ec0001a1fc0001
a3900001a53c0001a6c60001a6ee0001a71e0001a87a0001a88a0001a9c2
0001a9d20001aa6c0001abcc0001abdc0001ae420001afcc0001b1340001
b1640001b2da0001b40c0001b41c0001b42c0001b43c0001b5160001b526
0001b5360001b5460001b63e0001b7b80001b7c80001b8f00001ba240001
bb760001bd0a0001be280001bfb40001c0c60001c0fc0001c3320001c3d2
0001c3e20001c5780001c71a0001c79e0001c9200001c9300001cb980001
cd180001ce980001cec80001d0680001d1ee0001d3b20001d4de0001d4ee
0001d61e0001d62e0001d63e0001d6fe0001d70e0001d8f40001d9040001
da3a0001db480001dcf40001deaa0001dfec0001e15c0001e2a40001e2f6
0001e4d80001e6540001e6920001e8380001e85c0001e99c0001e9ac0001
e9bc0001e9f40001ea040001eb900001ecf80001ee6c0001ee900001eec0
0001f02e0001f0e00001f19e0001f1cc0001f3820001f47a0001f5080001
f62e0001f6dc0001f7b00001f7fa0001f8720001f9320001f95a0001f99e
0001f9f40001fad00001fb1a0001fb4e0001fb760001fb9e0001fbd20001
fc160001fc5a0001fc980001fdd60001fe8e0001ffae00020024000200f2
00020144000201d6000202860002037a000203ce00020464000205220002
060c000206be000207de00020830000208da00020a1000020ae800020bce
00020cd400020dba00020e9c00020f900002102e000211340002122e0002
12a60002131e00021394000213ca00021426000214ee0002157a000215b2
000215f800021628000216920002175200021786000217b6000217ea0002
181a0002184a0002187a00021a1a00021a5200021a9200021aca00021b02
00021b9e00021c9800021cc800021d6c00021d9a00021dda00021e2a0002
1e5a00021ea60002203e000221a4000223040002234a0002239e000223d6
000225480002257e000226100002264e0002267c000226ba000227ea0002
28120002294e000229de00022a8800022b0a00022bc600022cde00022dec
00022e2000022ea60002300200023084000230ce000231d8000232200002
3324000233a0000233f80002347c000235660002367c0002377800023822
00023912000239e400023ace00023bb600023c6600023ce800023f460002
3f7000023f9a000240520002407c000241be000242c4000243ae000243d8
000244020002442c0002445600024480000246000002462a000246540002
467e000246a8000246d2000246fc000247260002475000024784000247ae
000247d8000248020002497c0002498c00024aa600024ab600024ae00002
4b0a00024b3400024b5e00024d0800024f240002505200025062000251de
000251ee000253340002550000025606000257860002592600025b4a0002
5ca400025e8600025fca000260f8000261e6000262100002623a00026264
0002628e000262b8000262e20002630c00026336000263600002638a0002
63b4000263de00026408000264320002645c000266980002681400026958
00026b4000026c8800026cb200026cdc00026d0c00026d3c00026d8c0002
6ddc00026e1c00026e8e00026ee200026f4000026f9600026fcc0002700e
000270540002709e000270ce00027106000271360002726e000275b40002
75de00027608000276320002765c00027686000276b0000276da00027704
0002772e0002775800027782000277ac000277d6000278000002782a0002
78540002787e000278a8000278d2000278fc00027926000279500002797a
000279a4000279ce000279f800027a2200027a4c00027aea00027b000002
7b2a00027e0a00027e1a00027f340002805600028194000282d60002847c
0002848c000285ce0002871e0002890e00028ae200028bfa00028c0a0002
8c8c00028d1a00028e1a00028e2a00028eca00028eda00028ff000029142
00029272000292820002935000029360000294d6000294e6000295fa0002
960a0002973e000298d400029990000299a000029a9e00029bf800029c84
00029c9400029dbe00029f4a0002a0060002a0160002a0b20002a0c20002
a1900002a1a00002a2780002a2880002a3900002a3a00002a5660002a576
0002a6ce0002a6de0002a9480002a9580002ab520002ab620002accc0002
acdc0002adcc0002addc0002af740002af840002b0a20002b0b20002b1f2
0002b2020002b2120002b2220002b39a0002b3aa0002b3ba0002b3ca0002
b51c0002b66a0002b7380002b81c0002b99c0002bb1e0002bc1e0002bd32
0002be760002be860002bf740002c04e0002c1ea0002c1fa0002c3180002
c41e0002c61c0002c62c0002c63c0002c64c0002c7960002c7a60002c85e
0002c86e0002c97c0002c98c0002ca780002ca880002cba60002cbb60002
cc540002cc640002cc740002cd620002ced60002d0020002d0fc0002d10c
0002d11c0002d12c0002d2ca0002d4840002d5520002d5620002d7c20002
da080002dc8e0002def20002e1760002e3e80002e5b80002e76e0002e798
0002e7c20002e7d20002e7e20002e80c0002e8360002e8600002e8700002
e8800002e8aa0002e8d40002e8e40002e8f40002e91e0002e9480002e972
0002e9820002e9920002e9a20002e9b20002e9c20002e9d20002e9fc0002
ea0c0002ea1c0002ea460002ea700002ea9a0002eac40002eaee0002eb18
0002eb420002eb6c0002eb960002ebc00002ebea0002ec140002ec3e0002
ec680002ec920002ecbc0002ece60002ed100002ed3a0002ed640002ed8e
0002edb80002ede20002ee0c0002ee360002ee600002ee8a0002eeb40002
eede0002ef080002ef320002ef5c0002ef860002efb00002efda0002f004
0002f02e0002f0580002f0820002f0ac0002f0d60002f1000002f12a0002
f1540002f17e0002f1a80002f1d20002f1fc0002f2260002f2500002f27a
0002f2a40002f2ce0002f2f80002f3980002f3dc0002f4520002f47c0002
f4a60002f4d00002f4fa0002f5240002f54e0002f5780002f5a20002f5cc
0002f5f60002f6200002f64a0002f6740002f69e0002f6c80002f6f20002
f71c0002f7460002f7700002f79a0002f7c40002f7ee0002f8180002f842
0002f8760002f8aa0002f8de0002fa700002fc0c0002fda80002ff340002
ff7a0002ffc00003002e0003008a000300dc0003014c00030224000302f0
000303c800030494000305340003064e0003070200030784000307de0003
081e0003093c00030a8600030c1e00030c7a00030cd800030d3400030d90
00030e4400030efa00030fa600031052000310fe000311b60003126e0003
1326000313380003134a0003135c0003136e00031380000313ee0003145c
0003151400031526000315380003154a0003155a0003156c0003157e0003
1590000315a2000315b4000315c60003167400031720000317ce0003187a
000319120003194c00031976000319a0000319f400031a4600031ac20003
1b0c00031b8800031bdc00031c6000031cb200031d2800031d8000031de6
00031e3c00031e9600031f1400031f6000031fbe00032022000320700003
20be000321160003215e00032188000321b6000321dc0003221000032240
00032270000322c20003233000032386000323fa0003244e000324c20003
250800032570000325b600032612000326420003267c000326a2000326d2
000326f80003271e0003275000032780000327d2000328380003288e0003
28f400032948000329b6000329f800032a5800032a9a00032ae600032b20
00032b5c00032b9600032bd200032c0600032c3800032c6800032c980003
2cc200032ce800032d1200032d4000032d6a00032db600032dfa00032e30
00032e6c00032ea000032ece00032f0c00032f3c00032f7600032fa00003
2fce00032ff40003301a00033046000330a2000330d20003310200033132
0003316a0003319e000331cc000331fc0003322c0003325c0003328c0003
32c0000333160003334a000333aa000333de000334360003346a000334c6
0003356400033632000337520003381a000338aa0003394000033b2c0003
3d2800033ea00003401c000341c60003437800034460000345960003468e
000347a0000348be000349f400034b5e00034ccc00034e6200034fde0003
50ee000350fe0003522a00035366000354a80003562c000357060003577c
00035832000358d800035a4800035a8000035afa00035bbc00035c760003
5cde00035de400035f1a00035fe600036144000361be0003623800036304
000363be00036472000364ce0003652800036570000365e00003665c0003
66a6000366e0000367260003676a000367bc0003680e0003689000036912
0003695400036994000369ca00036a0000036a2e00036a5c00036a900003
6ac400036b0600036b4800036b8400036bc000036bfa00036c3400036c66
00036c9800036cca00036cfc00036d3600036d7000036db200036df40003
6e3600036e7800036ec600036f1400036f5600036f9800036fd800037018
000370520003708c000370d80003712400037162000371a2000371e80003
722e0003726a000372c0000372fc0003733800037378000373b8000373f4
0003743000037470000374b0000374f4000375380003758c0003761a0003
765c0003769e000377060003776e000377a0000377d20003780a00037842
000378d80003796e000379b800037a0200037a3e00037a7a00037ad00003
7b2600037b7000037bba00037c1200037c6a00037caa00037cea00037d22
00037d5a00037da400037dee00037e2c00037e6a00037eac00037eee0003
7f4200037f9600037fdc0003802200038068000380ae000381040003815a
000381b000038206000382520003829e000382ea00038336000383aa0003
841e00038492000385060003854400038582000385c0000385fe0003863c
0003867a000386be000387020003874e0003879a000387fa000388460003
8884000388d2000389e200038a3200038a8200038aba00038af200038b48
00038b9e00038c1200038c7600038cb800038cfa00038d5000038d9e0003
8dea00038e3600038e7600038eb600038efe00038f4600038fb20003900c
000390440003907c000390bc000390fc000391cc000392c8000393880003
9476000394cc0003952200039574000395c80003962c00039690000396e6
0003973c000397b2000398280003986a000398ac000398ee000399300003
9972000399b400039a0a00039a6000039ab200039b0600039b8e00039c10
00039cb000039d5200039d9000039dce00039e0c00039e4800039e860003
9ec400039f0200039f3e0003a0220003a10e0003a2240003a3400003a40a
0003a4d40003a5ce0003a6c80003a7c60003a8c40003a9e20003ab000003
ac260003ad4c0003ae4e0003af500003afe20003b0740003b0b20003b0f0
0003b14a0003b1a40003b1dc0003b2140003b3240003b3340003b37c0003
b3c40003b41c0003b4740003b4a60003b4d80003b51a0003b55c0003b596
0003b5d00003b6140003b6580003b6d00003b74a0003b7da0003b81e0003
b85e0003b8e00003b9620003baba0003baca0003bb180003bb660003bba2
0003bbde0003bc240003bc6a0003bcb80003bd060003bd560003bda60003
be020003be5e0003bfd40003c13c0003c1740003c1ae0003c1fa0003c246
0003c2980003c2ea0003c33c0003c3920003c3ce0003c40a0003c4600003
c4b40003c5ec0003c68c0003c6da0003c71a0003c7540003c8ea0003cb6e
0003cc320003cdc80003cf260003cff40003d19a0003d3ee0003d6260003
d66c0003d69e0003d7480003d86c0003d8900003d92a0003da360003db46
0003dc560003dd640003deea0003df1c0003dfbe0003dfe60003e0480003
e0aa0003e10c0003e16e0003e1ac0003e1ea0003e2240003e25e0003e28a
0003e2d60003e3100003e34a0003e4a60003e5fa0003e60a0003e6c80003
e7fe0003e85c0003e9740003eb020003eba80003ecee0003ed2c0003ed6a
0003eda80003edfc0003ee240003ee7e0003eee20003ef2a0003ef8c0003
efec0003f05e0003f0da0003f1560003f1d80003f2640003f2f00003f37a
0003f3fa0003f4340003f4700003f5d40003f69e0003f6ce0003f6fe0003
f8360003f9860003f9960003fa840003fb580003fc500003fd460003fec8
00040022000400320004014a000401f6000403380004048e000404ea0004
0648000406d60004087c000409ee00040b0200040b3a00040b9e00040d4e
00040eb800040f1a00041082000411880004123e000412ea000414120004
1500000415e0000417200004184c0004196600041ad600041c5000041c60
00041d4000041e3600041ee600041fe20004208e00042198000422840004
234c0004247000042574000426a2000427e00004294c00042a8200042c16
00042dbe00042eb600042fca000430fc000431ee000432260004327c0004
332a0004333a0004339c000433f80004345e000434aa000434ea00043522
0004354e0004357c000435b6000436ec00043720000437a40004385a0004
388a0004390e0004393e0004397600043b0e00043c9a00043ce400043d1e
00043d7400043dc000043de600043e0c00043e4e00043e9000043ed20004
3f0200043f3a00043f7000043fa600043fe800044018000440480004413e
0004424200044276000442ae000442f40004432800044358000443900004
43c4000443f800044428000444580004448e000444c4000444f400044524
000445580004458c000445bc000445ec000446260004465a0004468c0004
46be000446f2000447260004475600044786000447b4000447e2000448f0
00044a5c00044b9000044cc400044cf400044d2e00044dc800044f320004
508e000451520004526600045296000452ca000453c200045572000455ca
000456420004577e000457bc0004582e0004585e0004588e000458c80004
595000045980000459b000045b4000045c8a00045d9600045ea400045fd0
0004612600046282000463e20004651c0004668e000467ee000467fe0004
69b400046adc00046b7600046cfe00046d0e00046e0a00046f90000470e8
0004719a0004726a00047376000474200004746e000474be0004756e0004
761400047690000477e0000478d4000479ca00047ad600047bae00047c88
00047d1c00047e2e00047fbe000480dc000481d20004827c000483260004
83f0000484980004856e000485ea00048648000487aa000488de00048a7a
00048b3c00048c3c00048d1600048e5400048f0000048fca000490ba0004
9188000492640004936a000494a200049592000496300004972200049892
000499dc00049c4800049d1a00049dce00049e9c00049f900004a0ce0004
a0de0004a2120004a3240004a3340004a4400004a5700004a5c40004a738
0004a8600004a9740004ab260004ad3a0004afce0004b1880004b2b40004
b4940004b6560004b7e80004b8b40004ba500004bac60004bb740004bc50
0004bcdc0004bd7e0004be200004bf040004c03c0004c2980004c3e00004
c3f00004c4000004c4620004c4c00004c5220004c5c00004c6580004c75c
0004c84a0004c85a0004c86a0004c9040004c99e0004c9da0004ca560004
caca0004cb200004cb540004cbda0004cc660004ccde0004cd3c0004cdd6
0004ce680004cee80004cf6a0004cffe0004d0320004d0940004d1460004
d30c0004d3440004d5200004d6340004d6440004d67a0004d6be0004d702
0004d7460004d77c0004d7ae0004d7f00004d88c0004d8e20004d9880004
da000004da860004daf60004db580004dbde0004dc3e0004dca80004dd1c
0004dd8c0004ddea0004de900004df280004df940004e0240004e0820004
e0f00004e1980004e2440004e2da0004e3440004e3c60004e42a0004e4d6
0004e58e0004e63a0004e6c80004e7240004e7900004e7e60004e8680004
e8e60004e96c0004e9f80004ea520004eabe0004eb2e0004eb9e0004ec0e
0004ec920004ed220004ed880004ee020004ee7e0004eef60004ef9c0004
f0380004f0c80004f1260004f1c40004f2400004f2d20004f3740004f41e
0004f4b60004f5120004f5680004f5d00004f6760004f71e0004f7e80004
f88e0004f8f00004f9480004f9a80004fa360004fabc0004fb4a0004fbaa
0004fc0e0004fc780004fce00004fd480004fdc60004fe4e0004fee20004
ff4e0004ffb60005001a000500c20005017c0005022a000502b800050316
00050382000503f2000504980005054200050604000506a60005070a0005
079a0005080c0005089c0005091a0005099600050a0200050a9000050aec
00050b4a00050bd000050c4c00050cb400050d1800050d6c00050dda0005
0e4200050ec000050f3600050fb0000510300005108c000510f200051156
000511f6000512980005134e000513fe0005145a000514d2000515300005
15ba00051652000516e200051748000517a600051834000518a60005193a
000519d200051a4200051ab200051b2a00051b8800051be800051c620005
1cbc00051d1c00051d7600051dd200051e3a00051ec800051efe00051f36
00051fc200051fec0005202e000520c2000521b000052240000522760005
22c600052338000523e400052476000524ce0005252800052580000525da
0005265e000526e400052788000528300005286e000528de000529720005
2a0a00052aa000052b4a00052b7c00052bcc00052c2000052c6600052d0a
00052d9400052e1a00052e7a00052ebe00052f0c00052fac0005303c0005
30dc0005318200053228000532ec0005331e00053348000533ce0005347e
000534b0000534d8000535a6000536040005369e000536ec000537520005
37fa00053868000538ce0005395a000539cc00053a4200053af600053b50
00053bc000053bfc00053c4e00053cd400053d3400053dd800053eb80005
3fe000054170000541cc0005422200054548000545e20005463e00054686
000547f4000549460005498c00054a9a00054b3200054c4000054d4a0005
4dec00054ed400054f6600055002000550f4000551f400055270000552f6
0005533e0005546e000555aa0005568e000556de00055712000558000005
592800055ac200055bf200055d0800055dcc00055ee800055f5600055fea
0005612a000561e00005634a0005647a000565ac000566d8000567840005
684a0005691c00056a7600056bf600056d2600056e4200056ffc0005714e
0005723a00057316000573d80005754200057692000576a2000576b20005
76c20005777a000578300005786c000578a2000578da0005791000057aa4
00057cb800057da200057eb8000580300005819e000582580005831a0005
83fe000584f600058694000587e8000589d600058b9c00058d7800058f10
00058ff8000590d40005921c0005939e00059486000595a0000595e20005
962c0005978a0005990000059a7200059b6a00059d4a00059ee600059f6a
00059f9a00059fe60005a0ae0005a17e0005a3120005a39a0005a4020005
a4540005a4a60005a6580005a8880005a9be0005aba00005ac7c0005ad96
0005af420005b14e0005b2500005b33c0005b52e0005b7360005b8a20005
ba260005bb860005bcf40005bd820005be120005bf2c0005c0380005c1e0
0005c33a0005c52a0005c6f40005c7880005c8240005c8ba0005c9420005
ca280005cb000005cc9a0005ce2c0005cf920005d0b60005d0c60005d0f6
0005d1260005d2a00005d4420005d4ec0005d5ce0005d68e0005d7380005
d7d20005d8b40005d9720005da4e0005dc040005dd3e0005ddca0005ddfa
0005de2a0005de5e0005de920005dea20005deb20005dee20005df120005
df460005df7a0005dfae0005dfe20005e0160005e04a0005e1c40005e1d4
0005e2040005e2340005e26c0005e2a00005e2d40005e3080005e33c0005
e3700005e3a40005e3dc0005e4120005e4420005e4820005e4ba0005e502
0005e5480005e57c0005e5b00005e5ea0005e6220005e6c20005e6d20005
e8240005e9ec0005eb920005ed3c0005ee880005ef9e0005f0ac0005f1c2
0005f2bc0005f3a40005f4c60005f5c20005f69a0005f78a0005f8460005
f8f80005f9c20005fa340005fada0005fb6a0005fbce0005fcdc0005fd42
0005fdf00005fee60005ff4e0005ffb60006006600060240000603440006
03c400060402000604ae0006053c00060624000606bc0006072200060820
000608e20006099c000609da00060a6a00060b6c00060c0000060c440006
0d6200060e8c0006106e00061230000613660006149400061594000615bc
000615e40006161a0006164c00061678000616a0000616c8000616f60006
1754000617c2000617fa000618320006186200061888000618bc000618f2
000619180006193e0006196c0006199a000619c600061a3c00061a640006
1ac600061aec00061b1200061b3800061b5e00061b8e00061bbe00061bee
00061c2800061c5800061c8e00061cbe00061cf000061d1600061d3c0006
1d7000061da600061dd600061e0600061e2c00061e5200061e7800061ea6
00061eda00061f6000061fa400061fde0006201200062056000620900006
20ca000620f00006211a00062166000621a8000621ce000621fc00062222
0006224800062288000622ba000622ea0006231a00062340000623660006
2396000623c6000623ec00062412000624380006245e00062484000624aa
000624d20006255a00062584000625f80006262000062696000626be0006
27200006275200062784000627b4000627ec0006281e0006284c00062886
000628ae0006290e0006295000062980000629ac000629dc00062a0c0006
2a3400062a5c00062a8400062ae600062b0e00062b6c00062bb000062bf4
00062c2400062c5a00062c8000062ca800062cce00062cf600062d1c0006
2d4400062d6c00062d9600062dbc00062de200062e0800062e3a00062e62
00062ee800062f1200062f7c00062fac00062fdc00063002000630280006
3080000630b0000630ec000631160006314600063176000631aa000631de
0006320e0006324e00063288000632d0000632f60006331c000633420006
33680006338e000633ce0006340e0006344a0006347a000634aa000634da
0006350a000635420006357a000635ba000635fa000636340006366e0006
36aa000636e8000637320006377c000637c2000638080006384a0006388c
000638bc000638ec00063920000639540006398e000639c800063a140006
3a6000063ab800063b1000063b6800063bc600063bf600063c2600063c5c
00063c9200063cc800063d0400063d3800063d6c00063dc000063e140006
3e6800063ebc00063f1000063f6400063fbc000640140006404200064070
000640a2000640d40006411a0006416000064192000641c4000642160006
426e000642b2000642f60006433a0006437e000643d20006442600064456
00064486000644bc000644f20006453000064576000645ca000646140006
4666000646b80006471800064778000647a8000647da000648140006484e
000648a0000648f40006493e00064986000649c800064a3200064a800006
4acc00064afe00064b3000064b6400064b9800064bce00064c0400064c42
00064c7800064caa00064ce600064d3c00064d9200064df000064e4e0006
4ea400064efa00064f2e00064f5e00064fa200064fd8000650080006504c
0006508a000650c2000650fa000651300006516c0006519c000651d80006
52180006525e000652a8000652f40006534000065396000653ec0006543a
00065488000654d60006552600065582000655de000656360006568e0006
56e20006573600065778000657ba000658020006584a00065892000658e0
0006592400065968000659ce00065a3400065a9a00065b0000065b660006
5bcc00065c3600065ca000065ce800065d3000065d7800065dc000065e0c
00065e5800065eac00065ef800065f3c00065f8a00065ff20006605a0006
60ca0006613a000661a20006620a0006624a00066288000662d2000662fc
000663420006637a000663c8000663f80006642800066464000664980006
64be0006651200066550000665a40006668a000667b2000667f40006681a
00066870000668a0000668e20006692a00066978000669c200066a120006
6a3800066b2000066c0400066d5600066d8400066db200066e4600066ecc
00066efa00066f8400066fb400066fe40006703200067080000671640006
724000067384000673b4000673e40006747a000675020006753200067562
00067592000676220006765200067682000676d40006771c000677720006
7808000678a0000679140006796600067990000679e600067a1a00067a64
00067a9c00067aec00067b2a00067b7600067b9c00067c1800067c6a0006
7d7c00067f860006813a000682bc0006842e000686d0000689a000068b60
00068ca600068f000006904200069258000692aa000692fa000693500006
93a60006940800069490000696de0006987000069a7c00069b9800069d4c
00069ece00069f8e0006a0700006a0d80006a13a0006a1b00006a2180006
a2c40006a3340006a3c40006a4d80006a59c0006a5e80006a67e0006a72a
0006a7ce0006a8780006a8c20006a9040006a97a0006a9e20006aa720006
ab200006ab8a0006abee0006ac540006ad0e0006ada40006ae020006ae2c
0006ae560006ae660006ae760006af380006b03c0006b2460006b39c0006
b3ac0006b45c0006b5400006b5a00006b5b00006b60c0006b66a0006b78a
0006b8780006b8880006b8980006b8a80006b8b80006b99e0006ba9e0006
bc760006be320006bf380006bfb20006c02c0006c0de0006c0ee0006c1fc
0006c20c0006c21c0006c2de0006c4120006c4fe0006c50e0006c51e0006
c52e0006c6940006c8000006c92c0006c93c0006c94c0006c95c0006c96c
0006ca4e0006ca5e0006cbc00006ccca0006cdc80006cf000006cfd20006
d0500006d0ce0006d1ee0006d26a0006d2b60006d3420006d4560006d4aa
0006d5ec0006d6ac0006d7780006d86e0006d9780006da2a0006db900006
dbf60006dcba0006debc0006e04a0006e1c80006e2f80006e5aa0006e6ec
0006e81a0006e9920006eb0a0006ec8a0006ee180006efca0006f0380006
f19c0006f2d40006f3d80006f50e0006f6400006f7100006f7e00006f93c
0006fa160006fab60006fbba0006fce40006fde20006ff62000700cc0007
020a00070382000704ce000705b000070618000706ba0007075a00070858
000709c000070afa00070c8e00070dd800070ebc00070f1a000710200007
10b6000711780007121e0007125e0007140a000714dc000715a2000716ca
0007186a00071976000719ce00071b6600071bf400071c0600071c360007
1c6600071c9e00071cd600071d0c00071d4800071d7e00071dba00071f28
00071f720007200c000720a40007211e000721a200072208000722b40007
230000072420000724d6000725ac000725e4000726220007269600072790
000728ae000729b0000729f200072a3400072aa200072ab200072ac20007
2ad200072ae200072af200072b0200072b1200072b2200072b3200072b42
00072b5200072b5200072cd600072ce600072da600072e6c00072fa20007
31980007339a00073596000737cc000739cc00073a3800073b4a00073cdc
00073e3400073ee600073f2a00073fc8000740f800074148000741de0007
431a0007432a000744e00007461400074664000746ba0007477c000747c0
0007480200074888000748e6000749d800074a6600074a9c00074b160007
4b8e00074bde00074cea00074de000074e8a00074eb400074ede00074f08
00074f3200074f7200074fb200074fea000750220007506c000750b60007
50f60007513600075180000751ca0007520a0007524a000752a4000752fe
0007533800075372000753b6000753fa0007543e00075482000754d60007
552a00075576000755c2000756000007564400075694000756e40007573e
0007579c000757c6000757f00007588a0007592400075968000759ac0007
5ac200075ad200075b1a00075b6200075bb400075c0600075c7000075cc4
00075d1000075d6e00075df800075e5c00075ea000075eea00075f520007
5f9c00075fdc00076024000760600007609c000760d80007611200076154
00076196000761d60007621600076260000762aa00076300000763580007
63a6000763f40007643600076484000764c6000765100007655200076596
000765f20007664e0007669a000766e6000767300007677a000767b80007
67f600076874000768f20007692c0007696600076a0000076a9a00076b6e
00076c4200076c9e00076cfa00076d6e00076de200076f4000076f500007
703a0007704a00077080000770b6000770f00007712a00077166000771a2
000771e80007722e000773940007754a0007769600077854000779ca0007
7b7200077ca200077da800077fc60007810a000782a000078428000784a6
000785ea000787f2000788860007891a00078a6e00078b9800078d120007
8e5200078fbe000790ac000792760007940a0007948c000795be000796a8
00079810000798f200079aa800079b9a00079cfc00079e3800079f2c0007
a0f00007a2780007a41c0007a5800007a71c0007a8da0007aa600007aafc
0007ac700007ad620007ae4a0007afca0007b11c0007b23c0007b3d40007
b5aa0007b7380007b7e20007b8980007ba4a0007baee0007bb7c0007bbc8
0007bc140007bc8c0007bd6a0007bde40007be860007beda0007c03e0007
c16a0007c27c0007c37e0007c4460007c5ba0007c6fa0007c9200007c9ca
0007caf40007cbf80007cd980007ce840007cf7e0007d07c0007d1620007
d27c0007d4360007d5e40007d7520007d7ca0007d83e0007d95c0007d9e0
0007dae20007dc6e0007dde60007df1c0007e0260007e19c0007e3440007
e5360007e7240007e8ea0007e95e0007ea0e0007eac40007eb740007ec32
0007ed2c0007ee300007ef2a0007f0360007f0be0007f14c0007f1d40007
f2680007f3440007f43a0007f51e0007f6140007f6a80007f7640007f7f8
0007f8b60007f9a60007faae0007fbac0007fcc00007fde20007fef60008
00360008017000080292000803a6000804ea0008063e0008085200080a04
00080ab800080bd400080caa00080dc800080ea60008103a000810f40008
1190000812820008136a00081456000814d4000815ce0008170c00081838
0008186c000818b0000818c00008196000081a0200081af800081be40008
1cbe00081d9600081ef400082054000820f200082188000821c600082206
0008224400082284000822de0008233600082390000823f4000824800008
267c000826cc000827f80008287e000828fe000829d800082aac00082bb0
00082d9c00082eb400082f2400082fb40008307600083148000831b40008
323200083386000833cc00083412000834f60008353200083590000835ce
000836000008364400083686000836b600083790000838580008393c0008
39b800083a0600083a9000083b6600083bde00083c9800083d4a00083d94
00083e6800083f1a00083f7200083f8200083f9200083fa200083fb20008
40e4000840f6000841d80008427e0008438800084494000844d80008451c
0008455000084584000845d40008462400084676000846c80008471a0008
4770000847c8000848ac000100000d5900f2003c009d000700020010002f
0056000004ac0bbe0005000200>
<0000003a02be0000000300000000006a00000000000300000001000a006a
0000000300000002000e00740000000300000003005e0082000000030000
0004000a006a0000000300000005001800b00000000300000006000e00e0
0000000300000007006200ee00000003000000080030000e000000030000
0009008a0150000000030000000d02aa01da000100000000000000350484
0001000000000001000504b90001000000000002000704be000100000000
0003002f04c50001000000000004000504b90001000000000005000c04dc
0001000000000006000704f40001000000000007003104fb000100000000
00080018048b00010000000000090045052c000100000000000d01550571
0003000104030002000c06c60003000104050002001006d2000300010406
0002000c06e20003000104070002001006ee0003000104080002001006fe
0003000104090000006a00000003000104090001000a006a000300010409
0002000e00740003000104090003005e00820003000104090004000a006a
0003000104090005001800b00003000104090006000e00e0000300010409
0007006200ee00030001040900080030000e0003000104090009008a0150
000300010409000d02aa01da00030001040a0002000c06c600030001040b
00020010070e00030001040c0002000c06c600030001040e0002000c071e
0003000104100002000e072a000300010413000200120738000300010414
0002000c06c600030001041500020010074a0003000104160002000c06c6
0003000104190002000e075a00030001041b00020010076800030001041d
0002000c06c600030001041f0002000c06c60003000104240002000e0778
00030001042a0002000e078600030001042d0002000e079400030001080a
0002000c06c60003000108160002000c06c6000300010c0a0002000c06c6
000300010c0c0002000c06c600a900200032003000310031002000540068
00650020004d006f006e006f007400790070006500200043006f00720070
006f0072006100740069006f006e002e00200041006c006c002000520069
0067006800740073002000520065007300650072007600650064002e0041
007200690061006c0052006500670075006c00610072004d006f006e006f
0074007900700065003a0041007200690061006c00200052006500670075
006c00610072003a00560065007200730069006f006e00200035002e0031
003000200028004d006900630072006f0073006f00660074002900410072
00690061006c004d00540041007200690061006c00200069007300200061
002000740072006100640065006d00610072006b0020006f006600200054
006800650020004d006f006e006f007400790070006500200043006f0072
0070006f0072006100740069006f006e002e004d006f006e006f00740079
0070006500200054007900700065002000440072006100770069006e0067
0020004f006600660069006300650020002d00200052006f00620069006e
0020004e006900630068006f006c00610073002c00200050006100740072
00690063006900610020005300610075006e006400650072007300200031
0039003800320059006f00750020006d0061007900200075007300650020
007400680069007300200066006f006e007400200074006f002000640069
00730070006c0061007900200061006e00640020007000720069006e0074
00200063006f006e00740065006e00740020006100730020007000650072
006d0069007400740065006400200062007900200074006800650020006c
006900630065006e007300650020007400650072006d007300200066006f
00720020007400680065002000700072006f006400750063007400200069
006e0020007700680069006300680020007400680069007300200066006f
006e007400200069007300200069006e0063006c0075006400650064002e
00200059006f00750020006d006100790020006f006e006c007900200028
0069002900200065006d0062006500640020007400680069007300200066
006f006e007400200069006e00200063006f006e00740065006e00740020
006100730020007000650072006d00690074007400650064002000620079
002000740068006500200065006d00620065006400640069006e00670020
007200650073007400720069006300740069006f006e007300200069006e
0063006c007500640065006400200069006e002000740068006900730020
0066006f006e0074003b00200061006e0064002000280069006900290020
00740065006d0070006f0072006100720069006c007900200064006f0077
006e006c006f006100640020007400680069007300200066006f006e0074
00200074006f002000610020007000720069006e0074006500720020006f
00720020006f00740068006500720020006f007500740070007500740020
00640065007600690063006500200074006f002000680065006c00700020
007000720069006e007400200063006f006e00740065006e0074002ea920
3230313120546865204d6f6e6f7479706520436f72706f726174696f6e2e
20416c6c205269676874732052657365727665642e417269616c52656775
6c61724d6f6e6f747970653a417269616c20526567756c61723a56657273
696f6e20352e313020284d6963726f736f667429417269616c4d54417269
616c20697320612074726164656d61726b206f6620546865204d6f6e6f74
79706520436f72706f726174696f6e2e4d6f6e6f74797065205479706520
44726177696e67204f6666696365202d20526f62696e204e6963686f6c61
732c205061747269636961205361756e646572732031393832596f75206d
617920757365207468697320666f6e7420746f20646973706c617920616e
64207072696e7420636f6e74656e74206173207065726d69747465642062
7920746865206c6963656e7365207465726d7320666f7220746865207072
6f6475637420696e207768696368207468697320666f6e7420697320696e
636c756465642e20596f75206d6179206f6e6c792028692920656d626564
207468697320666f6e7420696e20636f6e74656e74206173207065726d69
747465642062792074686520656d62656464696e67207265737472696374
696f6e7320696e636c7564656420696e207468697320666f6e743b20616e
6420286969292074656d706f726172696c7920646f776e6c6f6164207468
697320666f6e7420746f2061207072696e746572206f72206f7468657220
6f75747075742064657669636520746f2068656c70207072696e7420636f
6e74656e742e004e006f0072006d0061006c006f00620079010d0065006a
006e00e9006e006f0072006d0061006c005300740061006e006400610072
0064039a03b103bd03bf03bd03b903ba03ac004e006f0072006d00610061
006c0069004e006f0072006d00e1006c004e006f0072006d0061006c0065
005300740061006e00640061006100720064004e006f0072006d0061006c
006e0079041e0431044b0447043d044b0439004e006f0072006d00e1006c
006e0065004e0061007600610064006e006f0074006801b001a10300006e
00670041007200720075006e00740061b900540328b326181fd0bc032900
e0032900020329b22b1d1fb90327031db23b1f40b80323b31215320f412d
03200001002f0320000100200320006f032000af032000bf03200004005f
031e00010010031e007f031e0080031e00af031e00bf031e00d0031e0006
0000031e0010031e0020031e006f031e009f031e00e0031e0006031d031c
b2201f1041270319007f03190002000f031700ef031700ff03170003001f
0317002f0317004f0317005f0317008f0317009f03170006000f0317005f
0317006f0317007f031700bf031700f00317000600400317b2923340b803
17b28b3340b80317b36a6c3240b80317b2613340b80317b35c5d3240b803
17b357593240b80317b34d513240b80317b344493240b80317b23a3340b8
0317b331343240b80317b32e423240b80317b3272c3240b80317b3122532
80b80317b30a0d32c04116031600d00316000200700316000102c4000f01
01001f00a0031500b0031500020306000f0101001f00400312b32426329f
bf03040001030203010064001fffc00301b20d1132410a02ff02ef001200
1f02ee02ed0064001fffc002edb30e11329f414a02e200af02e200bf02e2
000302e202e202e102e1007f02e00001001002e0003f02e0009f02e000bf
02e000cf02e000ef02e0000602e002e002df02df02de02de000f02dd002f
02dd003f02dd005f02dd009f02dd00bf02dd00ef02dd000702dd02dd0010
02dc0001000002dc0001001002dc003f02dc000202dc02dc001002db0001
02db02db000f02da000102da02daffc002d3b2373932b9ffc002d3b22b2f
32b9ffc002d3b21f2532b9ffc002d3b2171b32b9ffc002d3b2121632b802
d2b2f9291fb90326031cb23b1f40bb0322003e00330322b225311fb80318
b23c691fb802e3b3202b1fa0413002d400b002d40002000002d4001002d4
002002d4005002d4006002d4007002d40006006002d6007002d6008002d6
009002d600a002d600b002d60006000002d6001002d6002002ca002002cc
002002d6003002d6004002d6005002d6000802d0b2202b1fb802cfb22642
1f411602ce02c70017001f02cd02c80017001f02cc02c60017001f02cb02
c50017001f02c902c5001e001f02ca02c6b21e1f00410b02c6000002c700
1002c6001002c7002f02c5000502c1b324121fff411102bf0001001f02bf
002f02bf003f02bf004f02bf005f02bf008f02bf000602bf0222b2641f12
410b02bb00ca0800001f02b200e90800001f02a600a20800406a1f402643
4932402043493240263a3d3240203a3d329f209f26024026969932402096
993240268e923240208e92324026848c324020848c3240267a813240207a
813240266c763240206c76324026646a324020646a3240265a5f3240205a
5f3240264f543240204f5432b8029eb724271f374f6b0120410f02770030
02770040027700500277000402770277027700f90400001f029bb22a2a1f
b8029a402b292a1f80ba0180bc0180520180a201806501807e0180810180
3c01805e01802b01801c01801e0180400180bb0138000100800140b40180
400180bb013800010080013940180180ca0180ad01807301802601802501
8024018020013740b80221b2493340b80221b2453340b80221b341423240
b80221b33d3e320f410f0221003f0221007f0221000300bf022100cf0221
00ff0221000300400221b320223240b80221b3191e3240b80222b32a3f32
40b80221b32e3a326f414802c3007f02c3008f02c300df02c30004002f02
c3006002c300cf02c30003000f02c3003f02c3005f02c300c002c300ef02
c300ff02c3000600df02220001008f02220001000f0222002f0222003f02
22005f0222007f022200ef0222000600bf022100ef02210002006f022100
7f022100af02210003002f0221003f0221004f0221000302c302c3022202
2202210221401d101c102b1048038f1c010f1e014f1eff1e023700161600
000012110811b8010db6f70df8f70d00094109028e028f001d001f029002
8f001d001f028fb2f91d1fb80198b226bb1f41150197001e0401001f0139
00260125001f013800730401001f0135001c0801001f0134001c02ab001f
0132b21c561fb8010fb2262c1fba010e001e0401b61ff91ce41fe91cb802
01b61fe81cbb1fd720b80401b21fd51cb802abb61fd41c891fc92fb80801
b21fbc26b80101b21fba20b80201b61fb91c381fadcab80401b21f8126b8
019ab21f7e26b8019ab61f7d1c471f6b1cb80401b21f6526b8019ab21f5e
73b80401400f1f52265a1f481c891f441c621f4073b80801b61f3f1c5e1f
3c26b8019ab21f351cb80401b61f301cbb1f2b1cb80401b61f2a1c561f29
1cb80101b21f231eb80401b21f5537b80168402c07960758074f07360732
072c0721071f071d071b071408120810080e080c080a0808080608040802
08000814b8ffe0402b000001001406100000010006040000010004100000
01001002000001000200000001000002010802004a00b013034b024b5342
014bb0c063004b6220b0f65323b8010a515ab005234201b0124b004b5442
b0382b4bb807ff52b0372b4bb007505b58b101018e59b0382bb00288b801
005458b801ffb101018e851bb0124358b900010111858d1bb90001012885
8d5959001816763f183f123e113946443e113946443e113946443e113946
443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b
2b2b2b2b2b2b182b1db0964b5358b0aa1d59b0324b5358b0ff1d594bb093
53205c58b901f201f04544b901f101f045445958b9033e01f2455258b901
f2033e4459594bb8015653205c58b9002001f14544b9002601f145445958
b9081e0020455258b90020081e4459594bb8019a53205c58b9002501f245
44b9002401f245445958b909090025455258b9002509094459594bb80401
53205c58b173244544b1242445445958b917200073455258b90073172044
59594bb8040153205c58b1ca254544b1252545445958b9168000ca455258
b900ca16804459594bb03e53205c58b11c1c4544b11e1c45445958b9011a
001c455258b9001c011a4459594bb05653205c58b11c1c4544b12f1c4544
5958b90189001c455258b9001c01894459594bb8030153205c58b11c1c45
44b11c1c45445958b90de0001c455258b9001c0de04459592b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b65422b2b01b33b59635c456523456023456560234560b08b76
6818b080622020b163594565234520b003266062636820b003266165b059
236544b063234420b13b5c4565234520b003266062636820b003266165b0
5c236544b03b2344b1005c455458b15c406544b23b403b4523614459b347
503437456523456023456560234560b089766818b080622020b134504565
234520b003266062636820b003266165b050236544b034234420b1473745
65234520b003266062636820b003266165b037236544b0472344b1003745
5458b137406544b24740474523614459004b5342014b5058b10800425943
5c58b108004259b3020b0a124358601b2159421610703eb0124358b93b21
187e1bba040001a8000b2b59b00c2342b00d2342b0124358b92d412d411b
ba04000400000b2b59b00e2342b00f2342b0124358b9187e3b211bba01a8
0400000b2b59b0102342b0112342002b7475737500184569444569444569
447373737374757374752b2b2b2b74752b2b2b2b2b737373737373737373
737373737373737373737373737373732b2b2b45b0406144737400004bb0
2a534bb03f515a58b1070745b040604459004bb03a534bb03f515a58b10b
0b45b8ffc0604459004bb02e534bb03a515a58b1030345b040604459004b
b02e534bb03c515a58b1090945b8ffc06044592b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b752b2b2b2b2b2b2b435c58b9008002bbb301401e017400
735903b01e4b5402b0124b545ab012435c5a58ba009f0222000100735900
2b7473012b01732b2b2b2b2b2b2b2b737373732b2b2b2b2b002b2b2b2b2b
2b0045694473456944734569447374754569447345694445694445694473
74456944456944732b2b2b2b2b732b002b732b74752b2b2b2b2b2b2b2b2b
2b2b2b2b2b737475732b7374757374752b2b2b742b2b000000>
[15913 15929 15561 16181 15713 15605 16053 16253 16293 16337 16177 16345 16353
16345 15929 16353 15393 15313 16165 16133 16373 16041 14113 16309 16341 16113
15641 15297 16337 16105 15505 16221 16325 15861 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

2 0 3 <> ArialMT AddT42Char 
2 9228 29 <000200b9000001860426000300070038402004050006070902063c04033c
0106040a023c2f003f000220000100a108a198182b10f45d71ed003f3fed
10ed011112393912393931301335331503353315b9cdcdcd0359cdcdfca7
cdcd>ArialMT AddT42Char 
2 15050 48 <000100980000060f05ba00100317400c082a0b0d4255022a0b0d4255b102
02435458b90008fff6400b0c0c0255080e0d11025502b8ffeeb40d110255
05b8ffee40280d1102550c120c0c0255050f0c030900010208090b0e0008
09020a0b06101002550b100d0d02550bb8fffab60c0c02550b1000b8ffe6
b41010025500b8fff8b40f0f025500b8fffcb40d0d0255002f2b2b2bcd2f
2b2b2bcd003f3fc0c010d0d0c0111217392b2b3130012b2b2b001bb10602
435458401f07200b0b065506200b0b065503200b0b065504200b0b065505
200b0b065508b8fff240230b0b0655020c0b0b065503060c0c0655020e0c
0c0655090c0c0c06550a0c0c0c065507b8fff8b40d0d065508b8fff8401f
0d0d06552605010c200a12340f200a12340f050c0300010e0b0008080102
0ab8ffeeb40b0b06550ab8ffeeb40c0c06550abb0256001200100256400d
000c0b0b065500060c0c065500b8fff8b40d0d065500012f2b2b2bf42ff4
2b2b003f3c3f3c3c111217392b2b5d3130012b2b2b2b2b2b2b2b002b2b2b
2b2b1b407f00020f0814021b0804760c860cc80c03090c490c490f032904
250d2c0e58035b04760d780e870d080b020508390d360e4f024b03440740
084d0d420e0a9802990396079608a803a7070612020f0e0e300502140505
02080c0d0d300508140505080c520f5201400102020808090a0b0b0d0d0e
0e1000080902601280120212ba02a8000d0131b2052008b8013140160c09
0a0a0b0b42550a0a0c0c42550a20400c7f0b010bba0256000e010bb20520
02b8010bb20f0100b8fff6b40b0b425500b8fff6400b0c0c425500200f70
100110b80256b72005600580050305b802a8b3113b59182b1910f45df45d
3c18fd2b2b3c10ed1a1910edf45d3c1a18fd2b2b3c10ed1a1910ede45d00
183f3f3c3c103c103c103c103c103c103c1a10eded87052e2b877dc4872e
182b877dc43130004bb00b534bb01e515a58bd000cfffb0008ffd60002ff
d638383859014bb00c534bb028515a58b9000dfff8b10e0a38385901435c
58b9000dffd4b621390e2c21390db8ffd4b637390e3237390db8ffd4b52d
390e2c2d392b2b2b2b2b2b5972715d00715d015d5959002b2b3311210116
173637012111231101230111980124015b30161935015f0105bbfe56affe
5805bafbf29148509b03fcfa4604cbfb3504e0fb2000>ArialMT AddT42Char 
3 7608 68 <0002004affe8041c043e0028003702a8402c090d092a190d1a2a290d2a2a
390d3615371b3a2a492a5d0d5d2a6a0d692a60308a0d86299a169b1aa90d
1528b8ffe8b40b0b065527b8ffe840190b0b0655a619aa28b619bb28c419
cf28d215dd28084416011eb8fff440110c0c065512120c0c0655050c0c0c
065535b8ffe0404f0c0c06551f171f182b2c2a343904392c4904482c5608
592b6608692b760c870cc90cf90df92b1137340e0104102f243417322114
185f296f2902291c2f0e3f0e8f0e9f0eff0e059f0eaf0eef0e030eb8fffa
400b0b0b42550e0c0f0f02550eb8ffeab4101002550eb8fff44021101006
550e0c0d0d06550e060f0f06550e260d0d42550e180c0c42550e0e1c0317
b802aa400d182c0b0b42551895141c1c0700b8fff440110c0c0655004527
0a321c030b2961106100b8fff6b40b0b425500b8fff8b40c0c425500b8ff
fc400e0d0d425500060d0d025500252124b8ffecb41010025524b8ffec40
0b0d0d025524040c0c025524b8ffe4b40b0b025524b8fff4b40b0b065524
b8ffdc400b1010065524060f0f065524b8fffcb40c0c065524b8025b400e
27400026102620263026af260539b8ffc0b40e0e025526b8ffd6b40e0e02
5526b8fff4b60d0d4255263139b8ffc0400d1e23343039c03902a0390139
17b8fff4406b1010065517080c0c4255172518222f080d0d42552f0c0c0c
42552f0e0b0b42552f24bf06cf06021f063f060206140b0b425506140d0d
425506080c0c4255060e0f0f0255060c0d0d025506180c0c0255060c0b0b
0255060c0b0b0655060e0d0d065506100c0c065506313810f62b2b2b2b2b
2b2b2b2b2b5d71ed2b2b2bf4ed2b2b105d712bf62b2b2b5dedf42b2b2b2b
2b2b2b2b3cfd2b2b2b2be5e5003fed3fe42b3fedfd2be41112392f2b2b2b
2b2b2b2b2b5d71ed711112391112393901111217393130005d2b2b2b2b01
715d2b2b0071250606232226353436363736373637363534272623220607
273e02333216161716151514161723260306070e02151416333236373635
033c64b96aafbc477348356bda67013345887f791db0186ed08988aa5010
091722bc1c1762c46f5c326d6968a2261d835546ab854e814e140e0d1a24
250a6e2d3d597118718b4b40614a2e78f0fb853d3801dd281c10284d2f48
605b4f3d7700>ArialMT AddT42Char 
3 8454 69 <00020086ffe8041f05ba0010001d01c9407b01050c0f240535054505053f
1fb01f021f1f221c331c421c701f901f063a133c163c1a4c164c1a5d085d
0d580f5d165e1a6a086c0d680f6e166e1ac01fd90cda17da19e213ec17ec
19e31de01fff1f1920052f0f2f1430053f0f40054c0f50056605da1df504
fa100c10150e040602001b1c0607010a151c0e0b18b8fff8b40d0d425518
b8fff4b40c0c425518b8fff240250b0b42551824d00b01100b400b600b80
0b041f400d0d02550b0c0f0f02550b180d0d02550bb8fff6b40c0c02550b
b8fff0b40b0b06550bb8fff4b40f0f06550bb8ffe0b40c0c06550bb8fff4
40530d0d06550b740111020d0d425511080c0c4255113300120b0b425500
040d0d425500040c0c025500040d0d06550033030c0c0c425503080d0d42
5503250202c001019001a001b001f001041f013f014f010301b8fffeb410
10025501b8fffc401d0e0e0255010c0d0d025501100c0c025501120b0b02
55010c0b0b065501b8fff8b41010065501b8fffc40160f0f065501180c0c
065501140d0d065501191e4737182b4e10f42b2b2b2b2b2b2b2b2b2b5d71
723c4d10fd2b2bf42b2b2b2be42b2b10fd2b2b2b2b2b2b2b2b5d71ed2b2b
2b003fed3f3fed3f11391112393130005d015d7172007121231133113633
321e0215100023222703141716333236353426232206012da7b472b162af
7140fef2bdbc6b0234559176aca57576ac05bafdf58f4f8fca73feeffed6
9d0196bf558bcdcbd0c6cd00>ArialMT AddT42Char 
3 9006 70 <00010050ffe803ed043e001a01f3b90017fff040220c0c42550a080c0c42
5509080c0c42550f080c0c425510080c0c425511080c0c4255b102024354
5840340e7f0f010f0b01400050007000030004121c0b07181c040b010e15
07080e0e0255070c0d0d0255070c0c0c025507100b0b0255072f2b2b2b2b
cdd4c6003fed3fed10c45d3210c45d3231301b4047090c011f1c43134317
53135317601360179b029b039a0da410a41a0c080d190a6a0269036a0575
0c700d800da60cb509b60ab50c0c160c860ce302030e225f0f6f0f7f0f03
0f01b802aa4026300040005000600070009000a000e000f00009000f0f0b
000004121c0b07181c040b1c0f010fb8fff4b40c0c42550fb8fff240120b
0b42550f240e080d0d06550e221b000100b8fff4b40c0c425500b8ffee40
810b0b425500240b2b1f010100010101400e2b425501400d0d425501400c
0c425501360b0b425501400b0b065501401010065501480c0c0655011a0d
0d065501491c15080d0d4255150c0c0c4255150e0b0b42551524cf07011f
073f0702070e0b0b0655070a1010065507120c0c0655070c0d0d4255070c
0c0c425507311b34c4182b10f62b2b2b2b2b5d71ed2b2b2b10f62b2b2b2b
2b2b2b2b5d724b53234b515a58b90001ffc03859ed2b2b72f42bed2b2b72
003fed3fed12392f11392f105de4105de43130005d71015d7159012b2b2b
2b2b2b011706062322001134123633321617072626232206151416333236
033cb11defaedafef772e989addc1faf197f5a88aaa4846a8e018517b7cf
011d010aac010281afa11b6b6cc3d3d6c282>ArialMT AddT42Char 
3 10658 73 <000100130000028005d300170129401e1409010f192f193019401970199b
0c9c0da90d081a0d280db019c0190419b8ffc040401a1f341d080d030c0f
1c0a0115022b1413040306000a9f140114ff130e0b0b4255134004170e0b
0b425517080d0d4255170c0c0c425517250400030292010100b8ffc0b331
383400b8ffc0402b1c1f3490000119400f0f025519400d0e025500141010
025500280f0f025500220e0e0255002c0d0d025500b8fff2400b0c0c0255
00140b0b065500b8ffeab41010065500b8ffe6b40f0f065500b8fffab70c
0c065500a31819bc01ba002100f6010a00182b2bf62b2b2b2b2b2b2b2b2b
2b2b5d2b2b3c10f43c103ced2b2b2b10ed2bed5d003f3f3c3c3cfd3c3fed
391139313043794014101106090706080602061009121b0011060f1b012b
012b2a8181012b715d007233112335333534373636333217072623220615
1533152311b29f9f131a83764c5c1b38325244cfcf039a8c716b34465712
9d0a4660628cfc66>ArialMT AddT42Char 
3 12080 76 <000200880000013c05ba0003000701a74019020a0b0b4255030a0b0b4255
060a0b0b4255070a0b0b425501b8fffcb40b0b425500b8fffcb40b0b4255
05b8fffcb40b0b425504b8fffc401d0b0b4255020b0c0c4255030b0c0c42
55060b0c0c4255070b0c0c425501b8fffdb40c0c425500b8fffdb40c0c42
5505b8fffdb40c0c425504b8fffd401d0c0c425502040d0d425503040d0d
425506040d0d425507040d0d425501b8fffcb40d0d425500b8fffcb40d0d
425505b8fffcb40d0d425504b8fffc403a0d0d425509360b0b02554f0990
09a009b009c009df09f0090700091f09700980099f09b009c009df09e009
ff090a1f0901000107040203090603b8ffc0402d0d0d4255037e01000605
06040a0607250500049f04a004b004c004e00406c004f0040200042004d0
04e0040404b8fff8b41010025504b8fffa40170e0e025504040c0c025504
0a0b0b025504140b0b065504b8ffeab41010065504b8fffeb40d0d065504
b8fffc400a0c0c0655044e084750182b10f62b2b2b2b2b2b2b2b5d71723c
fd3c003f3f3c3fed2b0111123939111239393130015d72712b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b133533150311331188b4b4
b404ebcfcffb150426fbda00>ArialMT AddT42Char 
3 13688 79 <000100830000013705ba0003014d400d020a0b0b4255030a0b0b425501b8
fffcb40b0b425500b8fffc40110b0b4255020b0c0c4255030b0c0c425501
b8fffdb40c0c425500b8fffd40110c0c425502040d0d425503040d0d4255
01b8fffcb40d0d425500b8fffc400b0d0d425505360b0b025505b8ffc0b3
37383405b8ffc0b334353405b8ffc0b330313405b8ffc0b322253405b8ff
c040251517340f051f059f05df05044f05df05f005031f0570058005ff05
040100000a0203250100b8ffc0b337383400b8ffc040153335349f0001c0
00f0000200002000d000e0000400b8fff8b41010025500b8fffa401d0e0e
025500040c0c0255000a0b0b025500140b0b065500081010065500b8fffe
b40d0d065500b8ffffb40c0c065500b8fffc400a0c0c0655004e04475018
2b10f62b2b2b2b2b2b2b2b2b5d71722b2b3cfd3c003f3f3130015d71722b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b3311331183b405bafa4600>ArialMT AddT42Char 
3 14888 81 <00010087000003e6043e001601b140130503061302a810b810e303e713f0
03f6130604b8fff040220b0d347910019810d018e018ff18042008140e14
16121c05070106160d0a0d0e0c0eb8fff8b40d0d42550eb8fff2b40b0b42
550eb8fff4401f0c0c42550e2418401010025518400b0b02550b28101002
550b140e0e02550bb8ffec40110d0d02550b040c0c02550b220b0b02550b
b8fff4400b0b0b06550b14101006550bb8fff9400b0d0d06550b0a0f0f06
550bb8fff640120c0c06550b40333634ff0b01ff0b010b4e18b8ffc0402c
343634b018f018027018a018b018c01804180302331516080d0d4255160e
0b0b4255160c0c0c425516250100b8fff6b41111025500b8fffab4101002
5500b8fffa40170e0e025500040c0c0255000a0b0b025500040b0b065500
b8fffa40110f0f065500020c0c065500040d0d065500b8ffc04012333634
f0000100002000d000e00004004e1710f65d712b2b2b2b2b2b2b2b2b2b3c
fd2b2b2b3cf43c105d712bf65d712b2b2b2b2b2b2b2b2b2b2b2b2bed2b2b
2b3c103c003f3c3f3fed11390112393130437940160611090a080a070a03
06102611060e1b010f0a121b01002b012b2b2a81015d71002b5d71331133
153633321616171615112311342626232206151187a275dd60a150100ab4
2a6b4873a7042697af45704d327dfd7302866e6d4192ccfdbc00>ArialMT AddT42Char 
3 15394 82 <00020044ffe80427043e000d001901bfb615180d0d065513b8ffe8b40d0d
06550fb8ffe840650d0d065519180d0d065512070a190c47064808560659
08670669080834103a123a16351845104b124b1645185c055c0952105d12
5d1652186d056d0964106d126d1664187701150906050d5b035405540a5b
0c6c036505650a6c0c0a171c0407111c0b0b14b8fff2b40b0b425514b8ff
f4b40c0c425514b8fff840130d0d425514241b400d0d02551b400b0b0255
07b8ffea40110f0f025507180d0d025507100b0b025507b8fff0b40b0b06
5507b8fff0b40d0d065507b8fff0b40f0f065507b8fff0b40c0c065507b8
ffc0400e2425343007010007100720070307b8fff4400a0d0d42550731df
1b011bb8ffc0406d1e2334301b011b0e080d0d42550e0c0c0c42550e0e0b
0b42550e24000c0e0f025500120d0d0255000c0c0c0255001c0b0b025500
0e0b0b0655000e0d0d0655000c1010065500160c0c065500402425341f00
3f0002000c0d0d4255000c0c0c4255000c0b0b425500311a3437182b10f6
2b2b2b5d2b2b2b2b2b2b2b2b2bed2b2b2b10712b5df62b5d5d2b2b2b2b2b
2b2b2b2b2bed2b2b2b003fed3fed313001715d0071435c58400953055309
6205620904015d59002b2b2b2b1310373633320015140606232200131416
33323635342623220644a489c5db01167beb8bdffeedb9b28786b2b38587
b2021301278e76fee1fdcdeb82011e010dcccbccd1c5cbca>ArialMT AddT42Char 
4 2348 87 <00010024fff2022a05990017011fb9000cfffeb40c0c42550bb8fffeb40c
0c425508b8fffeb40c0c425507b8fffeb40c0c425506b8fffeb40c0c4255
0ab8ffc0b323263409b8ffc0405323263480190100010c0d0a0103001610
092b0f0a06161c030b0f10220022010d12080d0d4255120e0b0b4255120a
0c0c425512250c01ff070845094560077007800790070400072007a007b0
07c007d0070607b8ffeeb41010025507b8fff4b40f0f025507b8fff2b40e
0e025507b8fff8b40d0d025507b8fff8b40c0c025507b8fffab410100655
07b8fff0400b0f0f065507060c0c065507b8ffe8b40d0d065507ba026a00
180136b166182b10f62b2b2b2b2b2b2b2b2b5d71f4e410ed3cfd2b2b2b3c
10e4f43c003fed3f3cfd3c1139123911333310c93130015d2b2b2b2b2b2b
2b25170623222626351123353311371133152311141616333202101a4c3c
626c2c8484b3b5b5132b281ea19f103e65a202638c01076cfe8d8cfd934d
2c1a>ArialMT AddT42Char 
4 2710 88 <00010083ffe803e0042600180183b9001affc0400915173402201316340f
b8fff040191214342b1301240813160c0113160b06000a111c030b003316
b8fff8b40d0d425516b8fff2b40b0b425516b8fff4401f0c0c4255162518
17403336341a401010025517281010025517120e0e025517b8ffec400b0d
0d025517040c0c025517b8fff4400b0b0b065517141010065517b8fff840
0b0d0d0655170c0f0f065517b8fff6400d0c0c0655ff1701c01701174e1a
b8ffc04027343634b01af01a02701aa01ab01aff1a041a0c080d0d42550c
0e0b0b42550c0c0c0c42550c2509b8ffc04010333634f0090100092009d0
09e0090409b8fff8b41010025509b8fff840110e0e025509040c0c025509
0a0b0b065509b8fff640160f0f065509020c0c065509020d0d0655094e19
4750182b10f62b2b2b2b2b2b2b5d712bed2b2b2b105d712bf65d712b2b2b
2b2b2b2b2b2b2b2b3cfd2b2b2be4003fed3f3f3c39390111123931304379
401a04100e0d0f0d0206070806080508030610040c1b000d08111b00002b
012b2a2a81005d012b2b2b21350623222626272635113311141716163332
363635113311033f7cd55ea34f100bb40b116e51518e3bb49cb4486d4f35
730292fdb38d314751538f880239fbda>ArialMT AddT42Char 
2 0 0 <00020100000005000500000300070000211121112521112101000400fc20
03c0fc400500fb002004c000>ArialMT AddT42Char 
ArialMT /CharStrings get begin
/space 3 def
/colon 29 def
/M 48 def
/a 68 def
/b 69 def
/c 70 def
/f 73 def
/i 76 def
/l 79 def
/n 81 def
/o 82 def
/t 87 def
/u 88 def
end
ArialMT /Encoding get
dup 32 /space put
dup 58 /colon put
dup 77 /M put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 102 /f put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 116 /t put
dup 117 /u put
pop
end
%ADOEndSubsetFont
/EICMAK+ArialMT /ArialMT findfont ct_VMDictPut
/EICMAK+ArialMT*1 
[32{/.notdef}rp /space 25{/.notdef}rp /colon 18{/.notdef}rp /M 19{/.notdef}rp /a 
/b /c 2{/.notdef}rp /f 2{/.notdef}rp /i 2{/.notdef}rp /l 
/.notdef /n /o 4{/.notdef}rp /t /u 138{/.notdef}rp]
EICMAK+ArialMT nf
EICMAK+ArialMT*1 [7.98 0 0 -7.98 0 0 ]msf
130.32 114.36 mo
(Matlab function: )
[6.65128 4.44086 2.22244 1.77554 4.44087 4.44087 2.22162 2.22243 4.49913 4.44087 3.99399 2.22243 
1.77556 4.44087 4.44086 2.22244 0 ]xsh
/EICMAJ+Ribbit'sCMSY10*1 uf
/EICMAJ+Ribbit'sCMSY10 uf
/XFAAAA+Ribbit'sCMSY10 uf
/EICMAI+Ribbit'sCMTI10*1 uf
/EICMAI+Ribbit'sCMTI10 uf
/CUFAAA+Ribbit'sCMTI10 uf
/EICMAH+Ribbit'sCMTI12*1 uf
/EICMAH+Ribbit'sCMTI12 uf
/SPVAAA+Ribbit'sCMTI12 uf
/EICMAG+Ribbit'sCMR17*1 uf
/EICMAG+Ribbit'sCMR17 uf
/VXVBAA+Ribbit'sCMR17 uf
/EICMAF+Ribbit'sCMMI10*1 uf
/EICMAF+Ribbit'sCMMI10 uf
/CBIAAA+Ribbit'sCMMI10 uf
/EICMAK+ArialMT*1 uf
/EICMAK+ArialMT uf
/ArialMT uf
/EICMAE+Ribbit'sCMMI12*1 uf
/EICMAE+Ribbit'sCMMI12 uf
/RDHAAA+Ribbit'sCMMI12 uf
%ADOBeginSubsetFont: Arial-ItalicMT Initial
ct_T42Dict begin
-0.516 -0.324 1.355 0.996
 256 array 0 1 255 {1 index exch /.notdef put} for  /Arial-ItalicMT
Type42DictBegin
[<00010000000c000c000c000c4f532f32efe77db1000000cc000000606376
74203de628370000012c000005606670676d54bf6d360000068c000005ce
676c79660e92094d000070fc0005af0c68656164daab66ef00000c5c0000
0036686865610e470d6300000c9400000024686d74786991277800000cb8
000027e06c6f63611c63139c00003498000027e46d6178700d2403ce0000
5c7c000000206e616d65815f997c00005c9c00000db77072657048530f70
00006a54000006a667646972000000000000000000000000000203880190
00050008059a0533001e011b059a0533005a03d1006602120805020b0604
020202090204e0000aff000078430000000100000000544d432000010020
fffc05d3fe570133073e01b2400001bfdff70000042605ba000000200004
05ba001905ba001905a6001a042600180000ffe70000ffe80000ffe7fe69
ffee05ba0019fe6fffe202e2000000b5000000b5000000000000000000bc
00bf008c00b300a600a600b10010010400640079008b008b00c100ea008a
00a2009101b40073007a00a400a200bb01bd0270005a00800017007000c3
00300103ffd000ac007d010d0006001200c900cd00560091ff8f0113000b
00190043007200b903c803d7ffee0146016e0002001b0044005200b603ee
00d80104023d05180573ff2d0005000900c600cd024cffe7001100150037
0049004e005c00a600a700b500c500db01280543ffdf0021004000530070
0079008e00a300ca018f0265027502a403c80555ff9affd7ffee00050008
002600460069007000730077009a00c100ef010a011301c101e50318049c
fef2fef9ffa4000000270034004100450075008000c400cb00d900e500f8
01550166022b0254037004050467ff16ffb40002001d0032004a004a004d
00550060007c007f008c009d00b102a3038cfec4fef7000100030003002d
00370037003a0056005a00a400cd00da0111011901250127014801530169
01a001fb02070239028102a402f7030503280328033603a303b503dd03df
03f10448047804e6060bff28ff4bff68ff78ff9fffbfffe10012001f0028
004c005a005c005e00610070007700810083008800b1009c009c009d009f
00a500b600b800b900ba00d300df00e100f200f7010e0132013b013c0166
016c017801ae01b501b701cf01d2025d026102a202cd0323035a03a303a4
040004440450047304d2fe00fe38fe8cfeb1feceff0effb2ffc7ffecfffd
0005001f002100250026002d00580065008100850091009900a500ab00af
00b000b000ba00db00dc00e900f80109010901100114011701240129012d
012f013601500151015a0167017401790182018e01900199019c01b001b3
01b701be01c501da01e801f001f201fb02000200020b020f021f0222022c
022d022e024e02670287029002ac02b502bc02bc02d002d402d802db02e5
02f102f9031103140314032203260348034a035c036f03780379037e03ab
03b503cb03e004040405040f0428042c048404a504af04cf04eb04f9050b
058e0593059805e505e506000610063d06500668069506b806d907030751
0766077e077f078207b60800082308ac00b200bf00b100af000000000000
000000000000025c00a100d301be00de01a6031402ab015002a70196010e
0318006b039b01d1054b0089023c02b0014d021603f301760176001503a9
01f400f400b6020402d8012b04a701a000bc01bd028c026b0278040f0157
04a904fd017404d2040302e400a602ee00000000061404a7000002760000
016d013e00000267006d009e021400cb02a40085007100c2009e06090290
00b9008f00260248003501490091009902ef00eb008e0011013f006a0079
00fd01a3057402a1017a03e8020c005601fd02df013b0574006606100081
01b3024e03cb01e400cd02bc0132014b01680239016200fd00e601a201e6
0255004d028300a3046705d401dd012b014e05680070000004e003490366
021302bb0000000000000000000000000000000000af00b4000300cd004c
03c8005c0192007200cd022b0049026f009d03bd01e900b4017c04670368
0099027802040183028102ac00b30348040b004200b403b400be01a803d6
012b00af0478016e0193ff45fd5d00f506a604ae03b10536041cffcafedc
01a501d0ffba02f10037ffca0355fe67019c04190055007c00e50072006d
000b00ab012b009c00db01a60008012b00250056008e00a5001500100109
00cb00460017004c005e01f200b80083001101360128004e0222006b0241
072006140000072700aaff370037006e002901da04a8007500ba40415440
3f3e3d3c3b3a3938373534333231302f2e2d2c2b2a292827262524232221
201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a09080706050403
0201002c4523466020b02660b004262348482d2c452346236120b02661b0
04262348482d2c45234660b0206120b04660b004262348482d2c45234623
61b0206020b02661b02061b004262348482d2c45234660b0406120b06660
b004262348482d2c4523462361b0406020b02661b04061b004262348482d
2c0110203c003c2d2c20452320b0cd442320b8015a51582320b08d442359
20b0ed51582320b04d44235920b0042651582320b00d44235921212d2c20
204518684420b001602045b04676688a4560442d2c01b10b0a432343650a
2d2c00b10a0b4323430b2d2c00b0172370b101173e01b0172370b1021745
3ab10200080d2d2c45b01a234445b01923442d2c2045b00325456164b050
515845441b2121592d2cb00143632362b0002342b00f2b2d2c2045b00043
60442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8cb8
100062602b0c642364615c58b00361592d2c45b0112bb0172344b0177ae4
182d2c45b0112bb01723442d2cb01243588745b0112bb0172344b0177ae4
1b038a45186920b01723448a8a8720b0a05158b0112bb0172344b0177ae4
1b21b0177ae45959182d2c2d2cb0022546608a46b040618c482d2c01182f
2d2c20b0032545b019234445b01a23444565234520b00325606a20b00923
4223688a6a606120b01a8ab000527921b21a1a40b9ffe0001a45208a5458
2321b03f1b235961441cb114008a5279b31940201945208a54582321b03f
1b235961442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d4323
430b2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb11011432343
650b2d2c4b525845441b2121592d2c0120b003252349b04060b0206320b0
00525823b002253823b002256538008a63381b212121212159012d2c4bb0
6451584569b00943608a103a1b212121592d2c01b005251023208af500b0
016023edec2d2c01b005251023208af500b0016123edec2d2c01b0062510
f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d2c
b02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76b802
3623701020b802364520b0005058b00161593a2f182d2c21210c6423648b
b84000622d2c21b08051580c6423648bb82000621bb200402f2b59b00260
2d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c64
23648bb84000626023212d2cb4000100000015b00826b00826b00826b008
260f10161345683ab001162d2cb4000100000015b00826b00826b00826b0
08260f1016134568653ab001162d2c4b53234b515a5820458a60441b2121
592d2c4b545820458a60441b2121592d2c4b53234b515a58381b2121592d
2c4b5458381b2121592d2cb0134358031b02592d2cb0134358021b03592d
2c4b54b012435c5a58381b2121592d2cb012435c580cb00425b00425060c
6423646164b807085158b00425b00425012046b01060482046b010604859
0a21211b2121592d2cb012435c580cb00425b00425060c6423646164b807
085158b00425b00425012046b8fff060482046b8fff06048590a21211b21
21592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b03b2b
1b2121592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a034b54
b00426024b545a8a8a0ab012435c5a58381b2121592d2c462346608a8a46
2320468a608a61b8ff8062232010238ab902a502a58a70456020b0005058
b00161b8ffba8b1bb0468c59b0106068013a2d2cb1020042b123018851b1
400188535a58b910000020885458b202010243604259b12401885158b920
000040885458b202020243604259b12401885458b2022002436042004b01
4b5258b2020802436042591bb940000080885458b202040243604259b940
00008063b80100885458b202080243604259b94000010063b80200885458
b2021002436042595959592d0000000100000005147b1efab89e5f0f3cf5
0819080000000000a372c2bf00000000c94a4554fbddfd670adf07fb0002
0009000100010000000000010000073efe4e00430aaafbddfa520adf0021
000700000000000000000000000009f80600010000000000023900000239
00000239007302d701150473005f04730069071d00c7055600a101870104
02aa00ad02aaff93031d00ec04ac00b80239003102aa005f023900760239
ff98047300910473012f04730078047300700473005d0473008e047300ab
047300f8047300990473008a023900750239003104ac00b804ac00b804ac
00b804730104081f006f0556ffd70556005905c700ba05c7005b0556005c
04e3005d063900c705c7005602390075040000440556005b0473005206aa
005a05c70064063900bb05560058063900bd05c700600556009004e300ff
05c700c6055600fe078d01000556ffbf055600ef04e300320239000d0239
00ae0239ff8803c100900473ff7e02aa012a0473005a0473004404000073
0473006c0473006a0239005d047300350473004401c7003d01c7ff080400
004601c7003606aa004304730044047300640473ffeb0473006902aa0044
0400004e0239007304730080040000a205c7009f0400fffd040000000400
002802ac006b021400bc02acff5404ac00a40556ffd70556ffd705c700ba
0556005c05c70064063900bb05c700c60473005a0473005a0473005a0473
005a0473005a0473005a040000730473006a0473006a0473006a0473006a
0239007d0239007d0239007d0239007d0473004404730064047300640473
0064047300640473006404730080047300800473008004730080047300ba
033301110473009a047300400473003e02cd006d044c008e04e3004a05e5
005305e500530800011802aa015a02aa00ed0464007c0800ffad063900ae
05b4009a0464007c0464007c0464007c0473004b049c000c03f4003805b4
007a069600f1046400000231000002f600a702ec008f062500bb071d0057
04e3009904e300ac02aa007604ac00b8046400540473002e0464007c04e5
001a047300a104730053080001260556ffd70556ffd7063900bb080000a4
078d00810473fffc0800000002aa00d802aa00d601c7010801c701000464
008003f4007804000000055600ef0156fde80473005102aa006102aa0021
0400006f0400006f0473000b023900b901c7fff102aaffd8080000880556
ffd70556005c0556ffd70556005c0556005c023900750239007502390075
02390075063900bb063900bb063900bb05c700c605c700c605c700c60239
007d02aa00cd02aa00c002aa00c902aa00db02aa018e02aa014802aa004d
02aa00b002aa004002aa01080473001801c70026055600900400004e04e3
003204000028021400bc05c7005b04730064055600ef0400000005560058
0473ffeb04ac00b804ac010502aa011702aa009802aa00a906ac007b06ac
00ab06ac00a90473ffe8063900c70473003502390075055600900400004e
05c700ba0400007305c700ba040000730473006c046b00b502aa01360556
ffd70473005a0556ffd70473005a05c7005b0500007005c7005b0556005c
0473006a0556005c0473006a0473005201c7003604730052024000380473
00520333003605c700640473004405c7006404730044063900bb04730064
05c7006002aa004405c7006002aa0044055600900400004e04e300ff0239
001b04e300ff02d5006d05c700c60473008005c700c60473008004e30032
0400002804e300320400002804900057063900bb06b200b4049000660472
00620384004504d3006402fe00b00538006f046bff7e0400007302eb0077
08c000190800004f040000990800004f040000990800004f040000980400
009807d5016a05c000ee04ac00b804d5009d04ac007104d5022204d50105
05abffe9050001c905ab027e05abffe905ab027e05abffe905ab027e05ab
ffe905abffe905abffe905abffe905abffe905ab01c005ab027e05ab01c0
05ab01c005abffe905abffe905abffe905ab027e05ab01c005ab01c005ab
ffe905abffe905abffe905ab027e05ab01c005ab01c005abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905abffe905abffe905abffe905abffe905ab02d6
05ab006605abffea05d5ffff04d500920800000007eb013007eb012007eb
013007eb012004d500b204d5008004d5002a082b0198086b01b807550010
060000f40600006f0440003a0540003704c0003f04150040040000250600
005505de0075038d003b04eb00650180010402d50115071500b802960019
04d5009202d6008302d6008304d500b202d600700556ffd70473005a05c7
00ba0400007305c700ba040000730556005c0473006a0556005c0473006a
0556005c0473006a063900c704730035063900c704730035063900c70473
003505c700560473004405c70056047300440239007501c7003d02390075
01c7003d0239007501c7003d0239ffdc01c7ff960400004401c7ff080556
005b04000046040000460473005201c7ff6e05c700640473004405c90062
04730049063900bb04730064063900bb0473006405c7006002aaffc70556
00900400004e04e300ec0239001805c700c60473008005c700c604730080
05c700c60473008005c700c604730080078d010005c7009f055600ef0400
000001c700360556ffd70473005a0800ffad071d0057063900ae04e30099
02390128078d010005c7009f078d010005c7009f078d010005c7009f0556
00ef0400000001c7013302aa00990473004004cd005a06ac007b06ac0094
06ac009306ac006302aa002602aaffe002aa017b02aa00610556ffd4064f
006306c50068031c0062065a005706ec00600633001b01c7ffee0556ffd7
05560059055effec0556005c04e3003205c70056023900750556005b0556
ffec06aa005a05c7006405300008063900bb05cc00570556005804cc002d
04e300ff055600ef0556ffbf06a500fd0616000702390075055600ef0490
0066038400450471004501c7003d046600960492ffe90400009e03b50064
047100450457008201c7003d0400003c03f0ffcd0462ffe8040000a20393
0073047300640495ffe403e4006f04660096045eff6d05d2009c063b0064
01c7003d046600960473006404660096063b00640556005c06be00e7045a
005705a900bb055600900239007502390075040000440887ffea07dc0057
06c100e504b70057051d00e705ca00570556ffd70535005705560059045a
005705a2ff7f0556005c0756ffb704e9006305b9005705b9005704b70057
057cffeb06aa005a05c70056063900bb05cc00570556005805c700ba04e3
00ff051d00e7065c00a40556ffbf05d10057056300db075d005707620057
067100e70717005705350057058d005a082e00570574ffca0473005a0480
0076042d006403f2004e046c00640473006a0581ffc503b8001f04730080
0473008003c7003f0483ffd8057c003f0467003f047300640467003f0473
ffeb0400007306aa00430400000006af005f0400fffd0493007d04240097
06a4007906cf007904f8007905e3003f0435003f03ef00350604003f0446
ffe80473006a047300450306003f03f700610400004e01c7003d01c7003d
01c7ff080748ffd8069f003f0473004503c7003f040000000473007d03f0
005702b7003f0800005108aa005b055c00ac0000003f0000ff930000ffa2
0000ffa2000000760000fff30000fff30000fffd0000fffd000001c00000
ff850000012e00000053031000f10000014a02330082000003ca0000ffc3
0239006d0481001d0456ffe60331ffcd041100a104d1005601f9004f030f
00b304ca004f04b8008b01f900bc041300a903b0000703b400b004ca004f
04cf002301f9fff802d2fff00498006c043cffd30488009c045f003303b1
00af03d4fff304660003041300a9058e00a20524ffe103f2004f03f200bc
03f200bc01e3009e0356009e0686004f01f9009b041300a90413007003b4
001703b400170448ffe1058e00a2058e00a2058e00a2058e00a20481001d
0481001d0481001d0456ffe60331ffcd041100a104d10056024b002d034a
003904b8008b024b004e041300a903b0000703b400b004cf002302d2fff0
0498006c0488009a045f003303d4fff304660003041300a9058e00a20524
ffe101f9004f0456ffe603b00007045f0033049b00370000ffdc0000ff25
0000ffdc0000fe510000ffdc0000fe510000ff160000ff160000ff160000
ff160000ff160000ff160000ff160000ff160000ff160000ffdc0000ff16
0000ffdc0000ff200000ffdc047300a408000000067e00bb04d600640659
00c6051200800000fef40000fd410000fdb70000ff580000fdec0000fe3b
0000ff2e0000ff380000fe090000fd760000feb30000fd0e0000fd660000
ffec0000ffc40000fe44041b005606ac007b06ac007b0000ff6a0000fdb8
0000feca0000fdc80000ff2d0000fdc70000fced0000fc0e0000fc0e0000
fd140000fc910000fc7c0000fc920000fc460000fc000000fc460000fbdd
0000fef40000ff500000fe7e0000fc6a0000fc950000fdf70000fe330000
fc990000fcf90000fcef0000fc9f0000fc8b0000fbde0000fd2c0000fd4b
0000fc780000fc6801c7003d0556ffd70473005a0556ffd70473005a0556
ffd70473005a0556ffd70473005a0556ffd70473005a0556ffd70473005a
0556ffd70473005a0556ffd70473005a0556ffd70473005a0556ffd70473
005a0556ffd70473005a0556ffd70473005a0556005c0473006a0556005c
0473006a0556005c0473006a0556005c0473006a0556005c0473006a0556
005c0473006a0556005c0473006a0556005c0473006a0239007501c7003d
0239003801c7ffe8063900bb04730064063900bb04730064063900bb0473
0064063900bb04730064063900bb04730064063900bb04730064063900bb
04730064067e00bb04d60064067e00bb04d60064067e00bb04d60064067e
00bb04d60064067e00bb04d6006405c700c60473008005c700c604730080
065900c605120080065900c605120080065900c605120080065900c60512
0080065900c605120080055600ef04000000055600ef04000000055600ef
040000000556ffd70473005a0239007501c7003d063900bb0473006405c7
00c60473008005c700c60473008005c700c60473008005c700c604730080
05c700c60473008000000030000000300000003000000030045a003e0306
003c0756ffb70581ffc504b7005703c7003f04b7005703c7003f05c70056
0467003f047300ea040000a2047300870400fff40556ffbf0400fffd0563
00c6042400810563007504730044063900c104730076063900bb04730064
01f900a10000000002bc000003f2008c0473004405d8008c053500570473
0044053500570473004405c700a005c700ba0400007305c7005b0646008c
0535003b0473006c047200000556004404e9006604e3ff2a063900c703f9
00890709004401c70036023900620556005b0400004601c7003603f0ffcd
06c5007005c7ff3004730044063900bb06f200bb0557006405d8008c0473
ffeb05560058055600820400005704cc002d02aa00c80239ffe404e300a0
0239007304e300ff061600bf05c700c605bd00d10400000004e300320400
002804e3ffba04e30033040000110400fffa04730078041500490381000a
0400006b0473ffeb021400bc034e00bc04ac0072023900730aaa005b09c7
005b0873006c08730052063a0052038e003609c70064078e0064063a0044
047300760556ffd70473005a0000fff90556ffd70473005a0800ffad071d
0057063900c704730006063900c7047300350556005b04000046063900bb
04730064063900bb0473006404e3ffba0400ffae01c7ff080aaa005b09c7
005b0873006c063900c7047300350846005604f1000405c7006404730044
0556ffd70473005a0556ffd70473005a0556005c0473006a0556005c0473
006a0239007502390036023900750239007d063900bb04730064063900bb
0473006405c7006002aa004405c7006002aa004405c700c60473008005c7
00c604730080055600900400004e04e300ff02390061045cffd6037effb5
05c7005604730044055a005604d6006404d6006404e30032040000280556
ffd70473005a0556005c0473006a063900bb0473006400000035063900bb
04730064063900bb04730064063900bb04730064055600ef040000000473
00880473006c04730044047300440400003c040000100473006c0473006c
0473007105a200760384004503b8001f04ed001f041200640239ff380473
00350473003504670064040200a604ef007c0473007c0473004404730044
01c7001f01c7003e02d9000001c7ffcf01c7fff001c700070482003006aa
006d06aa006d06aa00430473ff100473004404a9003f0473006406200064
063b00640473006402aaffb002aaffb002aaffb002aaffed02aa001502aa
004402aa007504460044044600410400ffd70253ff380271ff3802510059
02c8ff330239002b0239001c047300420481005b046600960400ffd305c7
ffd30400ffdd041e009504000028046100280400ffae0400ffcc040000ca
040000c70400003704000023063900bb0418004404120059046700640467
003f0258ff1f0400ffd703950044047300690400003d04000083076b006c
073e006c07c7006c055e007603b0007305ab00730602005d0522003604bf
003603e20064043800130277003a0277003a00faffa201c1003a01c1001e
01c10027029d003a041400d302c9004f0187010402d7011501c7010801c7
010001c7013302aa01c002aa01ad02d900de02d900d504ac00b804ac00b8
04ac00ad04ac00ad02aa01d902aa015a02aa012a02aa012102aaff9502aa
005e02aafffb023900700239015202aa00fb02aa00fb02aa00a602aa00a6
02aa00a602aa001002aa000202aa00a202eb00d600be00400299006302b1
004002d900d5031000960310009603100096031000960310009602aa0062
02aa006202aaffc702aa00c902aa00d60457009604570096045700960457
00960457004304570043045700430457004304570043031000430457002f
0457002f0457002f0457002f0457002f0310002f04570025045700250457
002504570025045700250310002f0457001a0457001a0457001a0457001a
0457001a0310001a04570042045700420457004204570042045700420310
004204570096045700960457009604570096045700420457004204570042
0457004204570042031000420457002f0457002f0457002f0457002f0457
002f0310002f0457002f0457002f0457002f0457002f0457002f0310002f
045700260457002604570026045700260457002603100026045700420457
004204570042045700420457004203100042045700960457009604570096
045700960457004204570042045700420457004204570042031000420457
002604570026045700260457002604570026031000260457002304570023
045700230457002304570023031000230457002f0457002f0457002f0457
002f0457002f0310002f0457004b0457004b0457004b0457004b0457004b
0310004b0457009604570096045700960457009604570042045700420457
00420457004204570042031000420457001a0457001a0457001a0457001a
0457001a0310001a04570024045700240457002404570024045700240310
00240457002f0457002f0457002f0457002f0457002f0310002f0457004e
0457004e0457004e0457004e0457004e0310004e04570096045700960457
0096045700960000ff780000ff6a0000fea20000ffb30000003f0000ff9b
000000150000ffac0000ffd000000091000000250000ff140000ffb30000
ffb3000000200000001100000045000000df0000fedc0000fea70000fee2
0000fef00000ff7d0000ffbb0000ff2c0000feec0000fee90000fee30000
fe400000fe1b0000ff210000fe460000fec60000fee70000fe9b0000fef5
0000ff630000fe210000fe500000fe690000fe260000fe640000fe640000
fe190000fe400000fd1b0000fe5d0000fe950000fea90000fd980000fe16
0000fe620000ff2c0000fe210000fedb0000fe3a0000ffca000000540000
fe6d000000100000ffe70000ff6f0000000d0000ff160000fefb0000ff26
0000fd8d0000feea0000fee70000ff6f0000ff6f0000ff6f0000fe980000
fedf0000fd1f0000ff310000ff2b0000ff530000ff000000ff010000ffc9
0000fef10000ff0e0000ff1d0000ff130000fee10000fe210000ff400000
ffce0000ff4c0000fed002aa015a02aaffe902aa004f040a00430466003c
05ba00ef070e007c05ba00ef04730064063b00640482ffd3063900bb0473
006405c700c80400003704e3005d0306ffe904ff006a043c0056060d00b4
049d00f506c5ffe406aaffe1056300dc047300b20563002b0419ffc80556
00820556008204e0007d04c5008805f700bb046e00640352003302de0045
0482ffd304a200640400007301c7ff08063900bb03870064038700110556
005c05b900570473006a047300800a6a00bb04c2006106140044063b0044
07390043058e00440558ffa50400ffbd070600420572004306a1001d057b
00430831004306d9004404e9004903b8fffd06a5011a05d200c5063900bb
04730064061400fe04b800a2061400fe04b800a208de00bb07590064069f
005004cc001e0a4200bb070200640000feca0a6a00bb04c2006105c700ba
04000073047300390000ff5a0000ff5800000050000000320000fc2b0000
fc4c05b9005704730080053500570435003f055600580473ffeb0528004b
0434004404e9006303b8001f04b7005703c7003f05f100e7048a00790721
0056059b003f08b3005706b7003f05c7008b0400005105c700ba0400006c
04e300ff06aa0043072e00e7052900b0056300db0424009706cd00400514
001f06cd00400514001f023900750756ffb70581ffc50504004b0428002a
057cffeb0483ffd805c7004b0467002a05c700560467003f056300db0424
009706aa005a057c003f02aa00db0556ffd70473005a0556ffd70473005a
0800ffad071d00570556005c0473006a063900c1047300760756ffb70581
ffc504e9006303b8001f04e900630400ffae05b900570473008005b90057
04730080063900bb04730064063900bb04730064058d005a03ef0035051d
00e704000000051d00e704000000051d00e704000000056300db04240097
0717005705e3003f055600490473006c079d004906ab006c077f0108061c
00b804e9010803b800b807d8ffeb06c4ffd8081a005606a5003f063900c7
0467006405dc00ff08ea00430000fec30000ff7900000033000000700000
fffb0000feb9000000320000ffd40000ff7c0000ff700000feb2000000b0
000001360000ff6e0000fe6c000000de0000003d0000fee50000feec0000
feb40000fde20000fef5000000100000fec70000fece0000001d00000021
0000ff7a0000fe9500000041000001ac0000003000000030000000060000
00060000009400000074000000300556ffd70473005a0556005904730044
0556005904730044055600590473004405c700ba0400007305c7005b0473
006c05c7005b0473006c05c7005b0473005f05c7005b0473006c05c7005b
047300560556005c0473006a0556005c0473006a0556005c0473006a0556
005c0473006a0556005c0473006a04e3005d0239005d063900c704730035
05c700560473004405c700560473004405c700560473004405c7fffd0473
fff305c70056047300440239ff4501c7fef5023900750239007d0556005b
040000460556005b040000460556005b040000460473005201c7ffe80473
005201c7ffe80473005201c7ff220473005201c7feff06aa005a06aa0043
06aa005a06aa004306aa005a06aa004305c700640473004405c700640473
004405c700640473004405c7006404730044063900bb04730064063900bb
04730064063900bb04730064063900bb04730064055600580473ffeb0556
00580473ffeb05c7006002aa004405c7006002aafff205c7006002aafff2
05c7006002aaff39055600900400004e055600900400004e055600900400
004e055600900400004e055600900400004e04e300ff0239007304e300ff
0239003804e300c90239ffa804e300ae0239ff7005c700c60473008005c7
00c60473007d05c700c60473008005c700c60473008005c700c604730080
055600fe040000a2055600fe040000a2078d010005c7009f078d010005c7
009f0556ffbf0400fffd0556ffbf0400fffd055600ef0400000004e30032
0400002804e300320400002804e3003204000028047300440239007305c7
009f040000000473005a01c7003604900066049000660490006604900066
049000660490006604900066049000660556ffd70556ffd7068200b80682
00d2068200b8068200d2068200e3068200e3038400450384004503840045
038400450384004503840045061e0082061e00ab07ae00a507ae00bf07ae
00a507ae00bf047100450471004504710045047100450471004504710045
0471004504710045068f0082068f00ab081f00a5081f00bf081f00a5081f
00bf081f00d0081f00d001c7003d01c7003d01c7003d01c7003d01c7003d
01c7003d01c7003d01c7003d03010082030100ab049100a5049100bf0491
00a5049100bf049100d0049100d004730064047300640473006404730064
0473006404730064069d0082069d00ab082d00a5082d00bf07c900a507c9
00bf04660096046600960466009604660096046600960466009604660096
04660096068200ab07ae00bf081200bf07ae00e3063b0064063b0064063b
0064063b0064063b0064063b0064063b0064063b0064067a006b067a006b
080a00a5080a00bf07a600a507a600bf07a600dc07a600dc049000660490
00660384004503840045047100450471004501c7003d01c7003d04730064
047300640466009604660096063b0064063b006404900066049000660490
006604900066049000660490006604900066049000660556ffd70556ffd7
068200b8068200d2068200b8068200d2068200e3068200e30471ffeb0471
ffeb0471ffeb0471ffeb0471ffeb0471ffeb0471ffeb0471ffeb068f0082
068f00ab081f00a5081f00bf081f00a5081f00bf081f00d0081f00d0063b
0064063b0064063b0064063b0064063b0064063b0064063b0064063b0064
067a006b067a006b080a00a5080a00bf07a600a507a600bf07a600dc07a6
00dc04900066049000660490006604900066049000660490006604900066
0556ffd70556ffd70556ffd70556ffd70556ffd702aa016702aa004f02aa
016702aa00c002aa00ed0471ffeb0471ffeb0471ffeb047100450471ffeb
068200d10682007c06f300d106f3007c05c7005602aa00b802aa00b802aa
00e301c7003d01c7003d01c7003d01c7003d01c7003d01c7003d02390075
02390075036500d10365007c02aa00d202aa00d202aa00e3046600960466
009604660096046600960495ffe40495ffe40466009604660096055600ef
055600ef068200a906e6007c061e00ab02aa006102aa006102aa012a063b
0064063b0064063b0064063b0064063b0064076500d1069d007c074200d1
067a006b0616000702aa015a02aa01900473006105c7008f05c700ba06aa
004305c70043090a0060078d002f0556005b04e300a30800ffd70400ffd3
04c100660000ff2b0000ff610000ff320000ff4401c7001f01c7ff08042b
ffa1055600580506006c025aff1f0508004402c8ff8d0555007505550075
02aa001e02aa001e02aa005002aa005002aa003002aa00ac02aafffe02aa
ffce02aaff7b023900b702aa018602aa018602aa002602aa0026032effbe
032effbc02aaffc80000003b0000004a0000ff910000fec20000fefb0000
fefb0000fe410000004a0000ff7b0000ff530000fea2055600580473ffeb
03ffffd205bcff9e071d00570401004004000073047100440471002903c5
004403b8001f01c7ffd6035000150400003c03950022057c003f04b0003f
047300640400003c047300300400fff704e3001c078d008103a8003c0473
006e04730064044800440446ffe804460044041d00cb0466009604730020
0595002304730020040000a205c7009f0400002803b8001f03b8005704db
fff80306003f0400ffd30467003f0448004405d200d40483ffd803ee005d
05bd004803a1007a03a1007a03d0007a039d007a039d007a03eb00a203cf
007a0149007a02ac007a0399007a0302007a046f007a03c9007a03cb007a
03f900a2030f008a0381007a03a7007a032c00de038d00a3052000ea02de
006e02de009602d400ab04bd009f027e003a032c00ab031900ab031900ab
0250007c025000600322008300ff00250286003a03ff003a0275003a0328
00ab02d7008d032800a7032800b302ef0014019000a202d4008f03bc00d0
0435007802dc00cc0388006e0330002802f000da030c00a203810099030c
fffb00ffffe20187ffb002d4000c02dc00510330ffb702f0005e0309ffe9
03810012030cff7305ad001d053d00a105fd005604dc000704e000b005f6
004f053f00a90650ffe104ac00670000fd850000fddb0000fde30473fffc
02aa00ec02d5006e0400000008000000040000000800000002ab00000200
0000015500000473000002390000019a000000ab00000000000005e50053
05c700ba06aa0052057cffea074d00800711006c070c00690556ffd705c7
005f0400ff860473003d04e3ffc1040000600400002604a500c600000102
0000fee50000fe590000000b0000ff530495ff8f05c700a005c700ba05c7
00a0045a00570306003f0000fece0000ffc30000ff4202d200240000fee1
047300440473006c0239ffd006aaffd00473ffb80473ff1c02aaffa002aa
ffa00400004e0239ffc0040000280473ffef030b007a047400050618ffe2
01c7001f01c7001f0473ffeb0466003f04810021047300440473006c0239
ff83058200350400004601c7ff5b06aa0043047300440473ffeb02aaff6f
0400004e0318ff38040000a20400fffd040000280473005a0473006c0473
006c0473006a0384004503b8ffb30514007601c7003d0400ffcb0253ff56
04730080045cffe40309008002da00a702da0068032900a60250006001a5
009701a5ffea0322008302d600b400ff004b00ff006200ff006200ff004b
01e1000400ff003e00ffffce026d006403ff003e03ff005a0275ff6f0275
003902d20052032800b1032800a802c000370187ffe30190004802750038
033700ac027500730275007102dc0047029f004c029f004c02f0004c02bc
002b032900b70000ff6d0000ff8e0000ff0a0000ff830239006f02de000f
0319003103280030030c000b03190023063900c70556ffd70556005805c7
00ba02aa0012049000660490006604900066049000660490006604900066
049000660490006601c7003d01c7003d01c7003d01c7003d01c7003d01c7
003d01c7003d01c7003d0466009604660096046600960466009604660096
04660096046600960466009601c7003d01c7003d01c7003d01c7003d0466
009604660096046600960466009603a0007b0556001f05c700780556ffec
0556005a0473ff860400004401c7ff08060a00bb0473006905c7000c02aa
00330556009f040000000400003c040000730400003c01c70036045aff83
0306ff610556ffbf0400fffd0556ffbf0400fffd04e9006603840045057c
ffd504abffd80000ff5d0000ff9f0000ff980000ffc70000ff2a0000ff27
0000fee4000000330000fe51078b002303eb000b0400003c0473002201c7
00310473ffee0556005805c7002f0473ffb80239ff3705c7005604730044
0556005b0400004604e30032040000280400006b04d000560383003f0538
006f0000fffd000000250000ffcc0000ffa80000ffb00000fee201c7003d
05c9005605c7006405c900ad0000fec00000ff210000feb30000feba0000
feb80000feb70000febd0000fed90000fec50000febc0000fea3063900bd
04730069078d010005c7009f056200560000ff84060a00bb04d000a0084c
010006ba009d0239009d038000cc018700d0018700fe0400009904000099
0239012a0239012c023900d002aaff8804e300c4047300ad000000000000
007400000074000000740000007400000104000001340000029800000498
000005ce000007880000081c0000089200000918000009e800000a580000
0ad000000b0c00000b3e00000b8800000c6e00000d2c00000e3800000f50
000010ae000011e8000012fe00001392000014d200001602000016560000
16f80000177c000017da000018620000193600001b1e00001c0000001d56
00001e5a00001f58000020520000212c0000226a00002380000024300000
251e00002654000026ec0000299a00002b4c00002c5400002d4a00002ed8
00003042000031c00000328a000033760000344600003614000037dc0000
38fe000039fa00003a7c00003ace00003b5200003bce00003c0200003c5c
00003dc000003f2c000040120000412200004252000043640000451c0000
4684000047e0000048f600004a9400004bae00004d7a00004eb800004f98
000051000000525a0000538a00005502000055e200005736000058060000
598200005ad600005bbc00005cba00005dee00005e3000005f7c00006018
0000604a0000607a000060a8000060da0000610a000061500000618c0000
61bc000061ec0000622a0000625c0000628e000062c2000062ee0000631e
0000634e00006382000063bc000063ea0000641e0000644c0000647e0000
64b4000064e400006518000065520000658e000065c60000660e00006640
00006686000066cc000067b000006834000069b000006af200006c660000
6cbc00006d3800006e9200007034000071c8000072b20000731600007374
000074ba00007608000077be00007924000079b400007a5c00007b200000
7c9800007dec00007ed200007fb00000801c000080f4000081dc0000832c
000083bc00008506000087080000889a0000898000008a0c00008a580000
8b1400008c4200008d8600008e0800008ea800008f4000008fc800008ff8
0000902a00009060000091fe000093b4000093ea0000941a000094f20000
95f60000967a00009710000097a4000098420000987c000098b200009916
00009a3a00009aa400009b0600009c9e00009e1200009f5400009f840000
a0000000a1000000a29e0000a2da0000a3100000a3400000a3800000a3b2
0000a3e20000a41e0000a4500000a4820000a4b20000a4e60000a5160000
a55e0000a59a0000a5cc0000a6b80000a72a0000a7c40000a8100000a878
0000a8b80000a9420000aa2a0000aac40000ab260000ab9e0000ac8e0000
ad9c0000add60000ae080000ae3a0000ae700000aede0000b0260000b1a0
0000b1d00000b2120000b3140000b4380000b4700000b56e0000b6160000
b6e20000b7d60000b9600000bb2c0000bd5a0000be740000bea60000bed8
0000bf080000bf3a0000bf720000bfa20000bfd20000c00a0000c0400000
c18a0000c1cc0000c1fa0000c22c0000c25e0000c2840000c2aa0000c2dc
0000c4340000c57c0000c5a40000c5ca0000c6020000c6320000c6620000
c6940000c7820000c8720000c8a40000c8e80000c91a0000c94c0000c986
0000c9bc0000c9ee0000ca200000ca500000ca7e0000cab40000cae60000
cb160000cb460000cb6c0000cb900000cbc40000cce40000cd180000cd5e
0000cd900000cdd60000ce140000ce460000ce780000cea80000cf220000
d01a0000d1660000d2580000d34e0000d4100000d4d20000d54a0000d682
0000d6f60000d71e0000d8340000da820000dac20000db020000db420000
db800000dbde0000dc3c0000dcaa0000dcca0000dd980000de240000de5a
0000deae0000def80000df420000df5e0000df7a0000df9a0000dfba0000
dfda0000dffa0000e0200000e0460000e06c0000e0920000e0c20000e0ea
0000e1120000e13e0000e16a0000e19e0000e1c80000e1f40000e22a0000
e2540000e2800000e2b60000e2e00000e30a0000e33e0000e36e0000e3a2
0000e3e60000e4160000e44a0000e48c0000e4c00000e4f20000e5340000
e5680000e5980000e5da0000e61e0000e6640000e6c00000e6dc0000e6f8
0000e7140000e7300000e74c0000e8ba0000eb660000edd60000edf20000
ee0c0000ee280000ee440000ee600000ee7c0000eed80000ef120000ef7c
0000f0460000f0e60000f1bc0000f23c0000f2c40000f3340000f3ca0000
f4280000f46e0000f4cc0000f52e0000f55e0000f5ae0000f5ec0000f5fc
0000f62c0000f7600000f88a0000f8b40000f8d00000f8fc0000f9340000
f9800000f9b00000f9e00000fa140000fa4a0000fa7a0000fab00000fae0
0000fb100000fb400000fb800000fbb00000fbe00000fc100000fc400000
fc700000fca00000fe180000ffd4000100080001003c0001019a00010314
0001034400010376000103aa000103dc0001042c000104680001048c0001
04b2000104e6000105fa00010620000106480001075000010776000107a0
000107c6000107ec000108f400010a4e00010a8800010ab800010af80001
0b3a00010b6000010b9600010bca00010bfa00010cda00010e4200010e72
00010ea200010ed200010f0200010f3800010f6c00010f9200010fb80001
0fee0001101e0001104e00011082000111280001117c000111aa000111da
0001120a0001123a0001126a000112a0000112d000011300000113300001
136000011394000113c8000113f8000114280001149e000114ca00011652
00011708000118ca00011aa000011c6c00011dda00011e4000011ec00001
1f0800011fac000120d6000121c2000122e00001238a0001248e000125b2
000126f2000127260001273600012746000127ec000127fc0001280c0001
281c0001282c0001283c000128ea000128fa0001290a0001298800012998
00012a5800012a6800012b1a00012b2a00012b3a00012b4a00012cb20001
2dba00012dee00012e2600012e5600012e8400012eb400012eec00012f22
0001308c0001316c0001322e0001335600013430000134aa000135ae0001
365a0001378c0001379c0001389e000138ae000139ae00013a8600013b88
00013c7a00013dde00013ed800013f1000013f4e00013f7e00013fb40001
3fea0001401e0001413600014166000142660001427600014286000142ba
000142ca00014404000145380001463e0001466e0001469e000147d40001
47e4000148ae000148be0001493000014a5600014a6600014c3200014d3e
00014e2800014e5800014f900001508a0001509a000150aa000150ba0001
50ca000150da000150ea000150fa000151dc000152f6000153060001542e
0001552a000156460001579e000158700001599400015a6200015b4e0001
5c8200015d9400015da400015e9c00015f8a0001608e0001616400016174
0001635c0001646200016472000164a2000165be000166a20001680e0001
68ec000168fc000169aa000169ba000169ca000169da000169ea00016b96
00016ba600016d0000016de200016f6a0001715e00017228000173460001
740a000174f60001761e0001771400017748000178e4000179a000017a84
00017a9400017aa400017ad600017ae600017c3200017d6600017ec80001
7ef800017f280001807600018142000181da0001820a0001840c000184dc
000185640001867800018720000188280001887600018900000189bc0001
89ee00018a6800018ab400018b9a00018bec00018c4000018c7a00018cd0
00018d5400018da000018df400018e6000018fea000190c8000191ca0001
92440001938400019420000194f2000196080001972c000197ae0001989e
0001996200019a3a00019b4e00019cae00019d3a00019e0600019efc0001
9fa80001a0da0001a2160001a31e0001a41a0001a5080001a5da0001a70e
0001a8480001a90e0001a9f00001aae40001ab340001abdc0001ad6c0001
adb80001adfc0001ae3e0001ae880001af1c0001afce0001aff40001b01a
0001b09a0001b11a0001b1460001b1720001b1c80001b2000001b2640001
b2a00001b2dc0001b35e0001b3bc0001b4000001b46c0001b4aa0001b4f6
0001b55c0001b5a20001b5f00001b6360001b7ec0001b9b20001ba0a0001
ba5a0001ba9a0001bb080001bb700001bba00001bbc60001bbea0001bc16
0001bdee0001be140001beb20001bf120001bf700001bfa00001bfd00001
c0200001c0700001c0b00001c1220001c1760001c1d40001c22a0001c260
0001c2a20001c2e80001c3320001c3620001c39a0001c3ca0001c5420001
c8880001c9a00001caba0001cc0e0001cd6a0001cdb80001ce060001ce6a
0001ceb80001cf060001cf780001d0840001d1660001d2540001d3340001
d4140001d4d20001d5c20001d66a0001d7320001d7720001d8fe0001da8a
0001dc3c0001dca80001dd140001dd700001ddce0001dec20001dfbc0001
e08c0001e15c0001e22c0001e3100001e3f40001e4d80001e4ea0001e4fc
0001e50e0001e5200001e5320001e5940001e6060001e6ea0001e6fc0001
e70e0001e71e0001e72e0001e7400001e7520001e7640001e7760001e788
0001e79a0001e8580001e91a0001e9d80001ea9a0001eb100001eb380001
eb600001eb880001ebc80001ec180001ec780001ecbe0001ed0c0001ed56
0001edae0001edfe0001ee540001eea20001eef20001ef4a0001efb20001
f0080001f0620001f0d00001f11c0001f15c0001f1a60001f1f20001f236
0001f2620001f2900001f2d40001f31e0001f3520001f3880001f3dc0001
f4300001f4760001f4ba0001f5080001f55a0001f5a80001f5f60001f64c
0001f69a0001f6d40001f7160001f73e0001f7660001f78e0001f7be0001
f7ee0001f8340001f8820001f8de0001f9220001f96c0001f9b40001fa0c
0001fa540001faa60001faf00001fb440001fb7e0001fbb20001fbe20001
fc120001fc420001fc860001fcb80001fcf00001fd180001fd4a0001fd72
0001fda00001fdc60001fe160001fe520001fe9c0001fed00001ff0a0001
ff3a0001ff940001ffce0001fffe00020026000200540002007c000200a2
000200e80002013e00020174000201a4000201d8000202080002024a0002
0296000202c6000202f60002032600020360000203940002040000020434
00020496000204ca0002053000020564000205c6000206860002076a0002
08900002097600020a2400020ad400020cd800020ed40002103c00021188
0002138a000215540002161e000216f20002179e0002186c000219340002
1a2200021b2800021c0200021d3200021e5200021f2200021f3200022050
0002214c0002225a0002235c00022374000223a6000223d4000223ec0002
25720002268e00022766000228880002298200022ab200022ba000022cec
00022df600022e0600022f0600022fb4000230e600023200000232800002
339e00023446000235b8000236ca0002381400023824000238be000239d2
00023aba00023b6c00023c5600023d7a00023e7a00023f5800023f680002
40a2000241bc0002429e000243d0000244be000245d0000246f600024706
000247da000248ec0002496600024a7a00024b1400024c2000024cfc0002
4dca00024eaa00024f7c0002503e0002512e0002521c000252fe00025440
0002557a000256760002574a000258a400025998000259c400025a0c0002
5a8a00025a9a00025adc00025b1e00025b6200025b8800025bb000025bda
00025c0200025c2c00025c5600025c6600025c9a00025ce800025d620002
5d9200025dde00025e0e00025e3e00025fb2000261020002613200026162
00026192000261c2000261e80002620e0002625000026292000262c20002
62f200026320000263460002636c00026394000263c4000263f400026518
00026602000266320002666200026696000266ca000266fa0002672a0002
675e00026792000267c2000267f2000268260002685a0002688a000268ba
000268ee000269220002695200026982000269b6000269ea00026a1a0002
6a4a00026a7e00026ab200026ae200026b1200026b3800026b5e00026c86
00026dbc00026e8c00026f7c00026fac00026fdc0002709a000271f00002
7320000273bc0002745400027484000274b40002758e000276c8000276fe
0002774c000277f00002782400027882000278b2000278e2000279120002
795e0002798e000279be00027ad600027be000027d0800027e5e00027f2e
00028076000281c400028312000283e80002854a0002855a0002856a0002
86ac000287980002886200028a0200028a1200028afc00028c0400028d6c
00028e3400028f3a0002907400029136000291bc00029244000293360002
93f20002947200029576000296ae000297d60002991800029a0e00029b0a
00029bfc00029c0c00029d4600029e8800029fc40002a03c0002a0bc0002
a1860002a21c0002a2e60002a3700002a3e60002a4cc0002a5d00002a760
0002a80a0002a8fa0002a9a60002aa980002ab6e0002ac400002ad800002
ae840002af580002afc20002b0d40002b15a0002b2060002b2d40002b3aa
0002b4a40002b5fa0002b6ca0002b7a80002b88c0002b9700002ba8e0002
bb680002bc620002bd900002bda00002be820002bf480002bf9e0002c0e6
0002c1f80002c30a0002c4860002c6540002c8360002c9c80002cb380002
ccfa0002ce900002cff60002d09e0002d2b80002d3740002d43e0002d538
0002d5e80002d6880002d71a0002d7d80002d8e20002da100002dad40002
dae40002daf40002db040002db140002db240002db700002dbbc0002dc1e
0002dd080002dd180002dd280002dd920002de000002de2c0002de3c0002
de4c0002de780002deae0002def00002df380002df820002dfb00002dffa
0002e0440002e07a0002e0b20002e0fa0002e12a0002e1820002e2440002
e3640002e3a80002e4ea0002e5b00002e69a0002e6d00002e7140002e758
0002e79c0002e7d20002e8040002e8460002e8b00002e9020002e9120002
e98a0002ea100002ea800002eae20002eb680002ebc80002ec320002eca6
0002ed160002ed740002ee1a0002eeb20002ef1e0002efac0002f0060002
f0740002f11e0002f1c40002f25a0002f2ca0002f34c0002f3b00002f45c
0002f51a0002f5c60002f6580002f6b60002f7220002f7780002f7fa0002
f8780002f8fe0002f98a0002f9e40002fa500002fac00002fb2e0002fb9e
0002fc220002fcb20002fd180002fd920002fe0e0002fe860002ff2c0002
ffc400030054000300b200030150000301cc0003025e00030302000303ac
00030444000304a0000304f40003055c00030602000306ac000307760003
081c0003087e000308d600030936000309c400030a4a00030ad800030b38
00030b9c00030c0600030c6e00030cd600030d4e00030dd600030e6a0003
0ed600030f3e00030fa20003104e0003110e000311bc0003124a000312a8
000313140003138400031428000314ce0003159200031634000316980003
17280003179a00031832000318b00003192a0003199600031a2400031a80
00031ade00031b6400031be000031c4800031cac00031d0000031d6e0003
1dd600031e5400031eca00031f4400031fc40003202000032086000320ea
0003218a0003222c000322ea0003239a000323f60003246e000324cc0003
2556000325ee0003267c000326e200032740000327ce00032840000328da
0003296e000329de00032a4e00032ac600032b2400032b8400032bfe0003
2c5800032cb800032d1200032d6e00032dd600032e3400032e6200032e8e
00032eda00032f0800032f5200032fba00033038000330a2000330ce0003
311000033182000331ee00033236000332480003325a0003326c0003327c
000332bc00033302000333380003336e000333a0000333ee000334380003
346e000334a4000334ea0003351e0003358c0003360000033648000336ac
000336fe00033710000337220003374c00033786000337f20003385a0003
38b80003390200033948000339c2000339f200033a1e00033a6a00033ae6
00033b1800033b4400033b8a00033bcc00033c1400033c4e00033c8a0003
3d0600033e2000033e8e00033ed400033f1600033f5e00033fda00033fec
00033ffe0003403600034070000340b6000340f600034124000341f80003
42b00003439a000343ee0003442a0003474a000347c20003481a00034858
000349aa00034a9e00034b1c00034c2200034cea00034dbc00034eec0003
4fbe000350f00003519000035264000352de000353ac000353bc000353fe
0003543600035578000356c800035796000357c0000357f40003592a0003
5a6000035bd200035cf600035dfc00035ee000035fe4000360800003612a
00036242000362c60003642800036516000366540003679e0003686e0003
696200036a2a00036b7c00036c9800036d8c00036ea400036ffc00037132
00037210000372e00003739e000374da000375fe0003760e0003761e0003
762e000376cc00037770000377a0000377d00003780000037830000379d6
00037ae800037bec00037d2400037e8400037fbc0003808e000381720003
82b00003840c00038580000386ca0003889200038a1800038be000038d6a
00038e7400038f6c000390ac000391e2000392760003930a0003933e0003
9372000394e0000396540003978a0003988800039aae00039c6600039cc6
00039cf600039d2600039e2000039ef600039ff40003a06e0003a0c60003
a1180003a1720003a33c0003a54c0003a67a0003a7940003a8ba0003a9d2
0003aaf20003ac6a0003ad5e0003ae4c0003afb00003b0ce0003b2400003
b3cc0003b5140003b6320003b6f40003b7ae0003b8c40003b9d40003bb5e
0003bcb60003bddc0003beea0003bf760003c0a80003c1640003c2720003
c3460003c4180003c53c0003c6620003c7a60003c8e20003c8f20003c922
0003c9520003ca8a0003cbc40003cc800003cd3a0003ce2e0003cf120003
cfda0003d0960003d1640003d2340003d3320003d44c0003d4980003d4c8
0003d4f80003d52c0003d5600003d5700003d5800003d5b00003d5e00003
d6140003d6480003d67c0003d6b00003d6e40003d7160003d8120003d822
0003d8520003d8820003d8b60003d8ea0003d91e0003d9520003d9860003
d9ba0003d9ee0003da200003da500003da800003dab40003dae80003db1c
0003db500003db840003dbb80003dbec0003dc200003dcd80003dce80003
de340003dfba0003e10c0003e2220003e3400003e4340003e5500003e66c
0003e7880003e89e0003e9820003ea4a0003eb200003ecc20003ed160003
eda80003ee120003ee740003eef40003ef540003ef860003f0780003f0de
0003f11a0003f1980003f2000003f2660003f3160003f4e20003f5820003
f5da0003f6080003f6440003f6b00003f7660003f7d80003f8400003f8da
0003f9300003f96c0003f99c0003fa020003facc0003fb220003fb5c0003
fbb80003fc160003fcc20003fd820003fdf00003fe660003fed40003fefc
0003ff240003ff540003ff820003ffa80003ffce0003fff40004001a0004
005c0004009e000400ce000400fc00040122000401480004016e00040194
000401ba000401e0000402060004022c00040260000402ac000402e00004
032c00040352000403780004039e000403c4000403f40004042400040454
00040484000404b4000404e400040514000405440004056a000405900004
05c4000405f80004061c00040640000406660004068c000406b2000406d8
0004070e0004075a0004078a000407ba000407e0000408060004082c0004
0852000408780004089e000408e000040922000409480004096e00040994
000409ba000409ea00040a1a00040a4a00040a7a00040aa000040ac60004
0af600040b2600040b4c00040b7200040b9800040bbe00040be400040c0a
00040c3e00040c8a00040cc000040d1000040d4400040d9000040dc40004
0e1000040e4000040e7000040ea000040ed000040f0000040f2e00040f54
00040f7a00040fbc00040ffc000410220004104800041078000410a80004
10ce000410f40004112800041174000411a8000411f40004123600041278
000412a8000412d8000412fe000413240004134a00041370000413960004
13bc000413e40004140c00041432000414580004147e000414a4000414d8
000415240004155a000415aa000415da0004160a00041630000416560004
1686000416b6000416dc00041702000417320004176200041796000417ca
000417fa0004182a0004185a0004188a000418b0000418d6000418fc0004
1922000419480004197c000419b0000419e400041a1400041a4400041a74
00041aa400041ad800041b0c00041b4000041b7400041ba800041bdc0004
1c0200041c2800041c5200041c7c00041ca600041cd000041cfa00041d24
00041d5400041d8400041db600041de800041e1c00041e5000041e7a0004
1ea400041ece00041ef800041f2200041f4c00041f7c00041fac00041fe0
00042014000420480004207c000420b0000420e40004210e000421380004
21620004218c000421b6000421e00004220a000422340004226200042290
000422c2000422f400042326000423580004238a000423bc000423e60004
24100004243a000424640004248e000424b8000424e20004250c0004253c
0004256c000425a0000425d4000426080004263c00042662000426880004
26b0000426d8000427020004272c0004275c0004278c000427c0000427f4
000428280004285c00042890000428c4000428ee00042918000429420004
296c0004299c000429cc00042a0000042a3400042a6800042a9c00042ad0
00042b0400042b2a00042b5000042b7a00042ba400042bce00042bf80004
2c2000042c4800042c7800042ca800042cd600042d0600042d3600042d66
00042d9400042dc200042df200042e2200042e5200042e8200042eb20004
2ee200042f2400042f6600042faa00042fee0004303200043076000430ba
000430fe000431360004316e000431aa000431e6000432220004325e0004
329a000432d6000433160004335600043398000433da0004341c0004345e
000434a0000434e20004351e0004355a00043596000435d20004360e0004
364a00043686000436c200043704000437460004378a000437ce00043812
000438560004389a000438de000439160004394e0004398a000439c60004
3a0200043a3e00043a7800043ab200043ae200043b1200043b5400043b7a
00043bbc00043bec00043c2e00043c5e00043c8e00043cb400043cdc0004
3d0200043d5c00043d9400043dee00043e6a00043f1e00043f5e00043f82
00043fc200043ff2000440320004405a00044084000440ac000440d60004
40fc000441800004420a000442d2000443000004432e0004437a000443c6
000443f40004444000044470000444a0000444c8000444f2000445700004
45f0000446b0000446e0000447100004475e000447ac000447dc0004480c
0004483c0004488a000448ba000448ea000449140004493e000449680004
49de00044a5c00044a9e00044ae000044b0600044b4800044b7800044bba
00044be000044c0800044c2e00044c5600044c7c00044cc400044d160004
4e1c000450220004518e00045340000455300004555600045798000458a6
000459b400045c1400045d7c00045f9200045fcc0004600c0004605a0004
60ac0004614c000461c4000463360004649a00046626000466de00046822
0004692000046a0e00046b3400046b8600046bd800046c3000046c860004
6cec00046d2c00046d9c00046e1a00046e9400046ee200046f1400046f44
00046f7400046fa400046fde0004701000047064000470b8000471040004
7168000471da0004723000047286000473100004735c000473b4000473e0
0004740c0004741c0004742c000474be0004759a00047734000478420004
78520004790c000479fa00047a7600047a8600047afc00047b7a00047b8a
00047c6200047c7200047d2800047d3800047d4800047e3600047ef80004
8032000481de000482ca00048360000483f000048488000484980004856e
000485dc000485ec000486a000048794000488a4000488b4000488c40004
88d4000489aa00048a9200048b8e00048bde00048bee00048bfe00048c0e
00048d3000048d4000048de000048ed200048fde0004911a0004920c0004
929800049324000494760004951c00049560000495fc000496da00049730
0004982e000498fe00049a0200049b3800049c7a00049d4e00049e8c0004
9ef400049fcc0004a0d80004a22a0004a3860004a4c40004a6f20004a82e
0004a95e0004aa520004ab660004ac8e0004ad880004af360004afb20004
b0800004b1b20004b2a20004b3a80004b4800004b5220004b5ca0004b6ea
0004b7be0004b8860004b9380004ba540004bad80004bbec0004bd700004
be3c0004bf760004c10a0004c1c80004c2380004c2c40004c37e0004c3f6
0004c5880004c6480004c7960004c9340004c9f80004cb2c0004cb880004
cc4a0004ccec0004cdac0004ce5c0004ceea0004cfe20004d0400004d18a
0004d25a0004d3400004d3760004d39c0004d3da0004d3ea0004d3fa0004
d40a0004d41a0004d42a0004d43a0004d44a0004d45a0004d46a0004d47a
0004d48a0004d48a0004d5c20004d5d20004d6c40004d7d60004d9700004
db420004dd060004de2e0004df9a0004e1060004e1a40004e2a20004e41e
0004e5120004e5d60004e6100004e6c80004e7880004e8200004e8780004
e9d20004eac00004ebd60004ecec0004ed6c0004ede40004ee3a0004ee8e
0004eec40004ef580004efc40004f18c0004f3560004f4c60004f7200004
f8b20004fa700004fbb80004fcf80004fe7a0005001800050178000502f2
0005039c000504aa0005069400050734000507d40005092e00050a5e0005
0b9800050d0400050e7200050f9200051190000512c60005137c000514fe
00051628000517880005187e00051a2400051b7400051c4400051d460005
1e1000051f98000521080005228a000524080005255c000526c80005283c
0005292a00052a4e00052b2800052c4200052d6a00052eb800052fac0005
314000053298000533920005346c00053534000536e2000537c80005387c
000538c800053914000539a600053a8200053b0600053bc200053c1e0005
3d8800053edc00053fe0000540e2000541ec0005431a0005448600054658
000547060005481c0005494e00054a3800054b0e00054bfc00054c7e0005
4d2000054e1600054f20000550700005517c000551fc0005527c0005537a
000553d60005548a000555be000556be000557e0000558b6000559aa0005
5b4c00055c7a00055dd000055f3800055fac00055ff6000560400005608a
000560d40005612600056178000561ca0005621c00056264000562ac0005
62f40005633c0005638c000563dc0005642c0005647c000564c600056510
0005655a000565a4000565f6000566480005669a000566ec000567480005
67a40005681600056888000568e600056944000569b800056a2c00056ad8
00056c2a00056d6600056d7600056e920005703000057102000571f20005
730200057458000575760005765a00057766000578900005796000057986
000579b4000579c400057ac200057bca00057cc200057db200057ea40005
7f7e0005809c000580ac000581760005824400058282000582c200058300
000583400005839a000583f20005847c000584e20005856e000588180005
88880005895800058a3800058b0800058be200058ce800058e2800058fe6
00059124000591ee000592ee000593f6000595060005959e000596380005
9752000597be00059834000599500005998e000599ec00059a2a00059a5c
00059aa000059ae200059b1200059c3a00059d2e00059e5200059ede0005
9f4400059fd20005a0a40005a1360005a1e60005a2ae0005a3060005a3d2
0005a48e0005a5060005a5160005a5260005a5360005a5460005a6680005
a67a0005a7580005a7f80005a8f60005aa080005aa660005aaaa0005aafa
0005ab4a0005ab9a0005abea0005ac4e0005aca60005ad140005ad720005
adf60005af0c0001000009f800f2003c005a000500020010002f00550000
0281024d000400040000005303ea0000000300000000006a000000000003
00000001000a006a0000000300000002000c00740000000300000003006c
00800000000300000004001800ec0000000300000005001800bc00000003
00000006001c010400000003000000070062012000000003000000080030
000e0000000300000009008a0182000000030000000d02aa020c00010000
00000000003504b60001000000000001000504eb00010000000000020006
04f00001000000000003003604f60001000000000004000c052c00010000
00000005000c05140001000000000006000e053800010000000000070031
05460001000000000008001804bd00010000000000090045057700010000
0000000d015505bc0003000104030002000e07110003000104030004001a
071f0003000104050002000e07390003000104050004001a074700030001
04060002000c076100030001040600040018076d0003000104070002000c
07850003000104070004001807910003000104080002000c07a900030001
04080004001807b50003000104090000006a00000003000104090001000a
006a0003000104090002000c00740003000104090003006c008000030001
04090004001800ec0003000104090005001800bc0003000104090006001c
010400030001040900070062012000030001040900080030000e00030001
04090009008a0182000300010409000d02aa020c00030001040a0002000e
071100030001040a0004001a071f00030001040b0002001407cd00030001
040b0004002007e100030001040c00020010080100030001040c0004001c
081100030001040e00020008082d00030001040e00040014083500030001
04100002000e08490003000104100004001a08570003000104130002000e
08710003000104130004001a087f0003000104140002000c078500030001
04140004001807910003000104150002000e08990003000104150004001a
08a70003000104160002000e08c10003000104160004001a08cf00030001
04190002000c08e90003000104190004001808f500030001041b0002000e
090d00030001041b0004001a091b00030001041d0002000c078500030001
041d00040018079100030001041f0002000c093500030001041f00040018
09410003000104240002000e09590003000104240004001a096700030001
042a0002000e098100030001042a0004001a098f00030001042d0002000c
09a900030001042d0004001809b500030001080a0002000e071100030001
080a0004001a071f0003000108160002000e08c10003000108160004001a
08cf000300010c0a0002000e0711000300010c0a0004001a071f00030001
0c0c000200100801000300010c0c0004001c081100a90020003200300031
003100200054006800650020004d006f006e006f00740079007000650020
0043006f00720070006f0072006100740069006f006e002e00200041006c
006c00200052006900670068007400730020005200650073006500720076
00650064002e0041007200690061006c004900740061006c00690063004d
006f006e006f0074007900700065003a0041007200690061006c00200052
006500670075006c006100720020004900740061006c00690063003a0056
0065007200730069006f006e00200035002e0030003800200028004d0069
00630072006f0073006f0066007400290041007200690061006c00200049
00740061006c006900630041007200690061006c002d004900740061006c
00690063004d00540041007200690061006c002000690073002000610020
00740072006100640065006d00610072006b0020006f0066002000540068
00650020004d006f006e006f007400790070006500200043006f00720070
006f0072006100740069006f006e002e004d006f006e006f007400790070
006500200054007900700065002000440072006100770069006e00670020
004f006600660069006300650020002d00200052006f00620069006e0020
004e006900630068006f006c00610073002c002000500061007400720069
0063006900610020005300610075006e0064006500720073002000310039
003800320059006f00750020006d00610079002000750073006500200074
00680069007300200066006f006e007400200074006f0020006400690073
0070006c0061007900200061006e00640020007000720069006e00740020
0063006f006e00740065006e00740020006100730020007000650072006d
0069007400740065006400200062007900200074006800650020006c0069
00630065006e007300650020007400650072006d007300200066006f0072
0020007400680065002000700072006f006400750063007400200069006e
0020007700680069006300680020007400680069007300200066006f006e
007400200069007300200069006e0063006c0075006400650064002e0020
0059006f00750020006d006100790020006f006e006c0079002000280069
002900200065006d0062006500640020007400680069007300200066006f
006e007400200069006e00200063006f006e00740065006e007400200061
00730020007000650072006d006900740074006500640020006200790020
00740068006500200065006d00620065006400640069006e006700200072
00650073007400720069006300740069006f006e007300200069006e0063
006c007500640065006400200069006e0020007400680069007300200066
006f006e0074003b00200061006e00640020002800690069002900200074
0065006d0070006f0072006100720069006c007900200064006f0077006e
006c006f006100640020007400680069007300200066006f006e00740020
0074006f002000610020007000720069006e0074006500720020006f0072
0020006f00740068006500720020006f0075007400700075007400200064
0065007600690063006500200074006f002000680065006c007000200070
00720069006e007400200063006f006e00740065006e0074002ea9203230
313120546865204d6f6e6f7479706520436f72706f726174696f6e2e2041
6c6c205269676874732052657365727665642e417269616c4974616c6963
4d6f6e6f747970653a417269616c20526567756c6172204974616c69633a
56657273696f6e20352e303820284d6963726f736f667429417269616c20
4974616c6963417269616c2d4974616c69634d54417269616c2069732061
2074726164656d61726b206f6620546865204d6f6e6f7479706520436f72
706f726174696f6e2e4d6f6e6f7479706520547970652044726177696e67
204f6666696365202d20526f62696e204e6963686f6c61732c2050617472
69636961205361756e646572732031393832596f75206d61792075736520
7468697320666f6e7420746f20646973706c617920616e64207072696e74
20636f6e74656e74206173207065726d697474656420627920746865206c
6963656e7365207465726d7320666f72207468652070726f647563742069
6e207768696368207468697320666f6e7420697320696e636c756465642e
20596f75206d6179206f6e6c792028692920656d62656420746869732066
6f6e7420696e20636f6e74656e74206173207065726d6974746564206279
2074686520656d62656464696e67207265737472696374696f6e7320696e
636c7564656420696e207468697320666f6e743b20616e64202869692920
74656d706f726172696c7920646f776e6c6f6164207468697320666f6e74
20746f2061207072696e746572206f72206f74686572206f757470757420
64657669636520746f2068656c70207072696e7420636f6e74656e742e00
430075007200730069007600610041007200690061006c00200043007500
720073006900760061006b00750072007a00ed0076006100410072006900
61006c0020006b00750072007a00ed00760061006b007500720073006900
760041007200690061006c0020006b00750072007300690076004b007500
720073006900760041007200690061006c0020004b007500720073006900
7603a003bb03ac03b303b903b10041007200690061006c002003a003bb03
ac03b303b903b1004b00750072007300690076006f006900740075004100
7200690061006c0020004b00750072007300690076006f00690074007500
4900740061006c00690071007500650041007200690061006c0020004900
740061006c006900710075006500440151006c0074004100720069006100
6c002000440151006c00740043006f0072007300690076006f0041007200
690061006c00200043006f0072007300690076006f004300750072007300
69006500660041007200690061006c002000430075007200730069006500
66004b0075007200730079007700610041007200690061006c0020004b00
75007200730079007700610049007400e1006c00690063006f0041007200
690061006c00200049007400e1006c00690063006f041a04430440044104
3804320041007200690061006c0020041a04430440044104380432004b00
750072007a00ed007600610041007200690061006c0020004b0075007200
7a00ed00760061013000740061006c0069006b0041007200690061006c00
20013000740061006c0069006b0050006f016100650076006e006f004100
7200690061006c00200050006f016100650076006e006f006e0067006800
6900ea006e00670041007200690061006c0020006e00670068006900ea00
6e006700450074007a0061006e00610041007200690061006c0020004500
74007a0061006e006100b15430bb02aa0001004002a8b2393340b802a8b3
10153240b802a8b2073340b802a9b30c12327f411102a600af02a600bf02
a600ef02a60004003002a6004f02a6005f02a60003004002a6b28f3340b8
02a6b25f3340b802a6b34e513280b802a6b34c4d3240b802a6b340483240
b802a6b30a0d3240b802a6b3093a3240b802a6b330333280b802a4b34578
3240b802a4b3323a3280b802a4b32a313240b802a4b32425327f411002a4
000100ef02a40001000f02a4002f02a4003f02a4007f02a40004004002a4
b3151d3280b802a4b309143240b802a3b31a1b320fbf02a3007f02a300ef
02a30003004002a3400a091432124f064f0702ef413701eb0001009f01eb
0001007f01eb0001005f01eb0001003f01eb0001002f01eb0001000f01eb
0001007f01ea000100ef01ea000100bf01ea000100af01ea0001002f01ea
0001003f01ea0001004f01ea0001006f01ea0001007f01ea000101ed01ed
01ec01ec01eb01eb01ea01ea4012002c01001f01102c01101f01402c0140
1f01b90109010bb2341f91b8010b4037341f2e20431f3220431f3320471f
2c20431f1f20431f7b2a481f2d2a481f212a441f37010001010009010200
0800171700000012110840b801acb7fe870dfd870d0009b8013fb22a4c1f
4109013a00ba0401001f0136001f019a001f0104b22a721fbe0101002001
9a001f0100002002abb21ffb2db80156b21ffa1fb80801b21ff91fb80201
40131ff81fe41ff71fbb1ff51f4a1fc92aab1fb92db8019ab21fb81fb804
01b21fa02ab802ab400f1f8b1f521f7b2ae41f781f6c1f6e20b80401b21f
6c21b80401400b1f632aab1f5a2a5a1f5820b802abb21f4e20b80156b21f
471fb8019ab61f452aab1f442ab80101b61f401f891f332db80401b21f32
21b80401b61f311f721f2e1fb8019ab21f2c1fb80401b21f291fb80801b2
1f281fb80801b61f271f6c1f2221b8040140451f550d090d093790dc0790
a80790a607907e07904107903b07903607903507903007902f07902b0790
2507901d071408120810080e080c080a080808060804080208000814b8ff
e0402b000001001406100000010006040000010004100000010010020000
01000200000001000002010802004a00b013034b024b5342014bb0c06300
4b6220b0f65323b8010a515ab005234201b0124b004b544218b0382b4bb8
07ff52b0372b4bb007505b58b101018e59b0382bb00288b801005458b801
19b101018e851bb0124358b900010119858d1bb9000101ff858d59590016
763f183f123e113946443e113946443e113946443e113946443e11394660
443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b
2b2b2b4b5079b9001f0158b3071f3d072b2b4b5379b900900158b307903d
072b2b181db0964b5358b0aa1d59b0324b5358b0ff1d594bb09353205c58
b901ae01ac4544b901ad01ac45445958b9032c01ae455258b901ae032c44
59594bb8019a53205c58b9003f01ae4544b901ae01ae45445958b908d600
3f455258b9003f08d64459594bb8040153205c58b9002301ae4544b90020
01ae45445958b916200023455258b9002316204459594bb8040153205c58
b9001e01ad4544b9002a01ad45445958b917e0001e455258b9001e17e044
59594bb8040153205c58b1ba234544b1232345445958b9162000ba455258
b900ba16204459594bb03c53205c58b11f1f4544b1211f45445958b90102
001f455258b9001f01024459594bb04653205c58b11f1f4544b12d1f4544
5958b9012e001f455258b9001f012e4459594bb8030153205c58b11f1f45
44b11f1f45445958b90d20001f455258b9001f0d204459592b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b65422b2b45695342014b5058b108004259435c58b108004259161070
3eb0124358b90d193ea51bba00d203eb000b2b59b00a2342b00b2342003f
3f182b103c012f060cb0062342b0072342b0124358b93b21187e1bba0400
01a8000b2b59b00c2342b00d2342b0124358b92d412d411bba0400040000
0b2b59b00e2342b00f2342b0124358b9187e3b211bba01a80400000b2b59
b0102342b0112342002b2b2b2b2b2b2b2b2b2b2b74747575757500184569
444569444569444569447373737373737373757373737373737374004bb0
2a534bb03f515a58b1070745b040604459004bb030534bb03f515a58b10b
0b45b8ffc0604459004bb02e534bb03c515a58b1030345b040604459004b
b02e534bb03c515a58b1090945b8ffc0604459435c58b64f2c014f1f0137
2b7474592b732b2b2b7373742b2b2b2b2b2b2b2b2b2b2b2b74732b2b2b2b
742b000000>
[16173 16065 15681 16357 15501 16301 16041 16313 15577 16241 16101 16289 16325
16325 16309 16293 16337 16369 15989 16357 15805 16305 17461 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 15452 68 <0002005affe80436043e0027003500c140515b2d01250a250b230c252c3a
014a01062f0839085721672104342c2a0b042f28260d030f00251e23282b
03130d0a321a282b2b2c0a0d140a0a0d16241f17011752131f1a07260a32
1f030b17580f160116b801c3401e2f200626360f201e0058102370230223
ff1e40111234001e101e6f1e031ebc027800370026027800182b4e10e65d
2b4df65ded10ed4e10f44dfdf65ded003fed3f3fedfd5de4870e2e2b0e7d
10c400111239391112393901111239111217391217393130015d005d5d25
060623222635343636373624373635342726232206072736363332171615
140703061514172326130606070e021514163332363603105eae6393b451
86613d01554a152e3f79729121b738f3b9c57358193b1c16b70f3d265766
9e824269615aa66084514bad87598953120c0e1d4a313f2432655d109ea8
5e46705570fef87e4f325e3401e60f10090e2b5e394c625faa00>Arial-ItalicMT AddT42Char 
2 230 71 <0002006cffe804c905ba000f001f00a8b9001dffe0b310113412b8ffe040
5f0e11340903060e041d1903690cb80db60e07160e141d29072315470e57
0e061417012f01210a2c15560a660a053a01320a3c154b01420a4a150618
0f0f0c0b0b14090c001b1f09070f0e0a141f020b0dcc0e580ccc100f5f0f
6f0fa00f040fb80124b621102005262026b9012500182b4e10f44ded4e10
f65d4de4fde4003fed3f3c3fed3f1112392f87100e7dc43130005d5d0171
5d5d2b2b2506232226353412363332171333012301141616333237363534
2623220e0203109ba997c99fef78c66578b4fecea7fe302c6a4a7b648684
64416b69489ab2dfd4c20141a0bf023bfa4601bd6f805580aafa7e8e3a8b
d600>Arial-ItalicMT AddT42Char 
2 3662 81 <0001004400000439043e001700ef40502407350702230224083602460856
02570c660279087811aa11bf08bb11cc08c9110e03161702040603021717
2300011401401039700101000001090c0c230d1014104010397210010d0d
10131f060703b801fe401102020106280c170d0d000a0100100d1009b801
b7b20c5810b801b7400d3f0d01100d4f0d5f0d6f0d040dbb027d00190002
01bab2175801b801ba40132f003f004f005f000400561800170d17563e18
2b2b2b4e10f45d4de4fde410f45d71e4fde42b103c103c003f3c103c3c2b
3f3c001910e4183fed87052e5d2b2b0e7d10c487052e185d2b2b7d10c400
111239870ec4c43130015d005d3313330736363332161514070323133635
3426232206070344dea4276bba6181931a87b58d1549458bd933670426b9
6d648c753b7ffd7d02a1622f3542c8f3fe12>Arial-ItalicMT AddT42Char 
2 4910 85 <000100440000035b043e000f00f4407b090386099308910904060d160da6
08c704e904fa03062602280438013602480179018901070e0f02030b020f
0f23000114000001095808060b1f0607022801060f28000a0202090f0f58
00400e103400090101091210002000300003000010000260007000d000f0
0004002f003f004f00030056100901100017cbb9013c00182b2b2b3c012b
7a10f25d01182f5d7172435c58b90000ffc0b314213f00b8ffc040090e17
3f00400d163f00b8ffc0b32d173f00b8ffc0b21e123f2b2b2b2b2b592b3c
012f2b7a102bf101182f2b7ac001182f003f2b3c003f2b3c003fed3fed87
052e2b7d10c4001239870ec43130015d5d71331333073636333217072623
2206030344dea02d529d52364f4a2f385fc8395a0426d97b7627a822d4fe
edfe5600>Arial-ItalicMT AddT42Char 
1 0 0 <0002010000000500050000030007004ab10201bb012e000600070237b200
0504b8012eb403000a0704b8012eb5010019080605bb012e000200030143
b3095bbe182b10f63cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd3c3130
211121112521112101000400fc2003c0fc400500fb002004c000>Arial-ItalicMT AddT42Char 
Arial-ItalicMT /CharStrings get begin
/a 68 def
/d 71 def
/n 81 def
/r 85 def
end
Arial-ItalicMT /Encoding get
dup 97 /a put
dup 100 /d put
dup 110 /n put
dup 114 /r put
pop
end
%ADOEndSubsetFont
/EICMAL+Arial-ItalicMT /Arial-ItalicMT findfont ct_VMDictPut
/EICMAL+Arial-ItalicMT*1 
[97{/.notdef}rp /a 2{/.notdef}rp /d 9{/.notdef}rp /n 3{/.notdef}rp /r 
141{/.notdef}rp]
EICMAL+Arial-ItalicMT nf
EICMAL+Arial-ItalicMT*1 [7.98 0 0 -7.98 0 0 ]msf
189 114.36 mo
(rand)
[2.69957 4.43848 4.43848 0 ]xsh
/EICMAL+Arial-ItalicMT*1 uf
/EICMAL+Arial-ItalicMT uf
/Arial-ItalicMT uf
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
